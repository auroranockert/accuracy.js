ExpTest = TestCase("Exp")

ExpTest.prototype.testGenerated = function () {
	switch (window.accuracy) {
	case 'exact':
		window.ulp = 1; break
	case 'OpenCL':
		window.ulp = 4; break
	default:
		window.ulp = 2; break
	}
	
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.705795134423042e-195, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.687423637891058e+124, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6017211692399345e+186, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.15540501847859e-193, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2330695370340825e+122, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1395042149514525e-144, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.514701556184049e-306, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -29980837806443410000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.27862882149675e+210, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0390171940078928e+278, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.74517086823149e-26, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.6930486940736695e+68, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.060710334646747e+185, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.081663022163234e-292, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4905922377685344e+83, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2224342142877995e+234, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.985863083708668e+183, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.276762025253793e+211, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.397636939210125e-42, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.1224032964115205e+227, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.873107008667586e+282, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.85878515212256e-41, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0598316800162713e+151, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.167680961225092e-51, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.121702092696219e-35, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.464957261754796e-236, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9463854983328536e+40, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.270332922876163e-118, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.856529172085163e+277, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.299868524135081e+64, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.373660906815851e+221, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2742089588655919e+238, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3962369124658265e-262, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.332905377311309e+191, Infinity)
	assertULP(Math.exp, 0x3F, 0xE9, 0xBC, 0x70, 0x56, 0x1C, 0x9D, 0x52, -0.217841650130545, 0.8042527849073997)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.037570822280597e+249, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4933738313605637e+268, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1392959536842385e+273, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.456205506785482e+198, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0181960854650848e+245, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1402201529915134e+224, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6937643606638276e-141, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.8040137556732994e-301, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.13045608501453e+233, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5736595840834055e+238, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.334462639770143e-208, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.679199406595869e-64, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.490329795680671e-77, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.888280176492182e-288, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5945527186070014e-158, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.554172963016349e+106, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.917049268524078e-120, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 1.6738690853719938e-16, 1.0000000000000002)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.908070397340581e-291, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.40236958162194e+136, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.00572408137197e+139, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.578396552694205e-17, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.762844990225503e-106, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.269326447376954e-101, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.814092233093013e-89, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.40098823957136e-163, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.433373319720066e+103, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.054797539633865e-186, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6693010325042815e+72, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.006883677223818e-122, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8254492220597944e+284, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.822261673216227e-104, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4038658355275433e-171, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6553454673084296e-47, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.409825918097881e-125, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.182150823871945e+37, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9528494475115393e+242, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5425205346788184e+124, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.409000713002229e-30, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6057865404593164e+212, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.442448492518459e+204, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.757275443700212e-278, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.581922794355844e-256, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -154540543581327380000000000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -503371212740720960.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.715263079423783e-130, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7444064837572044e-36, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.987375127730932e+234, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0840653917634902e-74, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.484787439030425e-200, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3568535438799184e+100, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0004163071307883e+67, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.28558716721199e+245, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.540835546847387e-162, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.368083424594343e-222, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.031792528828868e-124, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6380337487930797e+243, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.678087036779962e+169, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.962396990615872e-99, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.306653165069619e+291, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8686171919646003e-127, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.836115662357433e-89, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7314813355024853e-96, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1765777541021275e-219, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6133308204999227e-266, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9295701136303468e-120, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4606037632062185e+282, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.7848140078137294e+39, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xF7, 0x4C, 0x21, -6.331985491070414e-11, 0.9999999999366801)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.665872342409392e+220, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5424496014441508e+39, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.145195053609447e+124, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.550155183395517e-152, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2103620768109315e-209, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0950592302102986e+35, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.885198824310446e-196, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7741501232611844e-308, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.442775290886902e+111, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1003468016643056e+306, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.107549505146448e+87, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -39311940085.05885, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.063623041967928e+105, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.878675079602854e-217, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x2C, 0x5B, 0x27, 0xDF, 1.652392501399356e-07, 1.0000001652392638)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.57595680658541e+99, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.022768680559923e+211, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4752450645663264e+206, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.931335462826126e+37, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8534191236714093e-205, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3750765555497344e+154, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.883460616390473e-182, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.743623037912215e-77, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.154788791824401e-18, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.888371401196783e-187, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.4289479478331816e+307, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.191680727293056e-99, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.213347723257425e-277, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.131986425885702e+158, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2120691809948543e+166, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.142839869148135e-239, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.242329206391086e+215, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0837274569636666e+222, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.413133973082144e+261, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.951845963752166e+236, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7983869134479377e+124, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.836884406185146e-61, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.437853152310284e+94, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.637385612039697e-240, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0098561413419606e+98, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2116904357437363e+149, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.214169380605953e-279, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9691241489322432e-250, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.254119442251105e-112, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7864524213841206e-208, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6888545271283608e+301, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.222165317782529e-296, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4863413485711162e-86, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.436020764676947e-211, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2010459614802606e-252, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.656134942939775e-156, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5674234551930406e+249, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7332336900950558e-180, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.939708394097335e-164, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.714657675412441e+99, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.949912552544418e+187, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5692493855018354e+276, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.877775045011287e-295, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.564846437414852e-134, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.462353848095758e+277, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2821035129146937e+97, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.011862294297016e+274, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3928752516255872e+38, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0954070562988276e-201, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.15747622045358e+269, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5383207346402089e+87, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.828582007852646e+257, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6909142730225753e-274, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.637168447575884e-304, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.286324462070532e+81, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8122073533293372e+135, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.637539648380017e+115, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x07, 0x25, 0x13, 0x08, 0xFA, 6.813809738542847e-06, 1.0000068138329525)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7686213809571276e+201, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3485606554607482e-62, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6459109679032672e-295, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0731470907822595e-145, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1138690646140842e+142, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.409271705010301e-83, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5725858792614995e+233, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3140557754285324e+204, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9714368378169e-281, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.757231800389722e-308, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.787550650238332e+228, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.986782369058597e-22, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.689575537604291e+248, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2979847921832009e-71, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3961747162250486e-73, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.833380490120355e-156, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1724813625201529e-224, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x1C, 0x3F, 0x6C, 0x54, 0x63, 0xAD, 0.006872750989742313, 1.0068964225413126)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xF8, 0x51, 0xDC, -5.5881124656296505e-11, 0.9999999999441189)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9549799807009827e-201, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.130142381260403e-241, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8684068272480187e-59, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6614534368693266e+55, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.463963779019636e-250, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8112361031132705e-27, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -56138255097879704.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.501234245516443e+128, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0804123261350259e-193, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1521195051800527e+128, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.646434777482774e+279, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2410190723656585e+154, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1723487276957916e+41, 0.0)
	assertULP(Math.exp, 0x2F, 0xE5, 0x55, 0xBF, 0xAF, 0x21, 0x1A, 0x60, -177.85106726635198, 5.757883660748491e-78)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.2229603333667745e+119, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5424948287987433e+115, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0715412349012112e+237, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0818893018875035e+90, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.381560380566222e+136, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.258060582376852e-67, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.110644310689823e+101, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.02322692314374e+164, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.487075818913887e-112, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.611653981525951e+130, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.262601257857947e+166, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1567525827081905e-147, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.025197092166685e-260, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7168643885095632e+112, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.152929014283569e-217, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5087555236070832e+263, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3143730630116992e-248, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1048866768429411e+267, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.299577305851475e-36, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.469993407494072e-249, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1429290303312665e+48, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0159949573587606e+214, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3575898199049586e+260, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3067931149144122e+116, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.899422236324158e-258, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xF1, 0x9B, 0xF2, 0x4F, 0x27, 0xD5, -0.0017582383875276864, 0.9982433064080803)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0299557597659694e-20, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.645429932733027e-194, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2359326978079252e+64, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.207216900299655e-227, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1273596110080436e-102, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5018874835938503e-124, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.9001381441643526e+87, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.321090932141252e+160, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.944136178579115e+146, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.435140092169508e-290, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6262772042334936e-219, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.760800066549132e-284, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3066484156342742e-260, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.866839040906535e-157, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.686417301319197e+137, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.644915267063703e+256, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.759663934957804e-162, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8848182347728467e-259, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.567329391968259e-147, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1784062868985713e+113, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1355137818714366e+213, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4983956794364012e-298, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xC2, 0x85, 0x5F, 0xBF, 0x3B, 0xCC, -0.007533064105108909, 0.9924952383097376)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.79180875107049e+210, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.222314015321939e+297, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.984828381040178e+58, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.681469355706403e-31, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3808180724817536e-148, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4903537876201877e+303, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.0506280066499245e-233, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9068888095933406e-166, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4405176817566459e+284, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.5751654164271057e-98, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7642041744460678e+258, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.8484393181199186e-139, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9215941446396936e+55, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0233100965834377e-257, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.943862079890615e-38, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2928858601407534e+180, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0079817860120908e+292, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.456304085981641e-70, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.927142893926328e+275, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.5248978594338025e-294, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.068754260273433e+114, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5897751397282155e+113, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.2214652445192603e-284, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.442633300122743e+262, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2074795204756915e+82, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.461045313383e-265, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2934477584762048e-220, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.685971516876536e+254, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.849530456097093e+110, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.619351651475522e+156, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3596569512839584e-67, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.894495831050429e-181, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.692426230443302e+170, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x02, 0x86, 0x54, 3.673956931411276e-11, 1.0000000000367395)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.79269241174413e-108, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0313361822286635e-226, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.345421885664677e-154, 1.0)
	assertULP(Math.exp, 0x46, 0x50, 0xC5, 0xA2, 0xBE, 0x91, 0xDE, 0xEF, 70.74813539066703, 5315263572345143000000000000000.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.451645848122383e-123, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.345620009822361e-225, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9593475041486305e+130, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5448540459054496e+47, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.38644137753589e+168, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.93449424038257e-219, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.523766174037865e-56, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.415936730673566e+166, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.16004955750733e+143, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5479876779165452e+92, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.604038313343315e-27, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFA, 0x87, 0x1B, 0xCE, 0x30, -2.6093669474039212e-06, 0.999997390636457)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.984089326084061e+62, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.588420263378041e-277, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.351488203192275e-25, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2607131658432979e+186, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3413405010972188e+235, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.640697300614064e-281, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2862904951657765e-103, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0959509292877339e-36, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.625510364554812e-45, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8856500882471944e+264, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8379168290735003e+34, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4101915590127485e-81, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -13979939326320438000000000000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5551153975246102e+93, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.497928007021071e-234, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0120415873278443e-61, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.1681186720190985e+62, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.782067757690254e+228, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.747146803951543e+133, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.282237664741408e+277, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -38088488666.85511, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5790704907199595e+284, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3221275137467576e-77, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3888536741429215e-142, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1339769252908036e+306, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0323822987350368e+89, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9330716637287177e+296, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.59055674313973e+127, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0183926827409786e+273, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFB, 0xD7, 0xDC, 0x0E, -7.742640543635637e-09, 0.9999999922573595)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0329572173798469e+251, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8215190773939663e-101, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.395410213572974e+38, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.463054979348861e-97, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1342611536087535e-23, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.822381469356911e-74, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.372265032364493e+237, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.163487031434762e-269, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1366928637657048e+146, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9871374985985298e+121, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1085223824631565e+95, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -13204991.1184884, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.256079258192972e-290, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.053496856142812e-184, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.24941341152461e-67, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7392990927798614e-77, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.279282860740644e-57, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.758427950015188e+227, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2593344562901294e-124, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.800349236503361e+205, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 31431909503992627000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.416317401830166e+65, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.993833572994392e-99, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5551825970863096e-216, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.345145393581351e+126, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.481551883325145e-59, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.2730924330075186e-304, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0488532229260577e+208, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1140867521951677e+59, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2113036963620947e+268, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.870111127457058e+171, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -672806711658728900000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.852473597148007e+246, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1663189771335426e-122, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1887393230370386e-276, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5480803390517076e+111, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.50910075066788e-110, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.258496854994025e-242, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.480091673901879e-265, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2869538087447455e+192, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 391054273640258250000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.9111973618309855e+165, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.932552252825375e+298, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.974443947292083e+306, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4799380288768932e+246, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.887149350358689e-193, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.99339317602204e-115, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.761490796522442e+117, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.928552524181926e-35, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.276435768320249e+196, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6978415623254145e-308, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 218740046768367750000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4023744164770526e-117, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.826161009973325e+62, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0242345346211777e-282, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.75080374084499e-45, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3265233942025783e-45, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.217047397871087e+300, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.9531517712871605e-229, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.98952104134289e-123, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8855889974504296e-307, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5678563313123008e+235, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -15988762397769888000000000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.797716597486988e-209, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.672503148431511e+104, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4216380801847538e-285, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8821120444295086e+129, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.643080694401655e-76, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.955080466842125e+61, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.342060726212049e+54, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.161199641034255e-278, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5298229550990508e-261, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5237793042885692e+271, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1592890091019046e+149, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7729668032471775e-156, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.879466240364396e-190, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.250389291781092e-298, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.735926641118928e+149, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.876117440343272e+220, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0219027490111982e-280, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.984207902181105e-280, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.675179623630682e-38, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2138279986996864e+270, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7646616505188843e-308, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.61559466773591e-154, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 23446979687.61836, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x07, 0x37, 0x8C, 0xC2, 0x2F, 0xB8, 0.0017604103967801437, 1.0017619608288282)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.070557517756367e-306, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6927533315148799000000000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.108188570813271e-208, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.851026186661052e+115, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5348864528897356e-135, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8483644607306348e+134, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.838017960743737e-279, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.321151987322059e+130, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.268181744029565e+256, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4736363959902232e-59, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9053610491585113e-223, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.022583228661257e+253, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1275567629580485600000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.022784784508199e-38, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.748504291901429e+40, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6497044841899038e-79, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.223775801832648e-73, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0563648983855728e-226, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.568272179380184e-65, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.214881011152356e+279, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2373156572011332e+223, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.842613042766078e-195, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.047198878217972e+101, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5444217200239416e+230, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.650263124245893e+208, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8124787680218005e+245, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2418716354125837e+254, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2703538326104806e-127, 1.0)
	assertULP(Math.exp, 0x2E, 0x93, 0xAF, 0xE9, 0x00, 0xA8, 0x9B, 0xE9, -192.48753882562443, 2.533518342458401e-84)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.947308458442604e+55, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1770977691157766e+131, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.919699005923955e-306, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.142139200224674e+288, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.329987076512113e-68, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4685528740424015e+157, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3697927440630557e-296, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.887467153937858e+258, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9754858298658707e-216, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.732580276219504e-109, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.394897904654298e-227, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8738803960955312e+240, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0077873882698934e+217, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.292505134128907e+84, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.002214434856561e-174, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2170315790685695e-301, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.593009347949728e-128, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.4615149794593996e+199, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.460819852859758e+171, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6073820080169802e-124, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5207264838629196e+249, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7207250189264198e-124, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.29513368076221e-152, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.964654350992893e+262, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2445773170210715e+216, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3187131693602718e-139, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.980996061382496e+109, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.501561538521697e-191, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.819132447813914e-38, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.274263323768739e-147, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.667126984070341e-211, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.641567694202714e-20, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0686640550080462e+207, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.978995979481649e+61, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0526357270090968e+156, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9706205635863666e-71, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5233288899261347e-258, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7094655451575536e+227, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -637459422996881600000000000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.277677733401861e+236, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.10313968005887e-82, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.827969495262985e+241, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3730453861359228e+217, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2169065652916951e-20, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.73650876846897e-106, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.682191034100976e-179, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.094085878013217e+274, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.394514278621079e-85, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2652827716746843e+81, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0767571448405525e-183, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9828895308967413e-141, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6117213886926243e-72, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.462327774364592e-268, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.289317983071086e-272, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3677740599921533e-228, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.701184850827066e+287, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3455581237909385e+254, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.39813535540543e+174, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.609074068639645e-29, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2857506817565173e+288, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0392570003301601e-168, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.024892945352233e-261, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.287780785969948e-47, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7664878770570302e+35, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5889296926113464e+232, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.444034637524612e-285, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8896403839388127e-255, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.222192641467215e+155, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4995692190729815e-293, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.010729895389324e+117, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.821778440345559e+166, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.652434470547084e-255, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.181787837897297e-43, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0927426147832244e-172, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.483474944744485e+115, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.699320202085314e+226, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.857039149592074e-43, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.47370246236945e-53, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1355206417735463e+47, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.552758646950442e+226, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.10306548553603e+221, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.235101263680758e+105, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.677786435605213e+119, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4708481081663353e-114, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.996345807638135e+220, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0004156237466027e+80, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.429486893455884e-159, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5701870964828775e+113, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2779741015689381e-275, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.938900441429155e+223, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5000470217427683e-109, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1202780120798378e-93, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.981790631140985e-60, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.405713470595727e+178, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.233394244078679e-233, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9118220303949664e+33, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -122693.98196161778, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8220076151982267e+271, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.745730660456665e+115, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3495269305277105e-154, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.9648498509869486e+79, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8289153837392146e+166, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.617437816719966e-223, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0788380945830954e-16, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6557439857294307e-253, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.31393597369785e+113, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.808632264132705e+276, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6072445105697993e-157, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4703880184805937e+264, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6494391312084942e+149, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2939016778724297e+152, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.088787712521217e+60, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3413055529383128e-235, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7320906.598147245, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.3210627262257935e-22, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 876403481249713800000000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2276162131093028e-57, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.258736823564961e+163, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1819926379370182e-302, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6992506866214287e-96, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0033107670872209e+242, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.726665333909504e+117, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.740489943394553e-270, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.440727792687493e-47, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1869361602317464e+111, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6987948930281036e-101, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2250451547001474e+137, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.23176982260921e+244, Infinity)
	assertULP(Math.exp, 0x3F, 0xEE, 0x88, 0x52, 0x92, 0x9A, 0xFD, 0x36, -0.046943886557438766, 0.9541409362208586)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4320868063968785e-249, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0586867279815218e+305, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1611239954677664e+192, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3908185549020922e+91, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.644611778741771e+164, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7771715365973896e+218, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.887501583237915e+183, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0573838784603922e-173, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.062717799202728e+241, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0273163986198153e-43, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.761758824793866e-198, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0417099115915633e-25, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3055568092705827e-74, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.310380065320314e-139, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.710755461855803e+72, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8704399905101226e+143, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.526648815490008e+128, Infinity)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEC, -2.1990453397117157e-15, 0.9999999999999978)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9688005894779785e+239, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.333790220215537e+138, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7789977987273956e-222, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -26803007870669816000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5491209614337797e-209, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9419547272603102e+95, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.929463386664276e-259, 1.0)
	assertULP(Math.exp, 0x3F, 0x82, 0x00, 0x2D, 0x11, 0x9B, 0x3A, 0xBE, -4.734209023719206, 0.008789398288539526)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7001676515001072e+179, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0107414697855528e-147, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.682904589317245e-65, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3007375184810434e+67, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.289004692001178e-139, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.795673175535927e+114, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.797963791568945e-104, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xF8, 0x5C, 0x40, 0x5D, 0xE8, -3.6428722168416745e-06, 0.9999963571344184)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5658844966465104e+248, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.386120869792974e+296, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0713186674123297e-279, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5035975539834875e+146, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.090866310331778e+45, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3864170720.7878895, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 243698330028581220.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.088691918309179e+68, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.18339954033699e+221, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1814333388837297e-149, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1248150087459728e-216, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2505852664549939e+94, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.012332443881307e+61, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.619644096561307e-263, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.034497801795165e-139, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5273840033188504e-93, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.185532054280053e+158, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1130662680084008e-224, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5803574767932753e+267, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2331982027896774e+32, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9612086900186697e-113, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8216710358045143e+148, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9079547447934243e+39, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2365822330032266e-135, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.30509630870344e-241, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0507222789198115e+181, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.4071457194861403e-157, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.583674969569256e+271, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1520286233651029e+81, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.150343099713669e+168, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.136221365638646e-124, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.248888584700106e-249, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xEB, 0x0E, 0x39, 0xA7, 0x95, 0xB0, -0.002559967374343977, 0.9974433065478276)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.960925233386772e-142, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.557905224394957e-77, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4049382036918374e+243, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8776294430411649e-149, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.859370513068412e-206, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.752633872624414e-168, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3147595722132293e+282, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.465126078886129e+257, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.302617021769565e-213, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1086767287358186e-253, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2320961424368913e-166, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2941462063171233e-294, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8614987290089405e+182, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4520436971226646e-254, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.89418078822024e-138, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1284022016919098e-199, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8602893191583534e+41, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.457940248571481e+173, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9721456322311803e+240, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6044435545797025e-170, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0267258719857264e+123, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.682842214868576e+67, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.948241962681343e+61, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.423180495950183e+206, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3655599894766958e+260, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3910210389393606e+113, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8005411094553686e+142, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0280129094596714e-163, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.547424419460554e-116, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.290827961460019e-296, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0987425483457433e+287, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6263940623610797e+137, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8876833420368355e-197, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3756755743880257e+211, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.438851111124607e-199, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.156045185205393e-301, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5656341468189434e+148, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4032182877604475e-217, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.083888462107039e-112, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9545647917828567e+77, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.292343121241653e+76, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.192077387558276e-176, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.932776496922173e-130, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.985711284434831e-293, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1868501208958765e-23, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4327121868194742e-301, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.972075555771357e-262, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1046407836578413e-16, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.315653537599787e+188, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4881888123603265e-26, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -311872475711671570000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9816218400607326e+289, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.270314199588722e-73, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.835597277898076e-60, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1332544070728608e+273, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.630523792288344e-48, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x25, 0x39, 2.115944285417922e-12, 1.0000000000021159)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6561249004917332e-233, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.582066483688768e+62, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.889361743704274e+254, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9926412267798255e-107, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4480375530959403e+291, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3929337534343368e+172, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.733536999181342e-240, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.053779597217571e-178, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.440529271742994e+191, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7612543298228986e+173, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.075848064409374e-286, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.349813056843809e-301, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8666224211575904e-90, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0047289963732606e-100, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5447122991480156e-169, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6973631237362135e+49, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.059296936739978e+262, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.8811828903644835e+183, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4211944583513768e+45, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.694677800914369e-84, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9117253433428386e-252, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.238858638377084e-31, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2295991137847224e+274, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.109327601863643e+289, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2569404545130396e-193, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7717400888030514e+70, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4220479601967484e+280, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.578145787438392e-57, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.982552638343781e+257, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.467817650665236e+287, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8479747356033235e-94, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.993146956298602e-286, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.646705929418505e-104, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6144568115718304e+307, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.492669028032385e+200, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.3296789940271455e+267, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.016174306928831e+243, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4539250544201704e-233, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2623101197083286e-81, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.127390416538569e+208, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4781954418813612e-162, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.730727983727268e+82, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.396915575309397e-39, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.513627239840539e-29, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.863625937090884e-135, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.401472465449977e-142, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6637975865173002e+41, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0446981517931554e+213, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.354336020580586e+157, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.430851819886187e-118, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.476282084754679e-49, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.682286859785453e-125, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5387741019204142e-23, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2289436317601077e-300, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.849760768455327e+59, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6220454240058973e+193, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.471475260921688e+98, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5063267362510492e+211, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0397818410100765e-268, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, -2.2855772550702795e-14, 0.9999999999999771)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2902263553065426e-43, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.987816346084103e-149, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.112244626381421e-137, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5532327983886253e+109, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.143024598459322e-279, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.283855614166383e-106, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.659184017685058e+278, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2507266621609165e+262, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6925017543737738e-304, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.702370758241753e+259, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5154590972169605e-272, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8965343773361653e-121, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.224047665165575e-174, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.247005195402806e-268, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8430071978738688e+119, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.619346115221352e+146, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.967550362404223e+65, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5133918261195715e+151, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 102927838345821550000000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2341823177443976e-77, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.548708523736455e+155, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.501035224150547e+249, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0542103293557144e-73, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.636509763239609e+257, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0045319678430014e+156, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0783191180335702e+97, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3155184036366566e+235, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.295206837428031e+83, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5355049230922774e-102, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.408856169613082e-112, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6945746086089696e+264, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1133660986182727e-17, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1832921989557632700000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3569524955969e+118, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.243964771272191e+214, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8159547798627213e+292, Infinity)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0x9E, 0xA8, 0xBC, 0xF4, 0x88, -4.6416819532756806e-05, 0.9999535842577112)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4661010624981723e+139, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.396037377695178e+237, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.239510579796806e-91, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.71794359624922e-164, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1124852780337153e-242, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6116830616279465e+40, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.808269586199394e-305, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.441513244237729e+125, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.70461309456087e+209, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0090037627282018e+34, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1068006860336502e-240, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.881050413671872e+172, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3183828184227235e-220, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5368462414881614e-166, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0734759115175697e+209, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.916194852246274e-209, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.572034664713515e-140, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0478228613937423e+63, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9411858846359174e-26, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5538281947971267e-171, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.403488237269592e-222, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2653490536670466e+53, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4384233022636257e-93, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.997568110313552e+114, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.337139750600504e-105, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.504673121828795e+137, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6675834696770167e+200, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.117143779006039e+101, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.404458403657666e-125, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5182805363120385e-192, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9655130119729886e+204, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.847213467854246e+86, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6134548358222355e+285, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -67429542476735330000000000000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1265115966990204e+280, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -34938507524482396.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.237222391143797e+223, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4996405714964064e+172, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0335375989137436e+191, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.077606021534406e-147, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.2877306015584346e-126, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6464735484511322e-36, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.628011335759688e+49, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.147754019423964e-62, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.552172503212774e+159, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3873003310756697e+248, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.055447333113191e+225, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2510620541239663e-87, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3874419280762278e-282, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.599450663105456e-296, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.086947801618895e-184, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.728078782970915e+51, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.589616979742545e-45, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.17303693588569e+260, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4716183786691175e-153, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.976315043972505e+249, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5384104680365769e-24, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9110177576740956e+193, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8918424082881631e-28, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.352537566664136e-49, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.871629351023793e+88, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 5.548423118545676e-15, 1.0000000000000056)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4166070003957046e-299, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.2678995026609945e-73, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3374582581912604e+173, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.019210422382912e-174, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.004608914360612e-170, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.828199367562968e-115, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6323922729866307e+49, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.703664244094052e+226, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3528126421871528e+183, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.411792958001392e+141, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8498917688433636e-65, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.041834353783098e-64, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.801918169547458e-285, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1343688555441567e-206, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2466354504936102e-20, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.557249722629481e-90, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.682203900225604e+157, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.567896678310264e+134, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.922997215225393e+287, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.797469715774792e+304, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.56088452886656e-168, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.927237057116372e-201, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.349121164183724e+78, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.259290256062442e-190, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.374660986030341e+134, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.666039466455315e+192, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.390231087109391e-117, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7574822396875527e+141, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5739364529541842e+284, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9404318769828847e+266, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.747956094786312e+49, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3300086786605878e+223, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.871848021045466e+157, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8063652742423413e-116, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.292669716864069e+205, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0761959122182293e-35, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.627956051484976e+41, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.224307614109985e-185, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.718466131416988e-46, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6398194204493657e+242, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8024200125624256e+81, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.086216493380837e+273, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0574670751426057e+194, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.469870571899607e+264, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.975335416239415e-308, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.605413017163825e-25, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.996489010562636e-244, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1245194857119205e-122, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.1330335435130384e+138, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.388803036152134e-157, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4526838224171916e-50, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3572492242915895e-59, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.083488648949652e+263, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.464183949563644e+94, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.348080364342338e+193, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.867317581277002e-306, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2563346275874189e-102, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.623674837295371e-230, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.854151360265448e-302, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.256143508278306e-27, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5265817720992355e+75, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2314893019082174e-24, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.400324976966223e-121, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1546580146792454e-54, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3015420203171218e-68, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2744401045619365e-169, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.4854063603877454e-266, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.156574788991006e-70, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.519522364221088e-135, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.156947530677724e+199, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6034126738636007e-181, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.944921338275481e-248, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.212072712397655e+235, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.379478465173161e-176, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.162756496841286e-111, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.075343316926991e+38, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.576457104611162e-68, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9854407002334848e+263, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.3855534644421254e+82, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9912820840813877e-55, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0x6A, 0x78, 0x4F, 0x3D, 0xAF, 0xAB, -0.01842182343934167, 0.9817468211817774)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.58972931109063e+236, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8072839632554166e+303, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -96813034653832210000000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6586188836204433e-108, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.254273839004007e+121, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0275664057170064e+216, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0320321414840751e-153, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.632780056304155e+276, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8082829205033302e-65, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.183705644121837e-91, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2241374208025053e-130, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1571173600169084e+59, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5089676344946565e+83, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.588871869044478e+34, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.439519701021929e-159, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4568301195384515e+213, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.871027313376909e-221, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.709040896571992e+143, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3131445603665736e-254, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2367946539577913e-32, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2973832404557847e-295, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x22, -5.306481482987261e-14, 0.9999999999999469)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x02, 3.983598189094876e-13, 1.0000000000003983)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.907487557083783e-63, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.495544073523491e-46, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.08903616753163e+258, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0126708521284013e-285, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1656037791662143e+200, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3614244032299468e+247, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0673319276419395e+257, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -157066527829.11896, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7090933588131992e-23, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.2128154723353516e+94, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -373947.1377583382, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.629269142218636e+126, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.016003273675288e+280, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.832683274666709e-27, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8099167745312443e+151, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.169750594817393e-185, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5885875801938794e+209, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3110694007297122e+250, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5373219319458464e+56, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9624301943730354e-48, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4402952196620093e+77, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5151802910567136e-287, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.762075685571563e+81, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8961443612617235e+152, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.950211558153825e-66, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.386955042559041e-23, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.3732666321323105e-214, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6908299891898888e-24, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5044560036009785e+270, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.249306651217811e+136, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xD3, 0xE8, 0x7E, 0x81, 0xBF, 0x0F, -0.005396838977322062, 0.9946176977955207)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0679498913453376e+283, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.503525118837548e+200, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.748268483371656e-18, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.902442257481202e+75, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.931658386096326e-234, 1.0)
	assertULP(Math.exp, 0x53, 0xDB, 0x7C, 0x9C, 0x71, 0x41, 0xFE, 0x8A, 220.9619192072064, 9.173651179933246e+95)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.443408751630536e+277, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 35394601799.79203, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7770050440258567e-249, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.056215777448708e-255, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5299369142489692e+122, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.752020093943817e+256, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9390056027407865e-274, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1305739433139295e+266, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7434159290861949e+112, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7919954193345144e-21, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 318946.73145423975, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.87703343400115e-30, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4871148075325876e+59, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6385877068254544e+44, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.66952514513771e+128, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.465530383576533e-251, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.858285745717916e-100, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.208254290608766e-40, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.886170575261403e+273, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.340832387146076e+120, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.86176451078397e-236, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4798451976755164e+178, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.314914214820383e+307, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.475167659664767e-200, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.622803753770873e+130, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4307481416981235e-84, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 302436859018887.56, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.996557372347067e-58, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9189406414496843e+121, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5902731961222438e-196, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.630521862590337e-30, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.377878750950432e+67, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5884791609578692e-274, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4161805836474536e+140, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9124098525702335e+158, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.280339878891509e+52, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.257084360983044e-222, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4666066167484445e-27, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.179973667883381e+166, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.020126263525283e-22, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5424565064884006e-250, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.525629767846223e+97, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.552787591707859e-65, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.026878565017928e+304, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5128493061251133e+148, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.035464890248035e-263, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5919981429928094e+65, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.901923486772966e-98, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.580817563283422e-127, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.955599155045471e-152, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.220543061695977e+232, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.802408179866733e-145, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8414530080128745e-219, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.148241281194505e-210, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.045403724197806e+215, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.098236222287531e-270, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.681118176879606e-60, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.768997662208718e+73, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0264882959508427e-255, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.082131895877679e+194, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.937174824685853e+268, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.995165459536298e-138, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.44917313815257e+232, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.754090600546615e-103, 1.0)
	assertULP(Math.exp, 0x42, 0xD0, 0x65, 0x85, 0xB6, 0xE2, 0x6B, 0x18, 31.909253845866154, 72112884386220.38)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.672183648271369e+217, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6342.6270038189805, Infinity)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFC, 0xF8, 0x77, 0x60, -5.642750288188206e-09, 0.9999999943572497)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4473642279074458e+44, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.918095861658115e+220, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.1619801292263696e+216, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8259462386781673e-261, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8452946966978046e+137, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.51487797883826e-40, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.07343926729622e-120, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.954568570558057e+130, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3807231683592986e-61, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2670557363885683e+209, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.276562620812696e+100, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.096840424484731e-306, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6247491245491916e-40, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9586388344111836e-182, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.62895695018797e+212, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3062317500234286e+264, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.371041935181187e+128, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4339311502490492e-245, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1590453632687837e+271, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.438845784136313e-261, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5459269027413946e-59, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8832788075486093e+80, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.5383833258114e-86, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.303190103550447e-111, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.663469191339598e+239, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.376854571030622e-193, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.572806109319869e-297, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -56509138290038700000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.084610908175793e-109, 1.0)
	assertULP(Math.exp, 0x3F, 0xF1, 0xE0, 0x06, 0xF4, 0xBA, 0x27, 0x64, 0.11082030420294213, 1.1171941337256266)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.76995249738776e-263, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 37609953232304202000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.339072861276035e+242, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.189991980366934e+220, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4185114270564668e+77, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2096225975350343e+47, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0209667124430694e+115, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0285985197300984e-241, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.945041066841714e+172, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.735784928010135e-44, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.606297721673691e-109, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.887923178026485e-268, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.6316627769523075e-61, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.2176108605271415e+149, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1184310942200084e+277, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.155485151766573e-103, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6327442441308568e-172, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.842229968429195e-299, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1148046391325883e+213, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.532519943937956e+88, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.0776239536110185e-49, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.659253175402198e+84, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.431279627202126e-274, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9384642593749120.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0554815064937134e-77, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.236322635490797e-109, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.511710691043209e-45, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3166836933208395e-110, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.247428946451694e+182, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9213144625818678e-111, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.749214142545506e+168, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 2.5522358817323325e-14, 1.0000000000000255)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.54507354671678e+219, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0302922434758377e-88, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2605193808779165e+210, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4943872653834099e-55, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5325327271652905e-29, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.106279193675235e+139, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9375451562215633e-69, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3180574996441864e-247, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.848777368586325e-278, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.16563429313068e-309, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.300781217436876e-307, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7692280915858195e+267, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.892397929026631e-198, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.348735912618939e-63, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6838823329451096e-93, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.796154899305875e+115, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 29010166531.42859, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.681326188793718e-280, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.229582739684363e-296, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.538633184134199e-231, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2950822964329674e+183, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.828576977693627e-198, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.32706446416197e-70, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4970452362183366e-36, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6217432200853045e-75, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.908773030915916e+305, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 97047767228033990000000000000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.197273119240188e+203, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.399371743304737e+170, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.681960793352936e+258, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.505091947441545e+158, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0038801970706306e-221, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3622153196827076e-181, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.931778117054522e-138, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.190770444022746e+172, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -331216.5463262124, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.08497809474581e+303, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3971707071979482e+168, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.02890664856286e+65, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0xC8, 0x53, 0x14, 0x08, 7.462667287389114e-07, 1.0000007462670073)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7463903714063082e+138, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.13735784317215e+254, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.311311876076343e+302, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2922697939782195e+92, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.685820829932562e+192, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7338733657609373e+90, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.509651465233787e-232, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.089234721744609e+194, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1481545109638934e+132, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.754132119710043e+151, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFE, 0x8F, 0xD3, 0x04, 0x96, 0x46, -0.00017557527231165117, 0.9998244401401244)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x18, 0xFD, 0x6F, 3.6365200657954555e-10, 1.000000000363652)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8517491192746792e+171, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5004753209989585e-250, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4906461154178e-306, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0408296567904656e-163, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.856439532462974e+150, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.7250378425231054e+163, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2716465879207955e-83, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0729191623820486e+95, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.263690834600059e+259, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8009524325736826e-190, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.750968475570719e+36, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.918649403966622e+105, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0005171282461234e+290, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8426826312420864e-289, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.610885675950307e-234, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3093550613221724e+84, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2372166512700307e-96, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.739221352192362e+306, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0779911206895256e+34, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.492962363316052e+87, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0746929174813212e-288, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.141686136257921e+87, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.166976817265982e-225, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7988010583354173e-148, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1898717747509415e-256, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6455222737410924e-80, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBB, 0xDB, -1.936791063820393e-12, 0.9999999999980632)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5557907260301972e+266, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1304037113828972e-163, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.071397349142276e+278, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.788910925730808e+305, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8772019767080165e-296, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.948568433859671e+114, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.897451325827358e-63, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.664384311595987e+43, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.085153507953541e-190, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 114995494253022840000000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.450780817854505e+170, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.068758885794381e+114, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.736558205504387e-170, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.3604368129690034e-123, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.19657729642556e+41, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.388199012437341e+81, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.6726391539328936e+193, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3931040045727205e+72, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5873526124714497e-177, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.546736131414551e+187, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.345759081944093e-79, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.1629364544892324e+38, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4523789817657576e-25, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.183176186904809e-305, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1867180809412847e-65, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.360199454739468e-124, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.270204038033661e+102, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5332152161037524e+41, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.61920067378795e+131, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.902701648001315e-304, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.560730182580973e+131, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2760512537220672e+70, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.17885013579037e+278, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1554365352014594300000000000000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.389289404487229e+166, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6088890090285867e-28, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.61188571269861e-118, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0867845231207295e+205, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.471589032731016e-194, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.270956211737096e-291, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.561153055735832e+75, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.64506857057217e+101, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.064021785147593e-250, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.724432932199614e+53, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4620575026048655e+271, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5893428512863803e+161, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.203479814701544e-183, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.7963417620007015e-114, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.492979029297195e-143, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2274509804218955e+217, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.217677547567354e+127, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.299789163266533e-111, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.084903129026442e+145, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0803313690729106e+63, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6260341470713984e+120, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.427847867228716e-49, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.201179668568544e+280, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.407520694449979e-303, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.689121218698632e+265, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.014531849440336e+193, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5107416656930834000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.30393688636533e-185, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.01680801491267e+43, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2580466167508674e-80, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.484757444400091e+49, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.675651209750247e-49, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2898709808638215e-102, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3032481869175587e+51, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.956895257713762e+201, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.582297621564923e-75, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3204607019421136e-265, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.828699427034212e-220, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8325302355196434e-267, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.3931603365896894e-114, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.096740582309191e-133, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5175186716612954e-254, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.489042540416345e+96, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0264620103794825e-273, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.156701910150055e-46, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.050770168871484e-45, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.302518115880834e-70, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1471523589594225e-137, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.255593240777178e+194, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2589463774591356e+73, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8161945773705425e+78, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.890604532219224e-102, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.714476587845061e-108, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.157011206208071e-26, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.019819174077051e+193, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.089207958000102e+301, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7480668454146529e+277, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.628197707457167e-93, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3017591040377e+185, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 229651914114.60022, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.512342164510072e-47, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 627736714283117.8, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.328172435989687e+287, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.3979436415779917e-70, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5852952034734e-299, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3318333316325586e-153, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.117423949648563e+158, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.019290161121471e-82, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.731601016888893e+153, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0523903202782734e-263, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.430522110389782e+47, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.567694754661274e-125, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.263593526419462e-128, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2428243175510247e+188, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0610881959976814e+143, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5907991285914981e+237, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1014443666516515e+208, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.843015903697103e-173, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.425466106604341e-65, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.421063009219459e+215, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.373621152063459e-284, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2474026604966476e-306, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0244037860778703e+243, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.271245824525795e+197, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.70118357307147e-43, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.980704717735323e+96, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.981424018031536e-39, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4454917570417655e+55, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2018920362939806e-232, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4895038495685533e+229, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2629480927968586e-239, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6166161464550995e-272, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.389932438330519e-223, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4342127890236367e-175, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6080203837985494e-55, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.834511799491512e+287, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5868616980558817e+165, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.587985922007723e+241, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.062268052538717e-138, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.208577294659902e-159, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0055739257884194e-116, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0800090451067061e+275, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.2584254656239395e+131, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6794612181192564e+163, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.290067393461272e+99, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2730000481277833e-32, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0951801263748497e-171, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.445640351283648e-287, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.728116983582026e+115, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3565366923415713e-186, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9582141266758252e-204, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.181951391528955e+198, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2102225544320448e-171, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7077741966170233e+183, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.22001388382154e+53, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.18412945166643e+204, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.591187072173581e+286, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.881547458894659e+261, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.516629501840857e-143, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6709068122243767e+160, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.032573486216555e-297, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0854706849083053e+70, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.3084834981071045e-229, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7535528851213655e-93, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0688831711145155e-175, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6828535830194651e-199, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3763606239210976e+259, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xC9, 0xD9, 0x40, -3.9400309619272906e-10, 0.999999999605997)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.520324655428312e+266, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9241297192772752e-182, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.717496361185175e-138, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3536424836705205e-96, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0x78, 0xC0, -3.844013952251205e-12, 0.999999999996156)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4837099654886507e-94, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.710468465474693e+278, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8839219108893925e-31, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.029953338122688e-126, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5567042865295323e+204, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 928317051275038400000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0921475005663257e+80, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6801577025899517e-68, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.8372819751669e-234, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.605183127982006e-241, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0212386581122963e-195, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.506080272345642e+190, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.840505579008419e-32, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.349335301168939e+59, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.629477744987473e-212, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4533648413905156e-201, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3011781777221305e-53, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6281926191921556e+297, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.902163315933946e+51, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.428677476045768e-39, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5786796782136037e-138, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0267484304808654e-89, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.434025278774936e-99, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.416028245069877e-25, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6158634744029306e-135, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.933876752331407e-167, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.251080247010108e-252, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2567181388633838e-169, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 17520452403195423000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.525132708518234e+240, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1064060908905484e-284, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.625118577807138e+121, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8553455451340838e+167, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1648806988468926e+120, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9804036599908017e-253, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 883.2041813349176, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.735614588951067e+170, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.347445709431248e-45, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.327835411716416e-45, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.123872243670197e-71, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.17379933257164e-274, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3675320.345267194, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.911813491299316e+35, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.768666123949533e-195, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -34997793529.02569, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3406226249848832e-102, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.752586012661566e+137, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0983594888162752e-73, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.617080715570843e-291, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6534340103432272e+67, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.932400109670956e-73, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.721683327161494e-57, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.781459323751095e-60, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.338237218787334e+143, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2401898014602868e+71, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5697729883260743e-111, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.867210881064237e-279, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.667167051412002e-104, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFE, 0x4B, 0x98, 0x60, 0x8E, -8.128675707445574e-07, 0.9999991871327596)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6907976189795063e+50, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0638804736933027e-141, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.472909159554034e+38, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.143402781494411e-228, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.98029932692175e-254, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0515571030916237e-293, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.992583455853076e-125, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1825361155026387e+145, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.533150454258549e+217, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4398147096641536e+225, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -98096014284454530000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.114233350697911e+87, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1871757201592987e+131, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.219157666131528e-195, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3053337541064429.5, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.094096732458564e+206, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9350572699969154e+72, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2785453405105.731, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.369244688813561e+202, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7393858363561852e-271, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4955232363841566e-55, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.34383297662264e+279, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1615058803596303e-192, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3319535269827654e-23, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.685617997285416e-179, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.204065029228183e-81, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.747124161771437e+31, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.281546904782225e-25, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3599.9502637868122, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6715097108577096e+68, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.641291013264707e+181, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.905819212421897e-84, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8768285509308497e+225, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -49366678390028000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4125215707887477e+54, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.7015027826223344e-291, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7725993284006525e-272, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.811472065196993e+93, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.420225083720753e+96, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3324812503363943e-168, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.876194339149099e+119, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2016303765402817e+127, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.97198712679318e+255, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.38137701261977e-27, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.075649416885513e-174, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x19, 0x37, 0x4B, 0x53, 9.393689018216788e-08, 1.0000000939368945)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.772400205266441e-142, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.8349510507180525e+202, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 76570645895004470000000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6409934621248843e+101, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4291979661869599e-129, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.486302347412386e+269, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.119038336740415e+104, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.780458673001507e-231, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.932631351002021e+244, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x19, 0x49, 1.4374046239926216e-12, 1.0000000000014373)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.61054835628379e-91, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7102952919467164e-118, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.584569871076232e-220, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.85911244855536e-72, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.370954295070463e-225, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8553893118800686e+86, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.636923285025425e-193, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.203449044995777e-288, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.259294678900486e-93, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.804028002818385e-273, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2818028023091244e+56, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.015024689950329e-34, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1356683650984305e-215, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.011914908669312e-120, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0911804995125016e+299, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.21394937479188e-120, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.770898397924884e+145, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.043631603607836e-148, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2574165001075834e+75, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2316226953510347e-198, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8772534290008916e-245, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.904155142277983e-199, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.35602873836365e+233, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7955517527140706e-59, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.50255183773142e-140, 1.0)
	assertULP(Math.exp, 0x3F, 0xF4, 0x98, 0x7F, 0x55, 0x2B, 0x50, 0x65, 0.2524932512434758, 1.2872308089181612)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1476281378289294e-67, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.26263525725192e+78, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 168305154352719570000000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.663597557693808e+114, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.861050816051371e+211, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.042483988302771e+223, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7374523744017166e+137, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.529735141043038e-130, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7895227181587154e+248, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.188240046566806e-134, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2403408410881077e+305, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7307354438168336e+64, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.022278417725568e+100, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.100452612335686e-120, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.052049312707004e+246, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0814426171675921e+213, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.6242915723468845e-32, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2393412267551667e+178, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.31592882770784e+125, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.986807186770558e+190, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8891913032325768e+200, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 1.4170977668202966e-15, 1.0000000000000013)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.960335707635583e-301, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.152076117764848e+152, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -19245.18613085721, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4248691008152224e+128, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.180354387574152e-122, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.903101997715185e+107, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5480797876366832e+36, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.640825679747388e-67, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0287938259284333e+55, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.735507307134304e+190, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0941992229139364e-195, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.712354014399836e+219, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4165384711854895e-249, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.383688237870083e+50, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0660219660432051e+83, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.324306327039269e-113, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.398424074647942e+118, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7441150214130807e-218, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -90620020613.149, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x31, 0x7D, 0x3D, 0x6A, 0xE8, 0x9A, 0.012009920039525657, 1.0120823287129839)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.49765811215956e+230, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.245824427895588e+90, Infinity)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0x2E, 0xFE, 0x87, 0xC3, -3.8930360532818696e-07, 0.9999996106964705)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.350883662415424e-104, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.638730187272748e-222, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 526096291.85075825, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -81548658768289020000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6213743105537894e-307, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.76005014176541e+197, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6268665940652037e+68, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9907413170628573e-256, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -10059952112243950000000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.130927908267585e-243, 1.0)
	assertULP(Math.exp, 0x03, 0x54, 0x86, 0x86, 0x0A, 0xA2, 0xAB, 0x3A, -672.1036866872236, 1.2855163507820998e-292)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.666105436814827e-20, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2336078143638156e-272, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.655984088263838e+240, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.439403467212954e+130, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3743867259819792e-71, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.977350324971919e-212, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1448723563625065e+210, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.040144211416573e+234, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.015605207873721e-280, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3638351139874e+95, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0682846306280844e-161, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9125546046971277e+225, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.248357436776275e+303, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0053742568552293e-217, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9534256617282182e-18, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.968602593092362e+61, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4438543949170173e+143, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -127771485478.65404, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.511400622779532e-62, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.36495743140636e+279, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.321022730377458e+206, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x17, 0x01, 0x94, 0xF0, 8.570469118901968e-08, 1.000000085704695)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6103735116813524e-233, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.382842095811194e-146, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.508210025490718e-227, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0778717450206972e-235, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5960974731941241e-71, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3982749235725521e+160, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.455141423397587e+73, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1124779272102011e+170, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5856320372420984e-123, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.997867251946827e-253, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8671015618384925e-103, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.719711082311945e+40, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9551849651151403e+288, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8543978774265923e+287, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2627859117207841e-242, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1830268633851428e+64, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.851632610819906e-178, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9728584658085336e+286, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0159112659047165e-52, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.244348916036258e-90, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5426444239403908e+269, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4503497207720358e-166, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6208824354097875e+121, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 975.802653804723, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2121932263975097e-91, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2696876592522835e+63, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6818664769050608000000000000000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3686565878056585e+94, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9102066197490006e+290, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1594794647378401500000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5426702806737565e-231, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8431239428577622e-165, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.9002991418014244e-99, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.233819309175933e+85, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7452310723838782e-145, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9022909513117024e-74, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5093573608655273e-266, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.689836275574649e-183, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.105519292239865e+80, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.53522090110597e-148, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5794674446830156e-228, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.9337411675717565e+218, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.963926789381741e-229, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x62, 0xE3, 0xD2, 0x4F, 0x0F, 9.430433750783332e-05, 1.0000943087843017)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3115779479850877e-273, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2963863775042553e+178, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.794462009884759e+113, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5834534198323942e+107, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.60866486458435e+303, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1068954340876544e-308, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.140373500200774e+47, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.56696253808404e-184, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.802334494402157e+270, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.717493338332821e+109, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5047732885615746e-84, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.29702085685727e-84, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAC, 0x07, -2.3866101672714275e-12, 0.9999999999976134)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.983995671963609e+106, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3826566362898973e-67, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.464367986940357e-137, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.779917934016158e-304, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.023297768010052e+105, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.87992990525695e-166, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.102642632285809e+249, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.458060375247464e-120, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.332798566324987e-228, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2317.2719686609007, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9234086162352264e-302, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0932975705213008e-268, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.643387994693533e+271, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.198602278468069e+107, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -242187999532727140000000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.815985142787629e+235, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1440908804884366e+55, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.119875951693145e-236, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6046353653597185e+204, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0443789946869462e+38, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.404720122715952e-132, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 228973.36205500914, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.864562155340258e-84, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.276322343247071e+269, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.387109698330555e+51, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8526198496421848e+133, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8493831312490128e+61, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.379206523596684e-221, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8310058040856166e+194, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3297168129935925e+87, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.737318173552179e-180, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.867071594601933e-128, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.634361528845259e-246, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2685346037736405e-168, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.038066093900035e-253, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6038871281426486e+148, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3736575459172574e+299, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -149070872354664990000000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.670666014640136e-101, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -159626769527383230000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.447987659954779e-44, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6435433395568204e-164, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.989104462785412e-184, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.207258652151713e+35, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.864522856776761e-296, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.925510836533643e-97, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.563794615862951e+68, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7251497284934556e+175, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.392188067942406e-199, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6230864804698416e+244, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5318639047544305e+204, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.729714155737928e+41, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0419557114674918e-160, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.774420766296968e-67, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.596977709543663e-49, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.791639544681675e-220, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3059777791373156e+116, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.172505593540677e+302, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.589971330191188e-97, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4526514351835292e-127, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7640426192575494e-185, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1720328664749e+77, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0265227680478365e+117, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.962990315608494e-160, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.343373124863293e+37, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 914397563154560200000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.88473382309396e-244, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5294052477934653e+162, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.442524328938146e-304, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0201982827577265e+61, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3411899948459757e+161, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0497317942022307e+67, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.425607765554205e-125, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1041457669849180600000000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1400242268961925e+98, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.005585037641068e+133, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.716878209330224e+127, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1443352229732415e-131, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2208483094954705e+150, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.2576505061468945e+245, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9078928610191322e+278, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6144044168504767e-51, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.5752200864875025e+212, Infinity)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xF4, 0xDB, 0x2D, -8.108218631040504e-11, 0.9999999999189179)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7749168081993098e-21, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.23824711832346e+244, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.332201912415851e+307, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.142657974538862e-126, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0269295485677426e+239, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 205696184424937080000000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.27934771114395e+243, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1551041970905508e+102, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.342158524397991e+238, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.916839909523871e+296, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.609677553813245e-134, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1462193.114880574, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7767704722885792e+167, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.435421501261601e-294, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6442426688552433000000000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1406907349571001e-148, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xA2, 0xA3, 0xB3, 0xD9, 0xA8, -4.451876407470262e-05, 0.9999554822268708)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.992845138219493e-17, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.817696187052882e-191, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.453849076772542e-35, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3965119016508297e-239, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.934898575359073e-68, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1691457126216932e+265, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7009650568.946501, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.334900450225525e+179, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4163473431757583e+307, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9810868366211714e-28, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7585289316781287e-173, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0591615227949963e-216, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.463090370702824e-218, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.023437304271546e-227, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.041078548940224e-259, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.932273267206989e-245, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.877992973714853e+95, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.743976422740318e-197, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.637078202492974e+64, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9932886930507806e-132, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.548432914637502e-257, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.836743588867031e+117, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3260425165614761e+182, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.374124153748949e+291, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.397319359625072e-290, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.498133101989663e+233, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.207107756293313e-112, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 3.4106975508436836e-16, 1.0000000000000004)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.655138090045048e-239, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8558912859349331e-233, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.873357613364891e-109, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3740537802045778e+284, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9737204939412663e+232, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.9267891205131115e+57, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4008889588999184000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.46008757282927e-306, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5584196742558975e+108, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.09996569623799e+110, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.388080606242652e+274, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.071709660189924e-218, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.482544350908762e-61, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.697920426523133e-131, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.66171970039538e-107, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.742480356229067e-223, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.318757978318642e+111, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.429885262725169e+150, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3213194251521512e+88, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2378949317555538e+174, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6078600736747162e-149, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1045648850767629600000000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1076120585967402e-71, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8436315555955758e+109, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.64945266486287e-157, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5530093519898685e+63, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.408535730054189e+161, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.840480927618689e-290, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.561980464147226e+52, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3268591921504117e-220, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1332209499358054e-182, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.066099652789554e+132, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -104579297993331090000000000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5525214558520258e+46, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.439555751367084e+125, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.881252540616406e+240, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5351429056536145e-17, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.77866983785651e+205, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.991932176566727e-196, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -368856090351188000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8602310676701664e-21, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7723300802559834e-303, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.41503297355865e-264, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.296293765497439e-106, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.151661473980072e+193, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5582600290566557e+190, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.123750184268447e-86, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.9353698774452086e+185, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.532507804947574e-19, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.338605716456376e+80, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2173026998234373e-177, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1291190788153258e-245, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.888493486595906e+76, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5536630325250676e-79, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.20743890107075e-216, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4804255297339684e-40, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8515574510430924e-219, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.18658537874679e-188, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1785805808722534e+237, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.871680452753867e-124, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.42423491451587e+32, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, -3.507596712329767e-15, 0.9999999999999964)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3814729698879516e+161, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.795029518814213e+70, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1347735423425266e-295, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.11751423976632e-271, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6280443997215832e+278, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3684862665529534e-251, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6179081260626692e-199, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5257018945298484e-160, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.332102224450672e+237, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.248448507722957e-268, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8915743844984164e+220, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 259585857650700630000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0170609449957242e-49, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6690221379162764e+206, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8209649821571243e-255, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.555270076302735e+160, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.584730668854416e-300, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.161025917388488e-70, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3978768616013574e-253, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.748518997407983e+41, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.342609655928301e-249, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9753.30332328711, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.23945102631738e+104, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.812937710024132e-281, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9495441135563082e+117, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2217192766158858e+123, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4440347020253244e-179, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.386421167236388e-144, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9572319770667697e-146, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.430283619437664e+68, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9794022420527796e+55, Infinity)
	assertULP(Math.exp, 0x40, 0x0E, 0xEA, 0x8C, 0x95, 0x47, 0x18, 0x57, 1.3518390234211974, 3.8645259535142418)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2094940375837176e-172, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.109882834950583e-207, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.177282133645006e-162, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.496737720126969e+131, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2592953043580866e-308, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3768143006127175e-62, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0334919135039005e+142, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7451053607128762e-227, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.1764745878302024e+128, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5318218483607553e+85, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.380761432872971e+88, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.921156336743911e+113, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.238729654825727e+205, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.1920211659489126e+237, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.410640010690549e+297, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2145020947858255e+73, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 535911786553119800000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.0022133303817945e+303, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6636724795995955e-216, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xF9, 0xF6, 0x92, 0x8F, 0xF3, -2.8785871627230443e-06, 0.9999971214169804)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.594709270469256e-151, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.280103909849862e+229, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.265708063702022e+70, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.591136159106952e-292, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.122185155707963e+39, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.511918611356489e+231, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2641916019715282e+64, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.690582017672091e-202, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8726853944747466e-215, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 53977629797.080734, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6013044919185815e-257, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.670747321626769e-256, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9395069373044412e+73, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.7615287510192536e-45, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.230289346710243e+305, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.630773322563542e-111, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.753254674691166e+208, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3235148633061547e-297, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.259025223820037e+144, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3483928656752883e-116, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5289695746691306e-265, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.344130459629944e+146, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 482904923054224300000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3520739695629712e+50, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7708713964795958e-287, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.016787113481997e-204, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x4C, 1.3054006404329302e-13, 1.0000000000001306)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.85485517887969e-46, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0541773247173684e+112, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.593263838045654e+74, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5538460687549533e-130, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.7551417231793347e-253, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.897073523865197e+147, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.694952576649637e+298, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.06122201455732e-66, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.6957912728870525e+79, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2868826028961556e-204, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.732136335810616e-143, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.4043654905223735e-140, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2464649923883455e-176, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.705454530262445e+117, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2143937500889294e-308, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4881377063747692e+291, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.953173819481219e+100, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1411434509056235e+77, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3117830001347183e-125, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.292037039883793e+170, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5812192325649204e+219, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3966695433688e+270, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.745654237460409e-88, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6883399801952075e-219, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.216544745161214e-260, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7524042913771003e+77, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.295567895805565e+45, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9104518446484196e-280, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.539181965960371e+170, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0641859056181438e+211, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.585678488758884e+74, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.638163252226956e-95, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.685004253456198e-187, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.516995634427342e-244, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.993288427719837e-63, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.188959747237051e+79, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.859120507503854e+88, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0136942086959916e-223, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.436097052097302e-262, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7619147725998507e-43, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.069637501521292e-185, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5298374710029823e+193, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5230625011613164e+183, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.754355225282631e+42, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1803208133589284e+33, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.41106354882819e-210, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8571439774961407e+55, Infinity)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0x52, 0x66, -4.9340291091165866e-12, 0.999999999995066)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.3280639877540995e+253, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4973409663948523e+188, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.767742390121639e-243, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.911785755340525e+124, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.491880784883858e+37, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9679492188375042e-68, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2056889958163174e-108, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9264269503456445e+126, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.037836806892262e+54, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.37676643520226e+65, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6635096139641957e+64, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.807721791108693e-129, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6396909695170994e+233, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7441170226627688e+286, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7089182432030974e+168, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4320570999775782e+163, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1887721604709346e+144, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.746762425504156e+69, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5050546255592416e-23, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1911093919269373e-220, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1758159673509196e-56, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0936909346814106e+163, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.539444530971978e+137, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.941108460856574e-240, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8360013900340724e+223, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.604902095177898e-93, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9526970702231119e+257, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.84588341610468e-220, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5420360408850317e+147, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.77173995460962e-218, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.680812110103795e+210, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.621344381254312e-88, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9362546467092279e+264, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.614468563617622e-147, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.286887561026127e+93, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2328042669731872e-262, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1247135649944.7952, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.811499488674462e+91, Infinity)
	assertULP(Math.exp, 0x3F, 0xEE, 0x7B, 0xD0, 0x5D, 0x51, 0x4A, 0x93, -0.04854548950164882, 0.9526140043838772)
	assertULP(Math.exp, 0x3F, 0xF3, 0x63, 0x2D, 0x29, 0xE2, 0xA3, 0x12, 0.1920350553588134, 1.2117129932541428)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF5, -1.1707409172203644e-15, 0.9999999999999988)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7455691716187108e+226, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7310384580373444e-246, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.986259389520665e-298, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.886523539466885e-170, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.4002441803387286e-98, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2334058577949414e-179, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8607604034441782e+74, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3399926628558604e-39, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.130243674451484e+300, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7649655642663424e+203, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.395048858623429e-232, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1287705855566935e-238, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.942783258103555e+50, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4088814878274814e+135, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.918315062292881e+184, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 38681206867594480000000000000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1341603918865848e+98, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.126600943139948e-194, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.42091143670338e+142, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.917582159331908e-48, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2632425773438207e-116, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.76094800453642e-240, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6683025443945382e-282, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2060580386147208e+210, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.756431329829152e+266, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.979611349168622e-158, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -47578587462761800.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1759973093431656e+193, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6965056549473255e-190, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5872498081679304e-209, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.22252615878685e-275, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4574721044682082e+297, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7059480575135287e-126, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.502617868474422e-141, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0911985469485258e-157, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1113809578382124e-142, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.935148269705161e-56, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3929373424479612e+198, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3185892310020973e+187, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4145295838528025e-289, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.751315033235522e+45, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 26463616560210390000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.024341895514857e+166, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.8211748377735484e-89, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.655073623625969e+101, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.758009569871789e-179, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.760774426283721e+147, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7343297431313504e-303, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.767336065461787e-224, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.437000429873169e-238, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7484778891086307e-249, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1737597522990486e+190, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.797208584608881e-32, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.135563682522951e+82, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.696497229682234e+54, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.233794521839569e-135, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6683758853441915e-143, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3767138994940065e+41, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1691158270021227e+188, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.387719082278674e-210, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7267713263190835e+285, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5240085394482322e+39, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.626656239316088e-107, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.916242993325722e-257, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3095098645600727e-59, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3391702375529121e-248, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2074687827055768e+267, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.865620866256033e+286, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.524040925815718e-200, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1892882740579583e+302, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7745045974890995e+51, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.639087133761506e-121, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.460650490426551e+265, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.650923756740078e+279, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.466200520321745e-121, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.493391875345611e-101, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.412309543594054e+307, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.3432565600123976e+39, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.303570937531451e-240, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.195602237999575e+92, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0525491878069948e+243, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.332377121700774e-136, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.471544853153079e+101, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2963964260477584e+54, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.829239228596187e-175, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x39, 0x36, 0x7C, 0x86, 0x2E, 5.45609253015358e-05, 1.000054562413776)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.895032452249348e-85, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4426286948084282e-191, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.319544659349078e+77, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.578720710085763e+220, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3344978544117115e-223, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5990313489063595e+69, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.165194182682095e+162, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x53, 1.4963767276431866e-12, 1.0000000000014964)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.38642606133893e+190, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.441633952092871e+293, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.916709567622888e-37, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.982246746427245e+148, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0947824576978635e+154, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1564359393680917e-54, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.665310476288009e-283, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.282816411516579e+91, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.474433499721052e-174, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.218164608396779e+159, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.0180425836459604e-239, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.113227613751703e-284, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.044232384965507e-255, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.462861175261265e+277, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.574155321984529e+271, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.956344215155383e+74, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.290647324963968e+281, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.391450767256755e+254, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.7883840774481e-279, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.835496078949917e+242, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.095223361490717e-264, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 46579046236526460.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.339710122995547e-302, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.792898865943346e+136, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7819440195406145e+302, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4974696346910645e+294, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2260424134429013e+92, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9110227320571937e+127, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3371716821236876e-151, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 433087147491.3676, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.355848682989499e+97, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.552259888014165e+185, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0759608832472453e-200, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.959695847272205e-74, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2621810354557065e-300, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.62518067116635e-177, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1470311011955698e+60, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.195829265055035e+130, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.396545625784927e-46, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.248684550251399e+81, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0159581915106285e-19, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.571336316907197e+203, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -105262576712595820000000000000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3501963093432335e+286, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.163687971692313e-212, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.2798806178978426e-242, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.665473864969098e-240, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6712903028921922e+305, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2704064109205273e+209, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7490333837690773e-250, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.097111152265034e-248, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.320998939858544e-112, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4895846404037217e+224, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.359997359992319e+139, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1736441391445375e+63, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.734424379221955e+295, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2704970255910385e+231, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.75725565666464e+178, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.737928852665957e-258, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.20467871965808e-236, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.033659116260092e+84, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.104161003597809e+139, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.872962319227183e+66, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.268694445433521e-270, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1722640243117394e+41, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.045901916450497e+97, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5275423089122627e+286, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.322781548841733e+95, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.997484985515467e+291, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.292521139344481e+173, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.449846964464206e-137, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x10, 1.0917463491904113e-11, 1.0000000000109175)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.223039144509791e-72, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1518797378820315e-195, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.589538428201958e+158, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9121329874359926e+265, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.72884813051173e+221, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4823691852414417e+236, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.413546548813424e+198, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3552524507752774e-81, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.293903779673155e-142, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3960620341529598e+80, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8735724065746848e+173, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.498367949169252e+250, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.546509285395825e+164, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.4319143150931696e-260, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.830551925287339e-298, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.982683716796351e+142, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.328698802008022e-50, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1849200950315906e-273, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.186774407427819e+201, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3901325851447175e-122, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x4B, 0x40, 4.277358150351732e-12, 1.0000000000042775)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2185538509309328e+303, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3983698839298162e-48, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.5975355856546854e+268, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7966007519846555e-113, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.396660652499141e+265, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.705141678315677e-181, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0212251263098657e+71, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.074676790035893e-57, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0776686421299875e+110, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.758556389242565e-259, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.235847505974683e+206, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0174623813161376e-157, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.21804538084438e+271, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.917667555571443e-163, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7232295949616584e+199, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3417516702226475e+286, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.254119152227028e-246, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4385003273046516e+264, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.882779008935762e+40, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.409452425396235e+81, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0570424014422416e-231, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5477373059813182e+44, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.222441116088358e+269, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2357514907838559e-205, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.793877942064069e+278, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.509583388860137e-250, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.098474922763585e+152, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.69440947750139e-55, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4150511487161957e+111, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8228896827854084e-18, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.333771565027929e+207, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.556991849312999e+46, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -28355163.34067387, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5593806127062074e+276, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0885301154782697e-129, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.710227078578064e-141, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1761470844808611e-60, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.622632901114771e-35, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.208214429628596e-147, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3501397182989735e+103, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2177814441720879e-164, 1.0)
	assertULP(Math.exp, 0x16, 0xC8, 0x77, 0x29, 0x3C, 0x72, 0xC5, 0x12, -456.3593178544454, 6.392437502025082e-199)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.51699238517458e-274, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.772257372747012e-201, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.862563030825246e+221, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1199776074226464e-246, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0362667750305168e-234, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3267474361686956e+135, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.847091387406827e-86, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.04590852751755e+159, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0848433014104342e-243, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.691287983163755e+250, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1381149580214294e-60, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9225141216317342e+221, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.477447724811242e+70, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0506311417004642e-219, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.479846100282879e-39, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.860175956763721e+104, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2022877101618134500000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.741929189283359e-299, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1940310330985307e-223, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x03, 0x92, 0xFB, 0x76, 0x69, 3.4085687851160647e-06, 1.0000034085745944)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.385325337957684e-115, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.640123372666059e+82, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5207261509285784e-123, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2522604714489965e-85, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.41401597208285e-289, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4651760792868474e+84, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.491036370631723e+230, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.643255993708661e+70, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2103474807248005e-275, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8851376800636226e+302, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.421286535278193e+47, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.404401844758833e-246, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 36358619059146640000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x06, 0xB7, 3.817063977294043e-13, 1.0000000000003817)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2251187190901305e+293, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2512550409148675e+281, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.1910997530878025e-49, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.93331997734138e-180, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.112902360598513e-171, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9555022843662196e-175, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.217416881394481e-63, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5631473684697666e+224, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2877009205344346e-146, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4542089093577235e-195, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9982959735222653e+167, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.935154601555297e+282, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.7916087765270075e+45, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.617271876529974e+222, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9577046933151323e+212, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.270870565970243e+239, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.679388093427395e+251, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5786245527585826e+145, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.971753567610386e-285, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.930590420708947e+57, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5884601455414275e+177, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC6, -6.395643421054433e-15, 0.9999999999999936)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8799203900368047e+241, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5569857908385235e-108, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.747759238005498e+180, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.987412771802464e-31, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.381826432382964e+179, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -13742110603625116000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.499670632922824e+59, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9029005724811496e-260, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.6942813350515505e-161, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.723403962290495e-263, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5111322716135867e-252, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.22263865606627e+239, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.60025563787183e-200, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6209186082361044e-153, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.727835231008589e+148, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.377903846175831e-115, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2407555177125135e+216, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4191942016875335e+57, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5886144971506632e-221, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.967575387881652e-61, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.910409004419995e+250, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1890505448562288e+223, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.138585056863135e-171, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.91327380878878e-84, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0150617298038173e-98, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1936625621199946e+194, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8179417767888416e-247, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.238675126655533e+249, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.726817121090235e-220, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.082100376562309e-156, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5247851969349896e+188, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.70557962006718e+178, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.18485122338521e+41, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.519194174788433e-294, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.319868411007464e+273, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1285376596598383e-130, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3075978318760493e+260, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0493295288883319e-47, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.031812408026556e-105, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.780428017501673e-258, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8408322245915173e-153, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0353702625483276e-102, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.409593041861177e-139, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB6, 4.0445318857107254e-14, 1.0000000000000404)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.049237123022799e+243, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.977793050099752e+154, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4551024865633136e+152, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.965020949363426e+195, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.914158147365428e+227, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0056630459413246e+221, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.187529592775114e+105, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.414549235555205e-34, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.67917191499093e+40, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7605869160505598e+203, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.486741498925018e+294, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2632967887165195e+61, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8039519215998975e+127, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9300459709520573e-307, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0842564084940145e-139, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0810379920728701e+111, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.311181895621983e-201, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4115582879812961e+76, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.33636120984264e+233, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.032732836017557e-107, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0799054678013293e+212, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.401416664333547e+116, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0404671075581768e-63, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1329135930972595e-164, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0468782432613528e+161, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.706150160733713e-116, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8134422422179333e-140, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.622099574445377e+262, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.831387096202675e-250, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0678398577477215e-44, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5898427214513207e+34, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1785587996296557e-293, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2782437003508438e-64, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9944557592922583e-265, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.911366353050587e+255, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.827004336805115e+123, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1453971736979884e-75, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6147293706447698e+48, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.558369941900253e-120, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.937326568424494e+172, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x0B, 0x5C, 0xEC, 0x9A, 0xEB, 1.0836528530534316e-05, 1.000010836587246)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5322059246837106e+85, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3452828240813756e+81, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2692497016292656e+40, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8373313071980237e-84, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.249625156250008e-180, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.713032631229204e+275, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.720172518719041e+210, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.9230304554248514e+234, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.620341918723782e+135, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0124143684297306e+181, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.727221613316406e+264, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.488161349336118e-22, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7726614615918545e+187, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2803806795504882e+69, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.884930857876013e+272, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.193805231912394e-63, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.7992632169295555e+121, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -251585245720143150000000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.72260444081286e-29, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4413358176937183e-111, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6536275068619597e-206, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1976655012389226e-217, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.312281294178603e-276, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.043064169288165e+115, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.691849972522399e-304, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.584621389746026e-190, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0281287246967854e+101, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0498391837688716e-120, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.083666901996182e-54, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7406992617084748e-218, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.022063594497422e+218, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.045008774362038e-288, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.834960670489418e+150, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.972357131131834e-270, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.520104774604754e+187, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.207061149234808e-299, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.4175020053654074e+247, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.64731308368799e-281, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.585710055374629e+301, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.01136751872527e-47, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2997541327436129e+114, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2010841829072848e+181, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.449644703637842e+33, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -385573232019.49426, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.853527627341868e-167, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4415053443892879e+82, Infinity)
	assertULP(Math.exp, 0x40, 0x7C, 0x9B, 0x40, 0x00, 0x33, 0x99, 0xC8, 6.126220775672614, 457.7031251922276)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.948886876002402e+41, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8211431969333784e+55, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.205338741600727e+225, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.310914468574809e-292, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7675808192527348e+231, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.926745842750651e+180, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.6136034677992175e+76, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.325002977184727e+269, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0221611210687978e-41, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 60251.69896797238, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.702641369580451e+294, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.897554611184398e-19, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.009313985727545e+171, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.82140722613861e+197, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2829609820380268e-226, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.490848140476969e-196, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.187142759976973e-212, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.958617598873589e-305, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8440551490076223e-240, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.339846000637958e-54, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.519120075866143e-93, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0394869811975935e+247, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.57185575935788e+35, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.308171227024716e+110, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4293504402860546e-280, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.604143298195026e+197, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9821194183269226e+49, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.127285668882689e+140, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2716267623861762e+231, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2651641912708079e-197, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.842733455328899e+119, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5027261273272499e-182, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.958168955733664e+281, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.650352255967305e+129, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.46562212731113e-248, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3931869998691937e-247, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0272016883485726e+155, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.299012274709471e-110, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5826943518236936e-238, 1.0)
	assertULP(Math.exp, 0x3F, 0xEB, 0x4D, 0x08, 0xDC, 0xF0, 0x09, 0x36, -0.15881563013853117, 0.8531536402881901)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1723320993843879e-163, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2818066767191653e+129, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0343574591295391e-150, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.160457929258592e-129, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9597888192991126e+108, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.978010894621633e+292, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.250648219690814e-263, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7562610323291754e-207, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.087539430176005e+172, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.189361675047329e-54, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1109092812884897e-81, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1715953928923172e-234, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.407175612853563e+263, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.187219616110712e+39, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9395881380658157e+122, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x56, 0x48, 0xF1, 1.2556108571320278e-09, 1.000000001255611)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.8396984425925126e-285, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.471069293340862e-122, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.535021015663348e+108, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.8450187540927e+41, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.788449421483577e+167, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8524860359380223e-220, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8663794683475543e+50, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.129033729752967e+233, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.435781877349705e+49, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.299718931534479e-285, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.898251502699046e-245, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.511973741477148e-258, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.867075082184985e-170, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.469767574233902e-134, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9628607025722747e-221, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3155478126187618e-213, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1629997487225507e-300, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3273807808482473e-277, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.70717024855895e+306, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.025050483970486e-155, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.246085652980624e+117, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1403606392483036e+107, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.9202623429514e+226, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.3944145846349564e-27, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 105458162448451250000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3523520780264272e-211, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3146286082052777e+177, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.706941646786476e+233, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.707546456775119e-106, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.609695304865077e-63, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.47806987710832e+273, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.050766037651321e-72, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1376544584992518e-104, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 83464488703760000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5331222451995935e+178, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0257293078935985e+253, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8258074144997742e+168, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.051930573919735e-279, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4673911539987976e+196, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2366440597846727e+155, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1165965327522286e-38, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.123175051016237e-295, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.870708838493983e+297, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9774068343934817e-53, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.529224289406326e-37, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 90351185577492480000000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.34774178131371e+96, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.524507539352235e+55, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0824096583095528e+81, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9036979665779986e+41, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4757447813809951e+301, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.614532762946939e-50, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1364367094221175e-239, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.952057488082482e-220, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.580149593519853e+270, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.486384945932994e+174, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.3400535017729306e-133, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1971418667341817e-231, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0xEB, 0x31, 0x23, 0x85, 8.761578991309279e-07, 1.000000876158283)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.6592167010492147e-48, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0319248827375225e+269, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.450214872640827e-129, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.452498129480277e+233, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1209135974005248e+93, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.430994217246522e-246, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0807941641831707e-20, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.517681432858566e+212, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x0D, 0x10, 0xDE, 1.9013369089252193e-10, 1.0000000001901337)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.028116632066303e-67, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4524646752852964e+107, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.857801167641734e-130, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.676145310422734e-69, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3508465764213316e+194, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6589926294950532e-109, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.455622913953184e+283, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -125295766066884.69, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x02, 0xFA, 0x9E, 0x5B, 1.1097560846371418e-08, 1.0000000110975609)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.045172984773225e+124, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.42925662928195e-251, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0430147978979155e+145, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.743891630978008e-195, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.970909890565134e+302, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6737568547481915e+169, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9946008950264264e-162, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.180834801850003e+32, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1605147438568261e+170, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5409067613309422e-257, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4736701857672287e+215, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.419108029288445e+119, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9980178510822564e+177, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.138142134153245e+302, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.927070548953803e-62, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8021435951269043e-31, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE8, -2.627053471189258e-15, 0.9999999999999973)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.231467898141212e+120, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.438788763593246e+65, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3700370059354216e-93, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.67210062308669e+60, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.947862159691987e+52, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.854706330887772e+168, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8945837300595882e+117, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.663701929314861e-193, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0781543705942295e+112, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.179495138659904e+160, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 256520.7114538601, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3990484775008957e+102, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.893786883351233e-190, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.766677261280533e-152, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.571967629510204e+96, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x0A, 0x1B, 0x96, 0xBD, 3.7654372535230604e-08, 1.0000000376543732)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4159425457565083e-229, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.671406072923993e+219, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.777008527220647e+244, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6813297601653116e-289, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3830513806130493400000000000000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.486931071756215e+213, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.855156577860684e+173, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.165212888528992e-217, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.6493629349829e+38, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 522103821314575000000000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.384395476208818e+56, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1272376546394755e+129, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.684655151733364e+212, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.901510975267965e+195, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.617627613275927e-195, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1218876867606354e+220, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4035078887200143e-79, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.644394094304482e+243, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3342969549366793e-45, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1301838198502383e-202, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0432363147768233e+128, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.335327474414544e+203, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1607030044934176e+242, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6738341867988188e+131, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0262217798132535e-189, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.948678972437668e+233, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.76029320005787e-207, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.151702209508158e-69, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.228319979071733e+145, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.352145430693712e-92, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2378771773565454e-251, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.827190360268556e+33, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.957436840509988e-26, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0822237432269005e+71, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.788835856538552e+270, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3527157829003404e+172, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.972108990316432e-123, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6703568576674263e+202, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4990260664930285e+249, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.87891671065684e+244, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.7458663378923985e-164, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.6928520372168e+129, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.387855364514532e+173, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2934980194437963e-299, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5980866799745486e-137, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.34586392738179e+90, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7817712069531413e+149, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.49061962617352e-38, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.8268072284211804e-223, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6255861236311693e-253, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6341902593277693e-279, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5129716548329983e+274, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.098624701803035e+181, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -585719677050.0123, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.348224129113539e+131, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.269705383713811e-49, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.052437480096038e+47, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3970760383923402e-44, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.749582578579454e-299, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 813865653102.0425, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.600845151192786e+51, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1575680444765177e-231, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8742191009147252e+282, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0475024379842e-192, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.949362290622007e-219, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.589114102955847e-24, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.723334372635024e-162, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.028530953971997e-269, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5771782592295016e+200, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.654438026649389e+102, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1122751060542626e+66, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0055158044350539e-178, 1.0)
	assertULP(Math.exp, 0x03, 0x1C, 0xAC, 0xAB, 0x03, 0x8D, 0x1C, 0x75, -674.5419349033394, 1.122431533271824e-293)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9795362666410758e-188, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.631067946743503e-300, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.524535449420905e-289, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3385899455678968e-187, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.574412482236934e-173, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.286752073073899e-229, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8486446738041866e+191, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.253275273941776e-165, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1094385439224237e+280, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.915467735448266e+80, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.770893568996204e-237, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.614426718470521e-63, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1636816296126675e+62, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.113060887245489e+117, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7462416906739067e-259, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5274689509184986e-152, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.349397519703432e+220, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4750841962521591e+252, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8364151001402009e+288, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9494975645673314e+154, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.429497125798587e-269, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x23, 1.7830583211419724e-13, 1.0000000000001783)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.784090768844873e+273, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4108946256762007e-173, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.824999738292836e+110, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5926251658850997e-80, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1487848401476407e+212, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4309556755711945e-80, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.290417577912817e-163, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5297011170054647e-56, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.30049714949261e-35, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.544633630625113e-186, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.613909533162005e-24, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.926736416811806e+122, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0432600928315695e-156, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.893694964023112e+213, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.885587190233258e+125, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.477814424827285e+83, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.908300024145112e+146, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.99269760297353e-200, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4464325652618883e-279, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6623973531179013e-265, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2412614006417524e-181, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0184509577994454e-217, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.503753190192695e-78, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4453341933199487e-204, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5038885336835255e-258, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.5919526939526445e-52, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.207825809444028e+58, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0xEC, 0x48, 0xE2, 0x36, 8.802287195839166e-07, 1.000000880229107)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.347303487301957e+261, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5824181879550543e-287, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9170119403410426e+118, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.452984572849903e+182, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1762278692148918e+301, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5362279372917512e-269, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.8686099469607785e-87, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4267541320710448e+292, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 243587602867218800.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0002549619477526e-36, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.053086911981507e+174, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9334094301193176e-73, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1513169218394e+184, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.1124732321796534e+181, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.771515682219989e-141, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8739944788164347e+92, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.450828799496144e+224, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3505804331163148e-132, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2248917387697134e+278, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1876730692969606e+219, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6248142647986824e-133, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.14150656663829e-221, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -718484189.7333803, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.9345079525002204e+94, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.031677029985379e-157, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6344427215247563e-138, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.635923771191354e+58, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.737451867372309e-279, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3503079360714963e+291, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7484271456475407e+88, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.573936944629724e+81, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.639151830912681e+273, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0330298654770654e+171, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6040687160967154e+66, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.040655723192776e-48, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0403128239176739e-277, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2664220163181407e-23, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9067572484568734e-44, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4743536000467051e+37, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.118594117466837e-235, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3889999345806106e-132, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.381170566986158e+103, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.4566203399745125e-37, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.995991464985696e+112, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9118070579045954e-222, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2008373307472961e-181, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.210999437399388e+132, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7844265203703146e+290, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1101991250214413e+167, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9041225562555815e-183, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.263585415954996e-207, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.432704076882967e-272, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.563369838239547e+294, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0257575522975555e+99, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.754641786321691e-74, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.366846746425411e+138, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6320665310474855e-131, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.815533485323299e-183, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5634544771821757e+77, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0502314910059157e-122, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6491543187831174e+307, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.473439752991343e-237, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.890857494585017e+295, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6257082023595087e-115, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.117526426021879e+202, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x10, 0x81, 9.381344480060215e-13, 1.0000000000009381)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2476157617371473e-176, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2062326036770934e+256, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3871401094666777e-28, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4543818354051254e+120, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.626021513697822e+49, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0358377855647315e-60, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.048619147845474e+240, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.203933510726002e-115, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.46457161148078e+124, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.467759613980572e-228, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.009982735789562e+50, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2994395577658344e+160, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.585564833672788e-286, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.880325362085171e+59, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.218258358566613e+288, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.253101429625346e+138, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.998856364075117e+206, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1062256654598306e+70, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.644059701052645e+239, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9320415310962296e-97, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3970701686364465e+170, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7813491988308146e+225, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2832115604583795e+184, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.819952411195506e-218, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.752466465967939e-39, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.622570884654973e-85, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.441457852801859e-78, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.544258377684376e+91, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.440841337608725e+304, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.046818745509743e+86, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3951577886050293e-225, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 98816881314520.78, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.375875335360949e-58, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.889663011948701e+157, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.291287226756872e-92, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3807069799497325e-101, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3183215262743527e-179, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6475716603446292e+130, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.519168442321133e+220, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.0400612998634195e+54, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.985706063645994e+227, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6948145929529884e+277, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.966416028936161e+134, Infinity)
	assertULP(Math.exp, 0x38, 0x35, 0x32, 0x8E, 0xA8, 0x59, 0x23, 0x8B, -85.66895636708477, 6.229382225763845e-38)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4624800362581114e+69, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3754339950071971e+156, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.954911451574859e+200, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8441318484489937e-149, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1236880424066402e+96, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2493362712565164e+102, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.775923293950749e+84, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5834198008389666e+179, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.417656166903725e-65, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1742669094728509e-265, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6853644551980076e+283, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4693389525636034e-269, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2518170271650293e-111, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.022377343646246e-42, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6699709059359922e-38, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2200244070985206e+294, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.422209084487418e-133, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7900634376189751e-115, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9134334070431228e+166, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.903043056928674e-199, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.551364594194234e-60, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.362221357489505e+177, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.635860725036312e+173, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.582055214270799e+171, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5307152896510218e-156, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1257539775482555e-32, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0730902136241717e-214, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8323112249768304e+245, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.719350991898148e+209, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9584390676142423e+188, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.880572810811647e+192, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.275333086960769e+168, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.686390197652488e-58, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.949231601120255e+99, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.640795924867617e+34, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.289022538365755e+261, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.680389082525288e-73, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -26916.657842527402, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.795910742159617e-106, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6384851689118e+34, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7747945982789353e+197, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6587386875094764e+86, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.60602705508885e-120, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -29596090329032230.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.996321893438602e+131, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0781921990656117e+173, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.355694074830748e-183, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.55226263001142e+296, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1081328637220685e+159, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.072280129201153e-124, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5362389804271094e-47, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.238704494216503e-188, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.956313232801139e+50, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.325754245853656e-216, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.7981483876190664e-257, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3704072934864724e-194, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1497100366436026e+136, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1299652027544107e-301, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.579160352660321e-233, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.776036377969013e+294, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.369276814075138e-278, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.843005163860289e-68, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.30550815831062e-107, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3570585076194237e+142, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -69268993003362010.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.740679971535218e+70, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2440962005066663e-164, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.193474367698319e+298, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.363794215433535e-267, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.218991630954751e+178, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7035963363053204e-271, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.724541168606702e-28, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x75, 0xD8, 0xFF, 1.714908811157961e-09, 1.0000000017149089)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.532190812397887e-112, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.849605609755692e+59, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6309716146243629000000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.832617044548708e-244, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6112154999185097e-68, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.484345097464692e+194, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.288177651690362e+225, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.851232194860055e-57, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.776194033647946e+140, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.611456403021268e+41, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0104405563014347e-25, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6659316728313117e+239, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -231932139916594100000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.5591539241781343e+79, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5287234225430134e-245, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1653004281308683800.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.751060548154209e+290, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5324697278645185e-28, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3504753505733843e+162, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3410535090901567e+202, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3166285655247972e+141, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x31, 0xD3, 0x2C, 0x42, 0x69, 4.7515592932501934e-05, 1.0000475167218161)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.05902503272805e-281, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.240497155455322e-163, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.55040388773541e-127, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.709638766130617e-219, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.458053363689945e-167, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF4, 2.2476536420595276e-13, 1.0000000000002247)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9670003046354417e+147, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6982507876801776e-277, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.53714334098046e-141, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.654104814069659e+156, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.888769282383853e+103, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xC0, 0x0A, 0xD9, 0x29, 0x4D, 0x25, -0.007837963877301374, 0.9921926728660863)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4402616553742674e-276, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.448975943235186e-282, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.796705522435847e-271, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0428790738776015e-95, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -24454351885880188.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.7310842261995e+214, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x1E, -7.244234038291634e-12, 0.9999999999927558)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6596194159273651e+50, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5490860465144432e+64, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.595878695800873e+112, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.157551358778786e-286, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4527499727701307e-229, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6302017732615248e+199, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3678293950014403e-192, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2362443427944076e+129, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.552607790501604e-166, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.156159623395798e+217, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.118264938172706e-28, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.966566447589721e+305, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6047488032196166e-98, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.386326893913667e-161, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.0352526816697015e+143, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.027908001618957e-138, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9927268471521555e+180, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.370331859498204e+35, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4418025957756909e+214, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.9334142364298635e+211, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.704011512262776e+229, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2977861279505407e-178, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.655207516630941e-223, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.544560717817667e+280, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.218676419497719e-72, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7268204687640716e-158, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.88355492422625e-268, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7485605734028996e-133, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0xE2, 0x58, 0xDB, 0xE3, 0xFF, 0.0002158381261592963, 1.0002158614208836)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.366828263156281e+261, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.866216731146615e-132, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x14, 0x8F, 1.1686432936892863e-12, 1.0000000000011686)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.03300723432168e+190, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6861213702356204e+146, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4223529073117479e+175, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2035798671084678e+77, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3243172706578717e+221, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0343904752215598e-278, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.056245262974687e-124, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.708535932564865e+269, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.349871969813819e+184, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.058579745863503e-218, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.300100647525879e-229, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.980629804225735e+32, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.782976238877222e-136, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.107910363227331e+168, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.209822376903006e-119, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4792585197082888e-180, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.806940123958225e+65, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9382355647383407e+40, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.431313438540142e-57, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.243990876356226e-131, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.12472472705908e+120, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0x56, -1.610291043086631e-13, 0.999999999999839)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7746653881246957e+274, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2471022524220203e+125, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7843353279560625e-36, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.817938450533765e-284, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -266388672146444900000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xD2, 0xF8, 0x61, -3.2763470160763057e-10, 0.9999999996723653)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.780923974244337e-180, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2641852310628485e+297, 0.0)
	assertULP(Math.exp, 0x3F, 0xA7, 0x73, 0x39, 0xFE, 0x5D, 0x77, 0x73, -3.0834497095890487, 0.04580098371546528)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.233330290169016e+269, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4735783763443842e-37, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7703137252482464e-242, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.442604476135346e+178, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.7732050367191616e+76, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.276337403667536e-205, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.834256969472793e-255, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5583665584039434e+206, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.771142091518276e+254, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -42891523439968770000000000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.36902706336246e+269, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9282039650433073e-85, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.879416056307202e-273, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.840204911871535e-272, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4282570642367511e-170, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.042159384120057e+246, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5402532687536324e+222, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0211739175056638e-274, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0940022734619795e+90, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6731291326669397e+270, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.594444749735645e+249, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0809283712551392e-167, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6024717676931835e+239, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.232448295813146e+135, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0677079717809132e-118, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.084318799791473e+237, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.357382951025901e+117, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3014379590019454e+122, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5345845875243706e+167, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.24671678473785e+289, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4036903847376061e-51, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.1515233430663865e-283, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7946621201709837e+137, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.127733864200128e+41, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.432709297628172e+215, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9227698313185156e+164, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2251425777172748700000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4351536502177562e+69, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.235609331112308e-90, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.642203134438907e+123, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8108815756870163e+273, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5020180494007006e-207, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4475827536236966e-54, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3701225036389631e+138, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.011234383171425e-283, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4786363312025763e-64, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5840471753220885e-117, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.63626788559261e-75, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8283258333138083e+295, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5402176626564507e-102, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.249327178454382e+283, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0447016744663127e+212, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.959329862712707e-189, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0903744066343244e+122, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4864413250259182e+231, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.501852668595596e-113, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.1123173473308795e+214, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -24843282152012535000000000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.876603188631866e-288, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0993728070672683e+252, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.76925650382086e+132, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.431165187658184e-268, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.865019016622396e-154, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.590228360838266e+211, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.373121446380857e+97, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.48287133278302e+262, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.87880770688647e+102, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0654270733356307e-79, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9510129864612392e+167, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8241848001302975e+185, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.112375025939233e+212, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5115056113063056e-164, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.63184872961921e-149, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.847354024342815e-49, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3179422922260455e+307, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.932305725490425e+284, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5419589817703504e+280, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.915131073936976e-181, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.7505736276997705e+280, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.290061222335902e+147, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.207283942889064e-296, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0232109666659942e-57, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.27749879688422e-65, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.983752430249235e+230, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.600041900181667e-305, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.337503018609245e+236, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0699002295771089e+182, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.291286952964961e+88, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.942680275553925e-85, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5690728467285344e-94, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.942671267320773e+232, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.125959034499258e-30, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7975167208801004e+77, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.655983061624681e-104, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2818738962599514e+284, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.294794838090196e+188, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2314845286106996e-299, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1343931193802847e+64, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.282045121284487e-56, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.50299131290886e+123, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6602247347473198e-156, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.006386740364903e-140, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0593422596335873e+210, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.022689190325359e+111, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.505919296723976e-113, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.988739453554763e+148, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.50308348922028e+59, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.810300754823916e-43, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.093938229640829e+214, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -357908.7459639886, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.502155413784265e+83, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3665671266615094e-78, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -174169.07791046525, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8960713473714013e-171, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.820066943143107e-228, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8620126463686687e+173, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3211572636192349e+137, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.643952767656634e+182, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.803304363536847e-44, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.795095845816635e-134, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1114195998402758e-91, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.991418826697517e-39, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.271648408260773e+52, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3801859234145381e+132, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4896219819422826e+253, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.554408029145735e+207, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3291626801617716e-94, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x1B, 0x05, 0x18, 3.9319120047878613e-10, 1.0000000003931913)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4980437164306607e-170, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5983659780910193e-264, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.663290012242874e+180, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9170784344663713e+109, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0021830196699893e-137, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1378819432420166e-225, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.6330087030357484e+226, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1247791877016448e+225, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.388164832936209e+215, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.514400867353991e+121, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6604707344682043e+45, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.043184665427978e+170, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2364299528735061e+162, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.430609405835276e+299, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1398343582627382e+69, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.064750121553444e+223, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.011860134759838e+100, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7454251358849937e-94, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.222917511954772e-171, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.1725451715259394e-116, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.0556064926300886e-188, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8015237255749937e+202, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5962649154290496e+191, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1668420091096515e-229, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5435781562697566e-30, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.0541123881235006e+285, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2678624718647982e+204, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5485175921858572e+261, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 485710508430657540000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9376181234286405e+83, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9580646403746745e+111, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.375192363147539e+256, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9715139919744334e-135, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3167221149240214e+156, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0874971899224855e+60, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7189842529370556e+196, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.11809970492953e-178, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0103840798152107e+192, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.109213356130419e+185, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0650488645586845e-167, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.04910295094481e+100, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.816327091580983e-209, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.197838572960347e-173, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.387876228581022e+48, 0.0)
	assertULP(Math.exp, 0x41, 0x3C, 0x14, 0x46, 0x09, 0x69, 0x8D, 0x52, 14.425383752471252, 1840198.0367668462)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.892850526106222e-160, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.128036373351499e-149, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5767348150092763e+78, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.41669648846305e-170, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.507289553008565e-209, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.384281808579625e-76, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.394409482410153e+134, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.613412370050738e-168, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8680070425530396e-75, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7470520314458e+290, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0388465091329351e+185, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.01322205582657e+62, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.03842578634235e+93, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.765851347141043e-31, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5817155710513527e-136, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.577660303946989e-44, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3079306761960865e-164, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.386098094845104e+112, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3638013401220465e-293, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.563597234698489e+228, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.432253327831423e-181, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.869515891573915e+229, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4196085263379266e-189, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3594929435317596e-88, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.670853981612081e+251, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCB, 1.0199146201690195e-13, 1.000000000000102)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.5398118430874615e+273, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.743635424706087e+66, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.37937708757288e+246, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.717495829466157e+277, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0147053925611934e+148, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFB, 0x4C, 0x30, 0x48, 0x4E, -2.2422759726068646e-06, 0.9999977577265413)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.800347644585538e+115, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.596184599883868e+145, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3829478697411544e-114, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5506022834052485e+56, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3184827667079917e+104, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0894385891494068e+89, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7322986004383365e+163, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.572133202934936e+290, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4824422834522216e+303, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6102046248664854e-28, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3653222582498242e-195, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0450879730135713e-306, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.169060290820701e+225, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.628369501340509e+254, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.304134454420315e+185, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.031196344429965e-216, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1684638296098918e+287, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.085137003173132e+264, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3163514015536017e-66, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.1106668139879324e-298, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.571121838812631e-95, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.910447913045171e-75, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.185984555364321e+161, 0.0)
	assertULP(Math.exp, 0x3F, 0xF4, 0xE0, 0x84, 0x43, 0x7E, 0xC3, 0xBD, 0.2660602232578573, 1.3048136364488834)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.666397043483585e-70, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.413541946488765e-284, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9924965036077385e-193, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.504825761586837e+91, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, -5.942082833563604e-17, 0.9999999999999999)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.4511987655207843e-225, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8708133097155524e-115, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.773255044151803e+154, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.555128901566799e-35, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.512801932513092e-236, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2234677251908896e-192, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.3590330536909e+76, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.3774909641665266e-270, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.1110353650404036e-129, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.462051971148379e+262, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.339272796014308e+186, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 14690.591937206409, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.093337185419422e+124, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.00022244446684e+190, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7739335367493376e+77, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.365736892791008e+221, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.683157174459727e-226, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5293086461366919e-180, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.840244805928395e-150, 1.0)
	assertULP(Math.exp, 0x3F, 0x80, 0x14, 0x03, 0x58, 0x43, 0x8F, 0x28, -4.847156159358115, 0.007850671893215713)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6695652543634153e+299, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8431416485051664e+245, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -30165948043118296.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9338958529610712e+98, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1477181347322087e-62, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.164947366934483e-94, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.282238798297298e+154, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -24977.31728613656, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -886972791856084600000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.048249978873097e-99, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.545034503695352e+140, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1737376526852042e-253, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1116394936808536e+207, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4418771858947.966, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.052644649462082e-291, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1580389626407877e+88, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.109068412721279e+239, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -81077.62086361383, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.258822727275195e-79, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.418267520196783e+301, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.774887170586228e+256, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.913232222893148e+78, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.035138370813132e-238, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0302466264770548e+179, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.289462205441975e-31, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.27385079186007e+301, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2489653771837786e-270, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.531960228016852e-125, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.27279419745485e+286, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2117648217700694e-229, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6704261982404496e+53, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6403287405121702e-284, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.198648594380162e+158, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.986139952584645e+184, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.588926823174389e-114, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2358496249871088e+123, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.766626169928434e-135, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8769307276947946e+222, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8252961112104943e+238, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0158608991817354e-36, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1364146955601644e-73, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.131799694258056e-237, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1361882579761158e-240, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.279423861010034e-279, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.691124647783219e+204, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5224753999914434e+249, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.793691328331443e-228, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1638405239058092e-59, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9467500520643044e+228, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8073068219303835e-166, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1371660903136455e-168, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.157626710908858e-187, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD2, 0xA3, -1.2893456318140534e-12, 0.9999999999987107)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.968162046140249e-229, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.361843619835657e+104, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.692394447948954e-209, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1798167.6942476614, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.062182351657135e-215, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.689931403585208e+150, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9683253888695185e+304, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5410131296460363000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.197457872198815e+218, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.542933403898953e-176, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.311399566220537e-199, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9233859177540665e-149, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.755199932057714e+254, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.123349876177775e+193, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7073575377403408e-202, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1193242827475721e+257, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.130699015412553e-137, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0216936704865673e+231, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.473698363316444e-106, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3040729993302837e+210, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7608911503275493e-228, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2029713519663286e+191, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6805189856457354e+242, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7455268259830055e+202, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8622857488593107e+209, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.356189929658164e+217, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7345039380903076e+101, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1433850421929511e-291, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.943397978533811e-225, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.1373595259753e-82, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 420602579430779300000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.299272458998092e-150, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 380752472610025.7, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.25088266211433e+132, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0849429190366083e-19, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.72891284763805e+299, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.02158681389174e+105, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0059032329527843e-275, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.532823288399268e-84, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8338962709387934e-154, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.732932076331581e-205, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.201408231079061e-208, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3807528510677427e-113, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.756769308988378e-83, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5966679978826998e-24, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.630228638852877e-58, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4120882838220031e+299, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.381498140762427e+259, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.60151845844931e+61, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1188322838933956e+51, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6920955982674584e-143, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xC5, -6.335570388278531e-14, 0.9999999999999366)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.994363370546784e+148, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9541858592907124e-257, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.305057179398738e+218, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.63177620830144e+286, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3997921421652057e+149, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1434678527686474e+279, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.185899505585316e+221, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.080711648405619e+42, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1474303788176447e-302, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.590244335270855e+248, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1523273040055293e-226, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1336182637084965e-305, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.688939778112995e-194, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xF9, 0x54, 0xFB, 0x80, 0x32, 0x0D, -0.0008143008625071074, 0.9991860305904666)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.760211465600627e+173, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.3460155642616145e-255, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0578541182691048e+68, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.450469511439995e+243, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.52439798159412e+38, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.338157667415191e-52, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1723768623818555e-55, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.089862517173555e+147, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.31330105730013e+293, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1168901662443563e-36, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1711293566093355e+58, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4614758382563881e+79, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.02937005080552e-146, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -11514493744682660000000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0975586272944712e-227, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.148752695382272e-101, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3181444726806087300000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.406931581425268e+67, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3566899547455284e+163, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.560105731656585e+108, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -57224660281978.11, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1487711520076447e-104, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.918497329587002e-87, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1264909657663623e-154, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8962293434903037e-106, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.468141830906569e-84, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6165428924214107e-73, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.098614666404615e+114, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.550060329410545e+108, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2503653211518924e+36, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.665588338494348e-96, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.258924771675577e-225, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.298865487980781e-191, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.5370043190014424e+200, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.721264270077945e+195, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.096944816791139e+107, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.983170107222225e+135, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.3003366166747154e+119, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3910300133243215e-96, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.095685239230136e-182, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.297758593997141e+249, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.785247461758723e+174, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5223025324918026e+236, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3495758266096345e-129, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6158825601535775e-36, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2385911962669.2905, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9825910875643256e-166, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0859532029661904e-129, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.324736131362015e-161, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.104937053524633e+182, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.774844896383233e+294, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0252394100202257e-273, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2076235126598931e-162, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x4F, 0xE2, 4.540811025384268e-12, 1.0000000000045408)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.068986721992404e-227, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9061326018790715e-150, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4339543630785221e-185, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.837540654948156e+91, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1638180366258151e+207, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8453246654196936e-81, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.282703533560388e+151, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.502249525340761e-249, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9895797010480225e-60, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.297089725503116e-156, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.986673444147148e-87, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.909246447947091e-110, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.668603367987677e+305, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5689591109106e+284, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.126895285259034e-32, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4231710306475799e-24, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.646502624372031e-179, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.745490274809463e-286, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1657902704314533e+117, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.020888061246123e-38, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.083462612700416e-22, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8322134975178395e+285, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.661824804095679e+263, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.87292077365082e-154, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6567352252293422e-53, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3970183284028840000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9997931625002806e-41, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.457527486186202e-144, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.012417082889725e-161, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.137382409897843e+217, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.606624546351643e+248, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8577871554484473e-17, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.254093676460567e-263, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2599705263426903e+61, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3881948948540625e+50, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8200548603987443e-194, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6235756780258161e-62, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8321840052723304e-127, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9303912056292365e+41, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -258840994.03582618, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.808259072930823e+35, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.005690893410329e-38, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.565340648375241e+262, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.266452800420069e-128, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.618359145061549e+192, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.923534214564194e+61, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.971721307988752e+56, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8589039502860533e-172, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8682618511942217e+282, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0231739340676172e-259, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.004159967100286e-231, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.80787875106638e+200, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.136776908405213e+210, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2845978700941697e+258, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0221177725362428e-101, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.61278482467954e-292, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.898646963995194e+184, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.049458562952506e-128, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6651547100678214e+218, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.8233381349146075e-308, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.682987047967147e-81, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.6630713791070175e+81, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7494711443751482e+37, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.182491039310693e-196, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.75437367372711e+158, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1532756143396693e+61, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.871614925239494e-32, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.916826893436282e-188, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1397448227408383e+284, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.868956267838856e-242, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2614745738810046e-225, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.689515796725894e+264, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.915830913659345e-131, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1898162251940817e-229, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7496311560776745e-110, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8271714425322613e-236, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.798508533414426e-256, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.367489252603298e+47, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.842794777922298e+247, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5146235614724153e+90, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5413586713051143e-180, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0941667007641714e-183, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.644760046813256e-30, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.874182284391387e+120, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2627407341822293e+265, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.068029687966132e+88, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.675447936650312e+62, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.387301475871473e+248, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7877325260549086e-252, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.964219223651632e-214, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 14559792994114492000000000000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 35895271852690106000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5642998548385117e+109, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5691169188970644e-47, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2876144218315424e-95, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.486882692872616e+147, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -64081861474463.54, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.219615647254939e-75, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.753364933023469e+250, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.682479781313734e-273, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.473947403274548e+225, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6670340850061468e+126, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6237467458440554e-304, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.373831920091591e+42, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0221146964023842e-18, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.9468103269545775e+180, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0311525895137481e+76, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.347465787594935e-165, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3001356207033249e-163, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.70685483211103e+86, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6571431471411835e+183, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3387889122606914e-259, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0879919512684526e+161, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.476818032477346e-200, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2402147022373307e-252, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2292871135183703e-214, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.146080820066319e-99, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xD3, 0xFC, 0x4A, 0x42, 0x96, 0x2B, -0.005387348515511906, 0.9946271372215895)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.046211446264034e+44, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5508923140097477e+248, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.355855136909297e-209, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0346130803819197e+97, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0259931328828032e-223, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.709979926854062e-297, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.114468935604234e+224, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1317017678599723e-36, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.994391260896864e-125, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.304084316774926e+213, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4420480063515076e+280, Infinity)
	assertULP(Math.exp, 0x3E, 0x9B, 0x14, 0x73, 0x4B, 0x49, 0xD9, 0x9C, -14.723035520959197, 4.035217202944323e-07)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5630114427872482e-55, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4055839321088985e-21, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.405941262532722e+82, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7761690854798909e+279, Infinity)
	assertULP(Math.exp, 0x3B, 0x51, 0xC1, 0x16, 0x2F, 0x9C, 0x50, 0x04, -51.1888554537431, 5.874386829402511e-23)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.191376695158058e-74, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6479068235674065e-258, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.67249131026032e-296, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.37549444832969e-235, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3096540943370108e+88, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.039007193799489e-93, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1923688882026362e+304, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.73202551368698e-194, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.67654177339807e-300, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7526611494367841e-68, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.766007103848257e+187, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1437924184650365e+44, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.57105556525435e+81, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4258571183487893e+81, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 42082505196086005000000000000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0904093387272065e+119, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3888369682804906e-159, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.000636667896772e+48, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3941579030439074e-201, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6218228796549844e+305, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.670491886770812e+304, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.597947459805627e-24, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.586738420116333e-236, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1077871902365687e-82, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.137945357626695e-257, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.99760872325668e+56, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.966088898087422e+303, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6852282957841798e+255, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.524245482456541e-21, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.526803993907109e+267, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.412660035773734e-146, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.136575248048056e-264, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 128824429.00331372, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0492715136874464e-74, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.695716937886152e-87, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.602365219649701e-161, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.0960245197360236e+53, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8216742364515885e+124, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.263426483711792e+157, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.071290256503626e+287, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8685765024118.445, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2963990743420112e+117, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.937828271031439e-50, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.889594577411279e-280, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0313398508963315e+37, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.373436973652383e+202, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.326177856723699e+228, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8877413881642674e-228, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2521109246406218e+267, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.158066751489846e-103, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1926266786473182e-45, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.598988105419047e+130, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7512717956531513e-298, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x34, 1.8209323284789843e-13, 1.000000000000182)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.820014959046249e-211, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.530918908789554e+271, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.145407480104397e+248, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1267663101130778e+307, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 60214.59429982635, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.157201814299913e+300, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.008975807006421e-160, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.417814587544908e+91, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3490390352367363e-63, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8306914911191333e+82, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3215940922062193e+44, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.732533629617187e-175, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2132049080731437e+191, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7149004147261133e+101, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7815850999343e-268, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2464507919351572e+146, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5447427216362218e-58, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8380499502785425e-117, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.958484120963531e+206, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.80130922090723e-224, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3311795236113352e-208, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5554183783682402e-280, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.623091603831022e+162, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.343850241759773e-174, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xF1, 0xC6, 0xF9, -1.0348423330471535e-10, 0.9999999998965158)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.143547894000972e-299, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.598336187507179e+225, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4635766505127475e+189, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0872175340812413e-152, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.723880379860305e-219, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0824861871638288e+62, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.8950642668450246e+256, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.43399741443692e+287, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.418935350679023e-232, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8882383478385707e-66, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.493073216380791e+48, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7600703236218723e-221, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.0893263573059804e+244, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -420644096535406800000000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0993122057655867e+204, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.398062743321709e-43, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3051050965509467e-246, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.227479179514144e+97, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.51215031135298e+147, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1149875682829029e-231, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.342776285807322e+242, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.015114807625034e+171, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1451170238507030.5, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2487160485458536e-303, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x02, 0x88, 0x6C, 0xCF, 0xDB, 0x49, 0.0006181951910661203, 1.0006183863130949)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.881296356318235e+73, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0681343280010424e-223, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.806724901740328e-235, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.221816197457516e-254, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.124843399311776e-36, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.893639083094335e-134, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0260233398246316e+111, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9892711396241596e+160, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.636243563795832e-192, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1899099936848216e+140, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4318129986212086e-287, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2122630911891676e-26, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5695479661798803e+91, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.211628967874489e+208, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0737342932454647e-77, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.31867189430875e+58, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 439435780961.40204, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9342663506426236e-308, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.49366259337816e+189, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.904337616369417e-117, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.7121951878058597e+114, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.809660349004533e-148, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4983467489600815e+150, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.143385035713173e-160, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0154571792402764e+73, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7460670576302075e-164, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.74745963893576e+37, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5564153916078765e+162, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3512382190552513e+138, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.159551167869705e-211, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.042176101746246e-290, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.018917170284088e-112, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.595978199139337e+94, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2107133205965338400.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7757735017569845e+295, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.794488365590831e-247, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.947931717809612e-64, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4101475766534317e+191, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.581228222415381e-251, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.977444831219506e-79, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5588445511796904e-144, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1876895762459814e+96, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5097187344481218e-30, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0325420255714508e+127, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.738675925292276e+166, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2377926155145537e+237, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5599402889920292e-188, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.41923348233459e+67, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3778853851995687e-94, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8673091512776415e+65, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.6908783867668e+38, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.614288585984026e-65, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7854519627960232e+111, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4371741343273573e+212, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 704032539900652700.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0093244283423595e+111, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3486314117963195e+185, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3230461101054588e-129, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.237055516103785e-199, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7354809668564266e-51, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.439209546843589e-147, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.579601668314696e-299, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.919060549447479e+275, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -14519366056094.54, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -27954679158.81632, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2571440464305393e-185, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3420515126224294e-82, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5826674427775482e-250, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2195699339396502000000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.807784159467591e+271, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.158038392489187e-57, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1670350726124105e+167, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1086002702503334e+163, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.073978394626267e-178, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1108840379689186300000000000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1642528186248854e+145, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8099683042895317e+295, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4091845715956518e+215, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2253448050353345e+246, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2336034007532969e+235, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0726340690613098e-236, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -352878305370815660000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.402099946309567e-261, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7011149558087613e+241, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.089455961639854e+213, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1745232877928374e-165, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.87599322356771e-56, 1.0)
	assertULP(Math.exp, 0x35, 0xD8, 0x37, 0x99, 0x41, 0x99, 0x19, 0x00, -111.87536958120278, 2.5890732043265767e-49)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.033369470998534e-268, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.605729728850524e-152, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.144077282718649e-154, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.38498668862717e-297, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1802829596340093e-128, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6834590365023872e+271, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.0083073598639876e-138, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.620627534959997e+155, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7174285958600536e-120, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0814902101032351e+100, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.111580221415458e-271, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.0773732889544865e+258, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8495726853598065e-178, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5640441696868696e-265, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.866376848340081e-51, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4095691841406813e+103, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.989675494334647e-288, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.432750590176352e-125, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.258248742634767e-39, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3509340105554013e-191, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.403723532391498e-30, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.31219641816862e-153, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.158664506774944e-105, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1878599773723712e-36, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.750682609197484e-45, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.835450903314223e-149, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3659297953129777e+256, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.883212422943911e+143, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2092191313540233e-266, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7747083.746691318, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.740104011408386e-96, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.3180881994261474e-24, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.20713498255406e-85, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.573292784323424e+213, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.489200907669369e-96, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.014535640858445e-168, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9808719760517955e-77, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.275658442919829e-252, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1237102677834378e-270, 1.0)
	assertULP(Math.exp, 0x47, 0xC3, 0x8D, 0x66, 0xC2, 0x56, 0x13, 0x1F, 86.843904292174, 5.197905995929748e+37)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.871329787231698e-113, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.197044146405086e+143, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.773057055392784e-203, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.065739275545914e+213, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.16477288828414e-72, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.434092359016015e-265, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.663922118694688e-284, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2029631959056897e-30, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.690003244127935e-304, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x01, 0x67, 0x65, 2.0429128100992838e-11, 1.0000000000204292)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.532638823357415e+228, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.910349985186409e+130, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.210823520085716e+213, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.822911614745999e+148, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.592141779079514e-259, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.735429149576696e-138, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1838067726062787e+88, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1978821749492418000000.0, Infinity)
	assertULP(Math.exp, 0x43, 0xC1, 0xC8, 0xE8, 0x99, 0x05, 0x2C, 0xD1, 42.387733404578704, 2563059675802739000.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7877951620868503e+307, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 54391361738.152054, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.570022110346856e+209, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1504297956706134e+149, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.501352586792761e+179, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.406067102266247e+178, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.728140314286734e-162, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.061705736934614e+166, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.061467923738318e+185, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.841964184983432e-164, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1179641148203622700000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.993937977436484e-87, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -90973944.59076507, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.575561594148699e-102, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0783934198642076e-104, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.969701603072725e-47, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6198849003020916e-130, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.791595750162493e-111, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5918075535403705e-225, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.420992671900872e-236, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.119218093394441e+207, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.765813163881793e-83, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.853721255736754e+239, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.223987959325938e+140, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1039481461446856.2, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.656558597717151e-100, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5455665147031465e-273, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1964291289206719e-172, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6930172649774508e+258, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.988605794035102e-125, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.001903800178253e+143, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3393216995329619e+231, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3331680867022363e+145, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.56248492366844e+289, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.718473593569239e-30, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1418495909013752e-32, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.713214068946278e+98, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5532307145274996e-65, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.042909862813046e-227, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.775148415521098e-78, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.20173448126236e-294, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.354376247966509e-265, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x07, 0xF0, 0x93, 0xFE, 0x8B, 7.571914820012794e-06, 1.000007571943487)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.921535788695096e+185, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6073421378659745e+51, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.996643819585568e+112, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8722096836835668e-35, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8392916340664935e+143, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2508478823317104e-173, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.903128404949928e+203, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2584121117590781e+33, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.393717548982676e-114, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.802369507739757e-94, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.057494577899745e+62, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.328157462612195e+299, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.3318435377566105e+219, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.832585312955906e+275, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.188533503380647e-144, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.199503602122199e-256, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.01721685727041e-40, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.970305512334432e-155, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1934302362110806e-214, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0302566288180148e+152, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0504554085644757e-64, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.426808789598946e-207, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.099968904749234e+227, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.516898175298203e+294, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2248262862656836e-91, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5161001884168797e-285, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0774555075619328e-20, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.734552564189784e+111, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.974444702210289e+297, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4457116472833033e-27, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.876239463105894e+187, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.961636425640734e-201, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.029269240444972e+74, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5081808304357098e-113, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.024474528081959e-291, 1.0)
	assertULP(Math.exp, 0x3B, 0x90, 0x39, 0x23, 0xBB, 0x57, 0x9C, 0xB2, -48.50644895404489, 8.588491349058836e-22)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.742232556628897e-204, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6481352555155367e-306, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5252928555950297e-304, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.74262753926202e+253, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.194245545568189e+190, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.785083631771695e-136, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.946133635226148e-245, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.882431217040654e+299, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.798289635642104e-31, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.750123183868653e+295, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5452186236024095e+299, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4283482887317e+36, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6044049219795038e-207, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, -3.5213810991614604e-15, 0.9999999999999964)
	assertULP(Math.exp, 0x3F, 0xF0, 0xAB, 0xB1, 0x3F, 0xA0, 0x5B, 0x83, 0.041062366514161425, 1.041917084255801)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7160519424263967e+91, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7693130294911874e-104, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.808992990045803e+63, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0253727407044293e+39, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3621200704324188000000000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0264858130518554e+44, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0779886549629914e-224, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8839219461071341e-177, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.193086179000415e+301, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.403076200384917e+98, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.737622964484893e+300, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2158307019713504e-123, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4262472613466857e+100, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7010062618208362e-229, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.2076717663475e+77, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5850840113893207e+35, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8340803066958956e-208, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.834172930554796e-270, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2404897540844636e-171, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.439536179453239e+86, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.708887305696691e-93, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5257438220951583e+48, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.890037397790153e-179, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 128953065078028440000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.039381651280504e-39, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2699850429098742e+61, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.253250353146814e+206, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.1111419291719955e+128, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.20732274787487e+271, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7959649796474546e+250, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -133299231179242140000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.811738725739553e+291, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5041113985270267e-123, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.36782396121007e+283, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.102268714028916e-47, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.916317969035667e+214, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6350719886338825e-156, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3976404902402356000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.39995338450262e-25, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.425875054049392e+294, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4399503881191817e-183, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0335995521079729e+291, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4548045474001746e-88, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.153414581089785e+91, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9648808221566346e+47, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8863233432937023e+150, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7133454159187932e+191, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.187740872897557e+248, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1848749501816864e-146, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.311598129722609e-194, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0699299001508968e-66, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.625130376181768e-236, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.909159798385872e-206, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.864188981548716e-205, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8535629626525046e-148, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6817237684988373e+118, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5618607499654987e-47, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.404180168795047e-282, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0524142552613408e+305, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9389087927029836e+265, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0050336073897266e-257, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.0343123287873104e-17, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.803263553987324e-46, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.346774541622317e+278, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.068040664452402e-22, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.787825174174269e-192, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0466437402615322e-158, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.945133228110135e+221, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4086200.2199463877, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.963403299401853e-106, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.252256370461326e-253, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.081731020669888e+256, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7730621464818247e+165, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.5662261921495716e-294, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9235812342073186e-103, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1592239696047713e-128, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.094666707689939e-288, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.593674238837452e-73, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.960181739282419e+76, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.022044999213783e-78, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 103623061154901820000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1254683339519315800000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9118329314785993e-53, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.514650337814497e-289, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9351685758265334e-78, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.999046063579479e-278, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5103574900291337e+130, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3941794117091805e-281, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.776572461068778e+244, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.889257496154721e-80, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.525033760954326e-134, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.673064314653308e+82, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -476726.1453838926, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.501772559518296e-234, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.284994905154871e+178, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.096251017121434e-204, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.482595926040296e+260, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.925298812348862e-200, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0124579091355523e+223, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.145243595379242e+111, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1620101118615623e+279, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.366321648729872e-231, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.125112009146984e+302, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.709118902675432e-304, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.923759595046436e-74, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.989943419616598e-256, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2149269489329725e+60, Infinity)
	assertULP(Math.exp, 0x3F, 0xEC, 0xC8, 0x86, 0xF6, 0x3B, 0x8C, 0x20, -0.10594021996149082, 0.89947841732317)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.110804480322492e-298, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.166203319767841e+163, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7599779140185766e+55, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.185147763109249e+98, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0427077774606358e-55, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.234234738213141e+200, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.2356885210327565e+64, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.50612973424536e-300, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.099437718425329e-222, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.332251257364742e+122, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.34989956012681e+92, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.595079723156984e+269, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6359063954351857e-153, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5567869648479475e+184, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.552556367533823e-111, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1323903319530598e-33, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.005296854103842e+139, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.22578318985131e-202, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8570635321126066e+84, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.991283249133911e+291, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.469193003051047e-192, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.543682727775413e+305, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.712678162571106e-138, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.004773383720541e-89, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.158331769796125e-168, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9949255629740087e-114, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.274259131495041e+71, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.681915447489941e-252, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.154593359210318e-237, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2748235152945022e+169, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 88379087.90835953, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.567505708781091e-200, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.028486164037537e+286, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2758825538603853e+304, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.35024125250445e+124, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0805097785214593e-280, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.895146620438853e-141, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.654463387900869e-110, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0110601838454177e+214, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -123422519428638590000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.497787960269503e-293, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.541459005615664e+142, Infinity)
	assertULP(Math.exp, 0x40, 0x32, 0xCF, 0xC3, 0x92, 0xEA, 0x04, 0x26, 2.934472529780095, 18.81157797063147)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3105741570799655e-250, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.627943604555862e-253, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.833279980026258e+166, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.081923562905289e+114, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.601912464316723e+161, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8720223897079432e+161, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.50890910191089e+186, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.766180019837945e-215, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7736794272171513e-59, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.683842993551532e-91, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.535262171732252e-258, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.538868373908181e+202, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.712391480148874e-30, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 48765000205606440000000000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1743518644810902e+182, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7498009261436727e+199, Infinity)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xF0, -1.1544101220285737e-13, 0.9999999999998845)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5561963181641845e+245, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.948886105849286e-296, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.916288853752647e-22, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.400270214240903e+226, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.57724243362897e-155, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.080209119067996e-131, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.949309051723679e+110, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9079899369777053e-187, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8234230674437535e+189, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.698075619107388e-101, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8606204496979263e+121, 0.0)
	assertULP(Math.exp, 0x40, 0x77, 0xD5, 0x34, 0xA7, 0x39, 0x3E, 0x01, 5.943652960297561, 381.32535478935466)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.309303570782074e-271, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1422565152603321e-299, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.455061654531116e+100, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.032084216548905e+224, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.627273191348875e+170, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.477584610705697e+242, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.260408374427479e+76, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2857781016337706e+133, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.472798663569814e+60, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 3.0631010526968455e-16, 1.0000000000000002)
	assertULP(Math.exp, 0x3F, 0xF0, 0x1B, 0x9B, 0x33, 0x0D, 0xE1, 0x88, 0.006717195628232759, 1.006739806585843)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.971105105109893e-222, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9142925873232655e+161, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8921191742956227e-222, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.106552215168689e-17, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.502741047170277e+152, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0971832117418561e-130, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8117953433129485e-258, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.942660972762458e-33, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.569214254657257e-259, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.829253524416246e+159, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.158675181819181e-79, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.254281875596225e+267, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5106546734861569e+270, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.31710865289499e-291, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1108956721603832e-205, 1.0)
	assertULP(Math.exp, 0x43, 0x2A, 0x03, 0x7B, 0x4F, 0xAB, 0xBD, 0xF8, 35.83653697718325, 3661088773496572.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8698521658737254e-259, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.7483317892396436e-27, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.141923209217475e+71, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.407977276140035e+157, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.864099736536839e+112, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.404070606735318e-179, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.124877844669771e-44, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.704098385686406e+101, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.054679273720269e-59, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.340579004936692e-83, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.501418201086692e-239, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0016830824801867e-74, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.819685377957604e+97, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0578857892637548e+259, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.481340412537712e-278, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1110433071322406e-201, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6488.254352246462, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5625723744303163e+267, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0843317834505403e+175, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.834752836711404e-221, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.579810207925155e-89, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3562588583935469e-250, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8278158175012825e-133, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.554992770218645e-246, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5970952101864223e-88, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0080488668884679e-262, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.653762488539016e-181, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.827185616541576e-225, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.983816917050971e+117, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2096946881851744e+284, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 780986967322904800000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1108377854656615e-110, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4053807536571063e+231, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1044482396741062e-87, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5007915418815475e+297, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6197685399245012e+210, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x27, 8.045657407939779e-13, 1.0000000000008045)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.798334315921645e+242, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.137934794123524e-298, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.499715358159429e+233, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.76593730535671e-198, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.125575175999592e+69, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.623170466767518e-221, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.121441297404567e+40, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x02, 0xC5, 1.573914104667171e-13, 1.0000000000001574)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.06563138330188e+71, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.298121844855116e-170, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4729476428663894e-205, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.086162093292481e+132, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.973624127560334e-199, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.990765773095458e-106, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1854208219340761e-24, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4059468881665756e+36, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8466194585831298e+65, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.760526910239276e+294, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2943266714044285e+64, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.322564650292129e-69, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.402340983357216e+172, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7559360247617886e+193, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3225047973154784e-46, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.232358069141183e-225, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3159564937108192e+288, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0730892069390143e+72, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4639989231819013e+95, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.387038275270223e-254, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.855190914871481e-258, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1226486178198371e-173, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5447159902183039e-89, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.937168005893711e-89, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0x4E, -8.724317529678274e-13, 0.9999999999991276)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.061583730224565e-175, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, -4.608541124631223e-16, 0.9999999999999996)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7719033060483852e-282, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1931495118393052e-294, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.254662941213563e-43, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7890594674611197e+181, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6251160930481934e-241, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.9607371073502645e-84, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.889899757586213e+267, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.8479001908564165e+274, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4793792892893578e-151, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.803370515221597e-304, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.110943981398965e+48, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.935065041204679e+265, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3168704540613438e-28, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4156351.2202006658, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.794813600494731e+158, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5373574235366667e-209, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.504296382645548e+103, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5888513115909147e+205, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0710221642465681e-293, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.375281155562442e+32, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.583959165885175e+183, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1783250602855666e-153, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8531739241089017e+103, Infinity)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x37, -1.075813532178875e-13, 0.9999999999998924)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1186204437467654e+104, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.922546319410598e-266, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.440976140613068e+262, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1959.5640330144784, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3430604267322453e-162, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.36751563458038e-117, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.565493348977052e-107, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0x88, 0xFC, 0xFA, 0x95, -2.2167677917750039e-07, 0.9999997783232454)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.160219265683227e-284, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.0411287209712226e-96, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.605605439912652e-218, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.898743159576045e-197, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.072327916772697e-28, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.289561873347243e+209, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.8221833946897273e+48, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.531549157140327e+300, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4286348513360045e+280, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.33962425955558e+112, Infinity)
	assertULP(Math.exp, 0x40, 0x1A, 0xCF, 0x65, 0x4A, 0xEB, 0x85, 0x8D, 1.9024857889240805, 6.702534838318923)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7024620587286162e-162, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.0863501368335795e-286, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.884933409674205e-255, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.616973611572173e+91, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.820383982836202e-232, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.817683016703609e-48, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFC, 0x80, 0xF6, 0x26, 0xBA, -1.6671404571208115e-06, 0.9999983328609325)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5570595286071375e-23, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8372183218533.703, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2447407690651711e+306, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6461500420019303e-203, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2889351114035421e+98, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.953696988446264e+287, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5066347584155375e-173, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.875583678144558e-175, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4675601661460454e+59, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.950498424472912e+122, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.456945445709593e+106, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.090938391017818e+177, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -16020139788249645000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.93018268916754e-174, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9107836397223873e+105, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1871091932759715e+185, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.47189380999112e+76, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.013338002990128e-94, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.012749814990438e+149, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9840714906937105e+302, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.01229907326599e-108, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1542177062546813e+263, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5147039000267427e-102, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.059888710870302e+115, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2281370212381662e+256, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8771145594859894e-218, 1.0)
	assertULP(Math.exp, 0x3F, 0xF3, 0xC7, 0x76, 0xCD, 0x3F, 0x67, 0x4E, 0.21203996001338304, 1.23619728255149)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.290400289133853e+177, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7368268622138824e+203, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0540186189767169e+294, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.013638501655998e-172, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.749059808960154e-245, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.077876428520923e+230, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.768497007883407e-46, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.760900562214034e-249, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2524923281512917e+298, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.628212525020498e-144, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.776305095310982e-236, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -141267294354.8226, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.761753961379114e+144, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.152886701611374e-32, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.410429556405089e+236, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1170437098091884e+58, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.935855334755532e+127, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4768445907014023e-275, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1454733949261657400000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5575075054434454e+202, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8180515927004503e-90, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.16793015731886e-272, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.437674138699205e+157, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.451804167067006e-57, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.981831377381512e+213, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4553609616351774e+51, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.607447846525061e-203, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6814912317506843e+245, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.108654462161161e-178, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6664915106041327e-73, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.115375704648086e+245, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0531034179862507e-85, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.109861298025531e+119, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.751205022311926e+157, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.311492798810768e+278, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.904127172936979e+297, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1337107676697703e-283, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2087710626053.4106, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0006829907337942e+273, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.890213757060691e+231, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.016220709077357e+269, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.420385356607818e-114, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.054389876649133e-244, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.750012767286397e-165, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2507732111976774e-248, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0294610129685766e-266, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9629021181575431e+102, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.891085162733663e-189, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7732189224114157e+129, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8484836227945334e-171, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.079408478458276e-243, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0861149992866546e-179, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.687930721174443e-293, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3039912736253197e-145, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5678995474926217e+288, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.586697475270996e+232, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8536617148975563e-269, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.181558994506954e-127, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.691494202873611e-69, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.735244199947774e+141, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.11185191632688e+36, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.2840459918774395e+53, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1712630057672396e+132, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -78004037590102.7, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.081901136978189e+225, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x3C, 0x81, 0x0A, 8.804498755939535e-10, 1.00000000088045)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.0476575881736247e+208, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4530963292332802e+262, Infinity)
	assertULP(Math.exp, 0x3F, 0xC9, 0x8D, 0x73, 0xA0, 0x86, 0xA4, 0x4C, -1.6112933209672466, 0.1996292623346413)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5640415472317775e-124, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2606590973209433e-163, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.663398577294344e+50, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.21718258913987e+280, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0809748827682395e-92, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.297087696195866e+289, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5393787123016844000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5283338224379918e-253, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1738609414728144e+183, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.122375198011108e-226, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3591002864770396e+241, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.19861773108353e-67, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -134205100243355520.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1670123828906777e-294, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9275737192108026e-260, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4240896665542062e-251, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.278205463499323e+162, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFD, 0x07, 0xAE, 0xD3, 0x20, 0x7D, -0.00036261317719852275, 0.9996374525590138)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.479013838456814e+160, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1966387853088303e+305, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.505800809746494e+260, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0776211178446385e-32, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7912423069660805e-305, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.49559890147079e+62, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4642347598466924e-114, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.462531463515625e+162, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9165293398244245e-117, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 30337491515984656000000000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x76, 0xCB, 0xAD, 1.7287036579175348e-09, 1.0000000017287036)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.103278319158461e+138, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.017874463139458e-75, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.708740561742806e-183, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2481890465322406e+132, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0067520219621795e-66, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7938283993061673e+307, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 28111901.121493585, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2210105839085118e-275, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2688491718992127e+296, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.292163586521469e+58, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3451197352252108e-57, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.989256988357489e+138, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.833783589951555e+218, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4451879789141278e+151, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.342262864666013e+156, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5399658470861701e+178, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3016812240691513e+287, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.324052632158181e-72, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9396787657285905e-210, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1301577702645537e+286, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6293178684841391e-285, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5194188973746444e-305, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3409707127985477e+95, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9459773360644795e-241, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.81056150769685e-254, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.369823200136156e+272, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.153012078948879e+105, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.916168865896486e-240, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.191911932213154e-139, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.696363251877486e+85, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x01, 0x4B, 0x2E, 1.8825285433132487e-11, 1.0000000000188254)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6642720764514825e+212, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.284081282257934e+193, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.745688725705639e+304, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.316869943598589e-99, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2299398549178517.5, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 1.1970254030751375e-16, 1.0000000000000002)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.110294376626247e-89, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.6368581933339205e-223, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -11283538745499162.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.782587754599691e-189, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.0929012414485644e-217, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.266143452131956e+307, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xBF, 0xEB, 0x1E, 0x62, 0x48, 0x63, -0.007853212898710781, 0.9921775430141334)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.629432957668979e-253, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0284791218788158e-31, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1288877724607645e+227, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.87056387963949e-217, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.371333047318809e+42, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.771226395638573e-114, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.477158677542458e+185, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.835595353780786e+98, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5463958537270802e-71, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6107328519910718e-222, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.796072691008352e-67, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.595807897587388e-75, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4647097514389038e-181, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6285209689887393e-167, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1864265375766122e-205, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4712090339997721e+122, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2803899309204685e+66, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0905687894351772e+249, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.501203094174841e+269, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.559529525983498e-55, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8341344633663738e-124, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.032495861141475e-215, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2151411090.0802355, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.93843234822477e-99, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7023854092025088e-214, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2441751687731274500000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCA, 4.4850309919044153e-14, 1.0000000000000449)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.102600719592869e-192, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3440033713020073e+59, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4005577698591982e+209, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5329044568713358e-210, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.197683231459819e-261, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.226228444768729e+50, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.722463067377796e-195, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0338348513855455e+138, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.632817856056057e-124, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3761736193678314e+159, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.533879815137612e+307, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.741935037997113e-65, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.296713046346884e+277, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8780667317638974e-150, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.371458449204953e+142, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.815808917023772e+77, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2795688906680483e+45, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.789239714889498e+243, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.39189933778627e-84, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7537584121185104e-207, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.03481287157557e+300, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.547108635035635e+75, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2341015026348714e-179, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.096442170196829e-275, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.8453862974491695e+152, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.726763077951893e-35, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.0746307521123364e-253, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.483922460555319e-196, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4121226098383717e-218, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5232237828596218e-239, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6846443682417226e-80, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.53782614074751e-230, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.600767626129561e+178, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6103366473217787e-74, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3521452139527464e+71, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4875528466045195e+97, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.01218287049218e+124, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.263449225954732e+231, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.440636202136604e-197, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1532703518508546e-129, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3601328028106002e-304, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.131522573102496e-225, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.415250643881807e+265, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.858141581222876e+219, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5919259362068817e+236, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.957185995314811e-47, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.321308006802121e+281, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2884066232233855e-248, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.647791440859259e-104, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.080772299390307e+143, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.265518911182205e-152, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5072950516577282e-285, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.848549638187411e-39, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.187860360274805e-159, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x01, 0x90, 0x69, 0x62, 5.826756483769349e-09, 1.0000000058267564)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.997903420650342e+207, Infinity)
	assertULP(Math.exp, 0x59, 0x32, 0x1B, 0x75, 0x8E, 0x79, 0xBA, 0xE2, 280.1551853260007, 4.675747643610648e+121)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1442850184392615e+168, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.539162353438646e+234, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3859090627817737e+288, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.629598791877835e+117, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.1917898726733546e+305, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9644581527106276e-97, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.209208235455195e+250, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 475941005946490500000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.70050344151708e+176, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.697024152488568e+90, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.315057778975662e+214, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1887618145272156e-217, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -465213136824411.5, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.28578498712419e+199, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8421395777051616e-230, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.256463524031256e-165, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.460743908543483e-124, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9252709761368.664, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.160541022409164e+82, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5302183228568546e+258, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.901635052581684e+172, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1780982330994117e-19, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x9A, 0x1B, 0x5C, 2.242550191555122e-09, 1.0000000022425501)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8947666564187232e-84, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.460792788613679e+247, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.941470145813021e+143, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.588015327627087e-127, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.364796012657117e-34, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2255195219128659e-120, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3766462626508333e+55, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.755344885230729e-216, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.552260433767065e-30, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.251119717285411e-262, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3830007795345917e-147, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3896148997754389e+48, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.714273867176944e-170, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.260664378937972e+165, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.777133200269414e+257, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6393865200475776e-22, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.964879968679462e-47, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.455773569412763e-96, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.125464690675894e+75, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6970221229193557e-19, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3554041787165467e-152, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6853940178915e+288, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.341168101464025e+207, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.027794281105742e+159, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.64141003649271e-127, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9617326168236525e-71, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 120049986954.96754, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x42, 0x8E, 0x5E, 0xD3, 0x44, 0xA6, 0.016118453224666436, 1.016249056254574)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4073989232305935e+71, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.034600543747721e+260, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.287518781772e+100, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.211607233477048e-226, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3459025230262764e+251, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.815418780195168e-245, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8901460242079735e+303, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4077504594131269e-210, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.2361336179261895e-236, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6852295537798274e-295, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4522675406540248e-79, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9990141561480776e+196, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.167551750918494e-84, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7132022387323035e-80, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.895734723142906e-267, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.59246153102339e+45, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9691218947784929e+211, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.036623696993651e-93, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2800938096788587e+164, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.196314005532893e+306, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.511693373211001e+64, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.822436657732746e-259, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0959712715760393e-165, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.19280293011289e-154, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1269404.4864694416, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.425095430489692e-52, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.763326509337524e-55, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0975168326850013e-63, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.122150315537098e-64, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.808329564223078e+114, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.16113857400938e+280, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4802803109933157e+234, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.038812091062191e+121, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.6500941832245616e-260, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5850335525010178e-163, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.438035086517517e+154, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.818870553762503e-28, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0660696739756561e-134, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7446233892629566e-290, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3173682292594968e+153, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.880769811696075e-255, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.305527229788773e-178, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.602651611565266e+161, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.791430379642691e-198, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.406302945051264e+46, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.976104535530928e+253, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.2661300460205e+295, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.332213325377695e+202, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8873513978486817e+179, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.391461955236795e+138, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.0617513645044895e+44, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0747820460634994e-150, 1.0)
	assertULP(Math.exp, 0x44, 0x0A, 0x51, 0x9A, 0x0B, 0x27, 0xFF, 0xB9, 45.55225988425803, 60686921305794490000.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.036330542739246e+120, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3393486821711978e-225, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0024887046778264e+90, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8776574034695046e+223, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.970487012622709e+255, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0789749841427344e+177, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.9095137423525035e-196, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8517140106462802e-215, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4230243438443287e-282, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.092911484146954e+304, Infinity)
	assertULP(Math.exp, 0x40, 0x10, 0x45, 0xBD, 0x77, 0xC6, 0xA3, 0x60, 1.4031774304266529, 4.068105575083649)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.456244533471136e-288, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4810956545790229e+181, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1503550682835293e+33, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3831013290.83028, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.166428928611585e-40, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0139605160105237e-139, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.171972226742323e+152, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.290941736774148e-195, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.727556316620534e-61, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.125097169613013e-129, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5794495038656315e-96, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.525311781612167e-122, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0888401936704378e-160, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5759371513459902e-217, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.805461355665157e+188, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.644635821681253e-212, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.196024863964912e-87, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2943572095483355e-186, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1650260047867092e-52, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.619566253204508e-53, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9771215436047373e-193, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.869750769689073e+194, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.933404620247829e-88, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3868822867465304e+227, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.498468124081787e-30, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.678520881195948e-134, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2686259912742755e+145, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.933229238966766e+111, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2311961765883496e-281, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2239523525364794e-59, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.95718832963046e-305, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8845372383403711e-81, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.839252560429222e-161, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.306339116577981e-29, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0838388207212225e+101, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4234917156398.798, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.802576378467036e+42, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7287906863153315e-25, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1774574052238931e-161, 1.0)
	assertULP(Math.exp, 0x3F, 0xD1, 0x8C, 0xE3, 0x8B, 0x8A, 0x96, 0x60, -1.2938093580062837, 0.27422417285047196)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5002855296576803e-307, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9002466726015883e+153, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 31936299506922710.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.72657882880436e-100, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.862821226011636e-299, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.313733183397543e-261, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1569410435672975e-306, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5072012494004574e+177, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.152068840767471e-73, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4019740387276374e-57, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 589106132923991400.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0372576337851853e-53, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1179554344181076e-182, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.540012081299276e+178, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9756888313431606e+264, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0034345120388047e-268, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5914885853423922e+45, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2573954992235756e+186, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1093116566925592e+269, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2959883100760486e-101, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2301200986478575e-69, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5543215598829356e-58, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0653279088827074e-230, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6611892528135283e+104, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7106980194085643e+186, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.970572946053213e-65, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.865543304543193e+297, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.573836856885685e-147, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7824579279418692e-104, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.280728090999271e-267, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3282973072993237e+159, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2456553605663501e-120, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.7481435865072435e-62, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3211533352128543e-43, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2947281539313187e+35, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1516760213911143e+198, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.894497873656329e-295, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4693061560824894e+256, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.811683135121264e-255, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6525093299448926e+247, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6427164037679276e+50, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.399199555627849e+238, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.1860899857591405e+35, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 13987686089082303000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.997340128830404e-269, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.662348803487966e+40, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.624580040212021e+173, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.688769331665034e+265, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.05585626307228e-60, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7708833872980.655, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.597411604282852e+142, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.904421218062304e-217, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 35514.880031043824, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0672417613817638e+72, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.132438185663752e-26, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1013979604674067e-223, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4607823527398056e+155, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.05908673804074e-104, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.53009078819421e+65, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2435570084414516e+159, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 78330004543778650000000000.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.224489801277107e-213, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.710107009254599e-104, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4322778809234083e-289, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6493030317367736e+35, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.376741508254803e-138, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.29273880230534e-242, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.181624615815249e-43, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8119276710933585e+225, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.442352744639626e-243, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.952677837976058e-47, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1526272857363576e+304, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.932385969302706e+192, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1455188854126573e+268, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.737275741641449e+109, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.961762329352859e+55, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1919684482900224e-295, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.796215328830913e-172, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.879604971140792e-63, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.540031040541958e+300, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.351680750705326e+211, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8276131871919845e-18, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1714573629079125e+205, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7242689659540285e+50, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9550909918230157e+173, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.566236108340076e+144, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.561880709180406e+33, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6243553017531275e-146, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.408066351616456e+295, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.978725830829445e-60, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x36, 0xA6, 3.106477291386648e-12, 1.0000000000031064)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1417482627168562e+247, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1829866035111414e-163, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2385640274809975e+176, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.853754544879757e+128, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.123902188306654e+51, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.255031675198537e+163, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.491095266759705e-137, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4451829399561978e+259, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3826352790973184e+48, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9846940695443923e+116, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5737060063884184e-300, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6173327367329043e-157, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.701332203528757e+245, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7954802506227776e-152, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.229532288435138e-257, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6903380234506447e+213, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3501665626575022e+254, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0065196527461895e+69, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.057250634718428e+44, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.56343311456167e-159, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.110674924034448e+182, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3452278352000507e+132, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0370606940390401e-101, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3525906735962255e-35, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6905949984296267e+53, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.404389990605617e-268, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.892295836809096e-262, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.037412216992105e-21, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.093714885244082e+181, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.394744533474858e+279, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8467330403022212e-44, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.959182063012557e+84, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1152079717215833e-120, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3677013150300933e-141, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.415615954577186e-167, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6979565281625132e+243, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.174414998585793e-114, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.622281333685297e-267, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.619982118640804e-176, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.437259350268069e-143, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1853062632797576e-272, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.212334033097778e-33, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9888793064701254e+58, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.130140434168293e-118, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9167491009933753e-140, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9281241130550014e-172, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.87126746107929e+39, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.797842098807966e-215, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8997432947769945e+281, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.713820267445052e+60, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1530978390030096e-151, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -13161570703787.924, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.923771202159014e+56, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7367561469562302e-28, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0094849539621086e+226, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.7095951368971394e+212, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5775802673218138e-111, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.647178385981093e+244, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5605580731326295e-107, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.627865010595179e-46, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -23659529804542948.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.192337316947142e-286, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.30895855509666e+189, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.585029920692252e-50, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.146809335845325e+301, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.682076317214879e-91, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.992529583115122e+101, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 643136574445571.6, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.300478905764488e+175, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 54774805179203186000000.0, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.271617105755975e+238, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.420255220526894e-172, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2257959075253827e-113, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 10331.450915217722, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7838473417278083e-274, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.31668743694422e-80, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.754328162488775e+251, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.458759774144334e+198, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3093711429488503e-268, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1363786529087368e+175, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9137477324906877e+121, Infinity)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, -8.21345386229305e-15, 0.9999999999999918)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1044718941973722e+139, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5216243527377925e-307, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1890731739925046e-229, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.332959311443224e+96, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.800683255941261e-300, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9330374185705215e+139, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -34358510570594114000000.0, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.237895743043558e+77, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.280205520231065e-307, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0676792661727751e+158, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.003634770697226e+37, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4473160505045751e+268, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0997687480872544e-174, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.619882051850682e+223, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8525710273905344e+195, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.856263061343657e+273, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.747846720815021e-260, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.778939703743853e+223, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2891753451469522e-93, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.716077520778604e+100, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1724445652872635e-197, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4861090637246656e-179, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3066210654593393e+109, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2363534075634558000000000000.0, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9435442293296013e-123, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.991713088169775e+185, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -10916103696661347000000000000000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.867398310116845e+189, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5919152577404234e+200, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.289456769668818e+283, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.0541377216553885e+286, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.548187236972359e+286, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.060952875956172e-207, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4559995417909744e-98, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3984291945208942e-197, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0622969040544133e-216, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3462781145034754e-192, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.27046283875228e+133, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7593296951052924e-244, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.29184690217296e-286, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6545352824599938e-302, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2960523874671324e-294, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.278580060873046e-266, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7137604461329885e-198, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.844470879158089e+245, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6437382109120545e-253, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9130261217793486e+246, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 17601178416533046000000000.0, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0476763192002156e+211, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.295847613185551e+173, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.811503672466459e+167, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.255400081618268e+60, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.244060178189528e-235, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8753047385696.288, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.636826544298937e-239, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2218393500789313e+301, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.537737653731278e-191, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.6590665586804616e-120, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5684829134905714e+219, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.533195279540773e-296, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5528545507675977e-145, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.123284606001184e+207, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6883611795379285e+250, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.103413467219762e-92, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.505557694573759e+152, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.175706799640044e-267, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.043326294871827e+291, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9236316625420633e+49, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7314458768622734e-185, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.540165725061344e-266, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0589940544853582e+144, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3507247023682025e+56, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.202470659769093e+69, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0908932105338662e+112, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1105069135731102e-42, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.892117991821621e+258, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.494403752203515e+137, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8142018333369222e-42, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.696452679269564e-219, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.750528603774005e+142, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.941601729712511e+216, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5532453794409916e-129, 1.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0x9E, -1.7162369543036069e-12, 0.9999999999982838)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.528743870289689e-159, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6941961499066385e+83, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.118818078470391e+65, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0118355690318349e-25, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1024521306032.2222, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.315955800977271e+273, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3049171162109533e+271, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2800215720301143e+40, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4148902400460453e-300, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7123325606601424e+40, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.097512702389394e+126, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.360348861762662e+66, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.479377943581278e+179, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.8324136209599685e+44, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.94197240546718e+128, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2019256358305059e+58, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1913506353573626e+167, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.163953716658952e+180, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0739896435112069e-172, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.068030105036934e+302, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.533396508897927e+169, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5342503111795525e-25, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.622348710997991e+107, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.981970143272485e+170, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.289355214622222e+258, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1670687129323278e+141, Infinity)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, -5.972843926796581e-16, 0.9999999999999994)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8957710364025893e-137, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5366503215440057e+106, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 74995337181.6859, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7435117373691645e+106, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7127272490807603e-271, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.354321854290775e+187, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.847079892665687e-135, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.596161533709811e-103, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.836951285771766e+191, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.008652725693818e+82, Infinity)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2219737238797003e+140, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5250429835308575e-54, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.318287427744468e+90, 0.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.509394224007691e+39, 0.0)
	assertULP(Math.exp, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, -1.0091738111574665e-16, 0.9999999999999999)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.554938181150213e-236, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.182325437293404e-149, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2863131776419415e-154, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3338981453546565e-198, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7830275767505205e-99, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.630738127598506e+228, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7760929668003025e+168, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.834278560049058e+286, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7905090073773606e-290, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5745153837254146e-76, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.362588567112751e+70, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5527686203517168e+188, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1385493010862234e+235, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7702924518522554e+218, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.488624774621667e-243, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6134555217040166000000000000000.0, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1075261307856142300.0, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.716868173558875e-236, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4926294528911622e-295, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1262296579616295e+119, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9399730812416393e-302, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0671385555154807e-16, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.034752941214719e+176, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0638883068242643e+214, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.055515802573813e-148, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.664780933013394e+99, 0.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.221255496150398e+154, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.234227681815391e-54, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.2137264534941455e-103, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.093497495564198e+265, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0378334797563965e-117, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9871060499308735e-161, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.722767453988832e-255, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.17654624010671e+132, Infinity)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.953804554690937e+297, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3395759490729062e-66, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.802735479435067e-292, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.950176579803565e-225, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.24367253985025e-126, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0331716965742196e-66, 1.0)
	assertULP(Math.exp, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -19577.855967025072, 0.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5114652799924387e-193, 1.0)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.927924315978826e-266, 1.0)
	assertULP(Math.exp, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5144697052796934e+237, Infinity)
	assertULP(Math.exp, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.854098217564183e-180, 1.0)
}