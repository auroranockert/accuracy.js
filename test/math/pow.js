PowTest = TestCase("Pow")

PowTest.prototype.testGenerated = function () {
	switch (window.accuracy) {
	case 'exact':
		window.ulp = 1; break
	case 'OpenCL':
		window.ulp = 17; break
	default:
		window.ulp = 2; break
	}
	
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.705795134423042e-195, -2.687423637891058e+124, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.514701556184049e-306, -29980837806443410000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.27862882149675e+210, 2.0390171940078928e+278, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.74517086823149e-26, -4.6930486940736695e+68, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.060710334646747e+185, 6.081663022163234e-292, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4905922377685344e+83, 2.2224342142877995e+234, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.985863083708668e+183, -2.276762025253793e+211, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.397636939210125e-42, -6.1224032964115205e+227, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.856529172085163e+277, -9.299868524135081e+64, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.373660906815851e+221, -1.2742089588655919e+238, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3962369124658265e-262, 2.332905377311309e+191, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -0.217841650130545, 2.037570822280597e+249, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4933738313605637e+268, -1.1392959536842385e+273, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.456205506785482e+198, 1.0181960854650848e+245, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1402201529915134e+224, -1.6937643606638276e-141, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.8040137556732994e-301, -3.13045608501453e+233, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5736595840834055e+238, -9.334462639770143e-208, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.679199406595869e-64, 5.490329795680671e-77, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.888280176492182e-288, -3.5945527186070014e-158, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6738690853719938e-16, -7.908070397340581e-291, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.40236958162194e+136, 5.00572408137197e+139, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.269326447376954e-101, -3.814092233093013e-89, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.40098823957136e-163, 2.433373319720066e+103, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.054797539633865e-186, 3.6693010325042815e+72, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.006883677223818e-122, -3.8254492220597944e+284, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.822261673216227e-104, -1.4038658355275433e-171, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6553454673084296e-47, 9.409825918097881e-125, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.182150823871945e+37, -3.9528494475115393e+242, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5425205346788184e+124, -5.409000713002229e-30, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6057865404593164e+212, -8.442448492518459e+204, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -154540543581327380000000000000.0, -503371212740720960.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.987375127730932e+234, -1.0840653917634902e-74, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.484787439030425e-200, 1.3568535438799184e+100, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0004163071307883e+67, -6.28558716721199e+245, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.031792528828868e-124, -1.6380337487930797e+243, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.678087036779962e+169, 1.962396990615872e-99, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.306653165069619e+291, -2.8686171919646003e-127, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.836115662357433e-89, -3.7314813355024853e-96, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9295701136303468e-120, 1.4606037632062185e+282, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.665872342409392e+220, -2.5424496014441508e+39, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.145195053609447e+124, -8.550155183395517e-152, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2103620768109315e-209, 4.0950592302102986e+35, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.885198824310446e-196, 1.7741501232611844e-308, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.442775290886902e+111, 2.1003468016643056e+306, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.652392501399356e-07, -1.57595680658541e+99, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.022768680559923e+211, -1.4752450645663264e+206, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3750765555497344e+154, -1.883460616390473e-182, 1.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 7.743623037912215e-77, 4.154788791824401e-18, 0.9999999999999992)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.888371401196783e-187, 4.4289479478331816e+307, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.131986425885702e+158, 1.2120691809948543e+166, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.142839869148135e-239, -2.242329206391086e+215, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0837274569636666e+222, 7.413133973082144e+261, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.951845963752166e+236, -1.7983869134479377e+124, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.836884406185146e-61, -9.437853152310284e+94, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.637385612039697e-240, -1.0098561413419606e+98, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9691241489322432e-250, 3.254119442251105e-112, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7864524213841206e-208, 1.6888545271283608e+301, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.222165317782529e-296, 1.4863413485711162e-86, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.656134942939775e-156, -1.5674234551930406e+249, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.714657675412441e+99, 6.949912552544418e+187, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.564846437414852e-134, 3.462353848095758e+277, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2821035129146937e+97, 9.011862294297016e+274, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3928752516255872e+38, -2.0954070562988276e-201, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.15747622045358e+269, 1.5383207346402089e+87, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.828582007852646e+257, 3.6909142730225753e-274, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.637168447575884e-304, -3.286324462070532e+81, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8122073533293372e+135, -5.637539648380017e+115, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.813809738542847e-06, -2.7686213809571276e+201, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0731470907822595e-145, 1.1138690646140842e+142, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.409271705010301e-83, 3.5725858792614995e+233, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.757231800389722e-308, 1.787550650238332e+228, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.986782369058597e-22, 8.689575537604291e+248, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2979847921832009e-71, -4.3961747162250486e-73, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x13, 0x1F, 0xE2, 0.006872750989742313, -5.5881124656296505e-11, 1.0000000002782987)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8684068272480187e-59, 2.6614534368693266e+55, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.463963779019636e-250, 1.8112361031132705e-27, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -56138255097879704.0, 3.501234245516443e+128, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0804123261350259e-193, -2.1521195051800527e+128, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.646434777482774e+279, 2.2410190723656585e+154, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.2229603333667745e+119, -1.5424948287987433e+115, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0715412349012112e+237, 2.0818893018875035e+90, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.381560380566222e+136, -2.258060582376852e-67, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.110644310689823e+101, 7.02322692314374e+164, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.487075818913887e-112, -4.611653981525951e+130, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.025197092166685e-260, 1.7168643885095632e+112, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.152929014283569e-217, -1.5087555236070832e+263, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3143730630116992e-248, -1.1048866768429411e+267, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1429290303312665e+48, -2.0159949573587606e+214, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3575898199049586e+260, 1.3067931149144122e+116, Infinity)
	assertULP(Math.pow, 0x40, 0x06, 0xA8, 0xB3, 0xF2, 0x4A, 0x03, 0x9B, 6.899422236324158e-258, -0.0017582383875276864, 2.8323744705998712)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0299557597659694e-20, 6.645429932733027e-194, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1273596110080436e-102, -2.5018874835938503e-124, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.9001381441643526e+87, -3.321090932141252e+160, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3066484156342742e-260, 6.866839040906535e-157, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.686417301319197e+137, 3.644915267063703e+256, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.567329391968259e-147, -1.1784062868985713e+113, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1355137818714366e+213, -3.4983956794364012e-298, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -0.007533064105108909, -9.79180875107049e+210, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.222314015321939e+297, -1.984828381040178e+58, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.681469355706403e-31, -1.3808180724817536e-148, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4903537876201877e+303, 7.0506280066499245e-233, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9068888095933406e-166, -1.4405176817566459e+284, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.5751654164271057e-98, 1.7642041744460678e+258, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.8484393181199186e-139, -2.9215941446396936e+55, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2928858601407534e+180, -1.0079817860120908e+292, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.456304085981641e-70, -5.927142893926328e+275, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.5248978594338025e-294, -6.068754260273433e+114, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5897751397282155e+113, -5.2214652445192603e-284, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.442633300122743e+262, -1.2074795204756915e+82, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.685971516876536e+254, 7.849530456097093e+110, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.894495831050429e-181, 1.692426230443302e+170, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.673956931411276e-11, -8.79269241174413e-108, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 70.74813539066703, -7.451645848122383e-123, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.345620009822361e-225, 1.9593475041486305e+130, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5448540459054496e+47, 9.38644137753589e+168, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.415936730673566e+166, -3.16004955750733e+143, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6093669474039212e-06, 6.984089326084061e+62, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.588420263378041e-277, -5.351488203192275e-25, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2607131658432979e+186, -2.3413405010972188e+235, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.640697300614064e-281, -2.2862904951657765e-103, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0959509292877339e-36, -7.625510364554812e-45, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8856500882471944e+264, 1.8379168290735003e+34, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4101915590127485e-81, -13979939326320438000000000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5551153975246102e+93, -6.497928007021071e-234, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0120415873278443e-61, 8.1681186720190985e+62, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.782067757690254e+228, -5.747146803951543e+133, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.282237664741408e+277, -38088488666.85511, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3888536741429215e-142, -2.1339769252908036e+306, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0323822987350368e+89, -1.9330716637287177e+296, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.59055674313973e+127, -1.0183926827409786e+273, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.742640543635637e-09, -1.0329572173798469e+251, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8215190773939663e-101, -6.395410213572974e+38, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.463054979348861e-97, -1.1342611536087535e-23, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.822381469356911e-74, -5.372265032364493e+237, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.163487031434762e-269, 1.1366928637657048e+146, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9871374985985298e+121, 1.1085223824631565e+95, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.053496856142812e-184, -7.24941341152461e-67, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.758427950015188e+227, -1.2593344562901294e-124, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.800349236503361e+205, 31431909503992627000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.416317401830166e+65, -9.993833572994392e-99, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5551825970863096e-216, -7.345145393581351e+126, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.481551883325145e-59, -7.2730924330075186e-304, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0488532229260577e+208, 3.1140867521951677e+59, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2113036963620947e+268, -2.870111127457058e+171, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -672806711658728900000000.0, -6.852473597148007e+246, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1663189771335426e-122, 1.1887393230370386e-276, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5480803390517076e+111, 2.50910075066788e-110, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.258496854994025e-242, -3.480091673901879e-265, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2869538087447455e+192, 391054273640258250000000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.9111973618309855e+165, -1.932552252825375e+298, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.974443947292083e+306, 1.4799380288768932e+246, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.276435768320249e+196, -3.6978415623254145e-308, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 218740046768367750000000.0, 1.4023744164770526e-117, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.98952104134289e-123, 3.8855889974504296e-307, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5678563313123008e+235, -15988762397769888000000000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.797716597486988e-209, 3.672503148431511e+104, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4216380801847538e-285, 2.8821120444295086e+129, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.643080694401655e-76, -4.955080466842125e+61, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.342060726212049e+54, -9.161199641034255e-278, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5298229550990508e-261, 1.5237793042885692e+271, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.735926641118928e+149, -8.876117440343272e+220, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0219027490111982e-280, 4.984207902181105e-280, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.675179623630682e-38, -2.2138279986996864e+270, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7646616505188843e-308, -8.61559466773591e-154, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0xAF, 0xD8, 0x7F, 0x55, 0x2A, 0x3C, 23446979687.61836, 0.0017604103967801437, 1.0429310773785252)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.070557517756367e-306, 6927533315148799000000000000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.108188570813271e-208, -4.851026186661052e+115, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5348864528897356e-135, 1.8483644607306348e+134, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.838017960743737e-279, 8.321151987322059e+130, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.268181744029565e+256, 1.4736363959902232e-59, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9053610491585113e-223, -5.022583228661257e+253, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1275567629580485600000000000.0, -5.022784784508199e-38, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.748504291901429e+40, 1.6497044841899038e-79, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.223775801832648e-73, 1.0563648983855728e-226, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.568272179380184e-65, -1.214881011152356e+279, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.047198878217972e+101, -1.5444217200239416e+230, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.650263124245893e+208, 1.8124787680218005e+245, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2418716354125837e+254, -1.2703538326104806e-127, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -192.48753882562443, -3.947308458442604e+55, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1770977691157766e+131, -1.919699005923955e-306, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.887467153937858e+258, 1.9754858298658707e-216, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8738803960955312e+240, -1.0077873882698934e+217, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.292505134128907e+84, 8.002214434856561e-174, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2170315790685695e-301, -9.593009347949728e-128, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.4615149794593996e+199, -5.460819852859758e+171, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6073820080169802e-124, 2.5207264838629196e+249, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7207250189264198e-124, -2.29513368076221e-152, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.964654350992893e+262, 1.2445773170210715e+216, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3187131693602718e-139, 1.980996061382496e+109, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.274263323768739e-147, -2.667126984070341e-211, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.641567694202714e-20, -1.0686640550080462e+207, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.978995979481649e+61, -3.0526357270090968e+156, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7094655451575536e+227, -637459422996881600000000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.827969495262985e+241, -1.3730453861359228e+217, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2169065652916951e-20, -7.73650876846897e-106, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.682191034100976e-179, 5.094085878013217e+274, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.394514278621079e-85, 1.2652827716746843e+81, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6117213886926243e-72, -5.462327774364592e-268, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.289317983071086e-272, 3.3677740599921533e-228, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.701184850827066e+287, -2.3455581237909385e+254, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.39813535540543e+174, -4.609074068639645e-29, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7664878770570302e+35, 1.5889296926113464e+232, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.444034637524612e-285, -2.8896403839388127e-255, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.010729895389324e+117, -4.821778440345559e+166, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0927426147832244e-172, 5.483474944744485e+115, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.47370246236945e-53, 2.1355206417735463e+47, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.552758646950442e+226, -3.10306548553603e+221, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.235101263680758e+105, -5.677786435605213e+119, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4708481081663353e-114, -3.996345807638135e+220, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5701870964828775e+113, 1.2779741015689381e-275, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.938900441429155e+223, 1.5000470217427683e-109, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1202780120798378e-93, -7.981790631140985e-60, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9118220303949664e+33, -122693.98196161778, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8220076151982267e+271, -3.745730660456665e+115, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3495269305277105e-154, -4.9648498509869486e+79, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8289153837392146e+166, 4.617437816719966e-223, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0788380945830954e-16, -1.6557439857294307e-253, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.31393597369785e+113, 7.808632264132705e+276, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6072445105697993e-157, 1.4703880184805937e+264, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6494391312084942e+149, 3.2939016778724297e+152, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7320906.598147245, 7.3210627262257935e-22, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 876403481249713800000000000000.0, 2.2276162131093028e-57, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6992506866214287e-96, -2.0033107670872209e+242, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.726665333909504e+117, -3.740489943394553e-270, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.440727792687493e-47, 4.1869361602317464e+111, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6987948930281036e-101, 1.2250451547001474e+137, 0.0)
	assertULP(Math.pow, 0x3D, 0x8C, 0x97, 0x90, 0xC2, 0x0C, 0x95, 0xC2, 5.23176982260921e+244, -0.046943886557438766, 3.250540042001405e-12)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4320868063968785e-249, 3.0586867279815218e+305, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1611239954677664e+192, -1.3908185549020922e+91, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.644611778741771e+164, 2.7771715365973896e+218, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.887501583237915e+183, -1.0573838784603922e-173, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.062717799202728e+241, 1.0273163986198153e-43, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.761758824793866e-198, -2.0417099115915633e-25, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.710755461855803e+72, 2.8704399905101226e+143, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE9, 0x06, 9.526648815490008e+128, -2.1990453397117157e-15, 0.999999999999347)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9688005894779785e+239, -4.333790220215537e+138, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7789977987273956e-222, -26803007870669816000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5491209614337797e-209, -1.9419547272603102e+95, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.929463386664276e-259, -4.734209023719206, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.682904589317245e-65, 1.3007375184810434e+67, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.289004692001178e-139, -1.795673175535927e+114, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5658844966465104e+248, 6.386120869792974e+296, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0713186674123297e-279, 2.5035975539834875e+146, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.090866310331778e+45, -3864170720.7878895, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 243698330028581220.0, 4.088691918309179e+68, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1248150087459728e-216, -1.2505852664549939e+94, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.012332443881307e+61, -1.619644096561307e-263, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.034497801795165e-139, -1.5273840033188504e-93, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.185532054280053e+158, -1.1130662680084008e-224, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5803574767932753e+267, 1.2331982027896774e+32, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9612086900186697e-113, -2.8216710358045143e+148, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.30509630870344e-241, 1.0507222789198115e+181, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.4071457194861403e-157, 5.583674969569256e+271, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1520286233651029e+81, 5.150343099713669e+168, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.557905224394957e-77, 1.4049382036918374e+243, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.752633872624414e-168, -2.3147595722132293e+282, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.465126078886129e+257, -2.302617021769565e-213, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2941462063171233e-294, -1.8614987290089405e+182, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1284022016919098e-199, -2.8602893191583534e+41, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.457940248571481e+173, -2.9721456322311803e+240, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6044435545797025e-170, 1.0267258719857264e+123, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.682842214868576e+67, 5.948241962681343e+61, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.423180495950183e+206, 1.3655599894766958e+260, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3910210389393606e+113, 2.8005411094553686e+142, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.290827961460019e-296, -1.0987425483457433e+287, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6263940623610797e+137, -1.8876833420368355e-197, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.156045185205393e-301, 2.5656341468189434e+148, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4032182877604475e-217, 9.083888462107039e-112, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9545647917828567e+77, -5.292343121241653e+76, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1046407836578413e-16, -3.315653537599787e+188, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4881888123603265e-26, -311872475711671570000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9816218400607326e+289, -4.270314199588722e-73, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.835597277898076e-60, 1.1332544070728608e+273, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6561249004917332e-233, 1.582066483688768e+62, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.889361743704274e+254, 1.9926412267798255e-107, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4480375530959403e+291, 2.3929337534343368e+172, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.733536999181342e-240, -2.053779597217571e-178, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.440529271742994e+191, -3.7612543298228986e+173, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5447122991480156e-169, 1.6973631237362135e+49, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.059296936739978e+262, 6.8811828903644835e+183, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4211944583513768e+45, 5.694677800914369e-84, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9117253433428386e-252, -3.238858638377084e-31, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2295991137847224e+274, -5.109327601863643e+289, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2569404545130396e-193, -1.7717400888030514e+70, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4220479601967484e+280, 2.578145787438392e-57, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.982552638343781e+257, 2.467817650665236e+287, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.646705929418505e-104, -1.6144568115718304e+307, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.492669028032385e+200, 6.3296789940271455e+267, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.016174306928831e+243, -1.4539250544201704e-233, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2623101197083286e-81, 5.127390416538569e+208, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4781954418813612e-162, -1.730727983727268e+82, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6637975865173002e+41, -1.0446981517931554e+213, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.476282084754679e-49, 2.682286859785453e-125, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5387741019204142e-23, 2.2289436317601077e-300, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.849760768455327e+59, -1.6220454240058973e+193, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.471475260921688e+98, 1.5063267362510492e+211, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2902263553065426e-43, 4.987816346084103e-149, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.112244626381421e-137, -3.5532327983886253e+109, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.143024598459322e-279, -6.283855614166383e-106, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.659184017685058e+278, -2.2507266621609165e+262, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6925017543737738e-304, 3.702370758241753e+259, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8430071978738688e+119, 9.619346115221352e+146, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.967550362404223e+65, 4.5133918261195715e+151, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 102927838345821550000000000000.0, -2.2341823177443976e-77, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.548708523736455e+155, -8.501035224150547e+249, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0542103293557144e-73, 2.636509763239609e+257, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0045319678430014e+156, -1.0783191180335702e+97, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3155184036366566e+235, -5.295206837428031e+83, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5355049230922774e-102, -5.408856169613082e-112, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1832921989557632700000000.0, -4.3569524955969e+118, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.243964771272191e+214, 3.8159547798627213e+292, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.6416819532756806e-05, -4.4661010624981723e+139, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.396037377695178e+237, 6.239510579796806e-91, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.71794359624922e-164, -3.1124852780337153e-242, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6116830616279465e+40, 6.808269586199394e-305, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.441513244237729e+125, 3.70461309456087e+209, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.881050413671872e+172, 2.3183828184227235e-220, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5368462414881614e-166, -1.0734759115175697e+209, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0478228613937423e+63, 1.9411858846359174e-26, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.504673121828795e+137, -2.6675834696770167e+200, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.117143779006039e+101, 6.404458403657666e-125, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5182805363120385e-192, -3.9655130119729886e+204, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.847213467854246e+86, 2.6134548358222355e+285, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -67429542476735330000000000000.0, 5.1265115966990204e+280, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -34938507524482396.0, 5.237222391143797e+223, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4996405714964064e+172, -2.0335375989137436e+191, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.077606021534406e-147, 5.2877306015584346e-126, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6464735484511322e-36, 9.628011335759688e+49, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.147754019423964e-62, -9.552172503212774e+159, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3873003310756697e+248, -3.055447333113191e+225, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2510620541239663e-87, 2.3874419280762278e-282, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.728078782970915e+51, 9.589616979742545e-45, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.976315043972505e+249, -1.5384104680365769e-24, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9110177576740956e+193, 1.8918424082881631e-28, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.352537566664136e-49, 4.871629351023793e+88, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.548423118545676e-15, -2.4166070003957046e-299, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.2678995026609945e-73, 2.3374582581912604e+173, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.828199367562968e-115, 2.6323922729866307e+49, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.703664244094052e+226, 3.3528126421871528e+183, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.041834353783098e-64, -6.801918169547458e-285, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.557249722629481e-90, -6.682203900225604e+157, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.567896678310264e+134, 1.922997215225393e+287, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.797469715774792e+304, -6.56088452886656e-168, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.927237057116372e-201, -7.349121164183724e+78, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.259290256062442e-190, -6.374660986030341e+134, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7574822396875527e+141, 1.5739364529541842e+284, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9404318769828847e+266, -3.747956094786312e+49, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3300086786605878e+223, -3.871848021045466e+157, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8063652742423413e-116, 3.292669716864069e+205, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0761959122182293e-35, -3.627956051484976e+41, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6398194204493657e+242, -1.8024200125624256e+81, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.086216493380837e+273, -1.0574670751426057e+194, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.469870571899607e+264, -7.975335416239415e-308, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1245194857119205e-122, -4.1330335435130384e+138, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.388803036152134e-157, -2.4526838224171916e-50, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3572492242915895e-59, 5.083488648949652e+263, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.464183949563644e+94, -5.348080364342338e+193, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.256143508278306e-27, -2.5265817720992355e+75, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.156574788991006e-70, 2.519522364221088e-135, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.944921338275481e-248, -9.212072712397655e+235, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.075343316926991e+38, 2.576457104611162e-68, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9854407002334848e+263, 5.3855534644421254e+82, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.58972931109063e+236, -1.8072839632554166e+303, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.254273839004007e+121, -2.0275664057170064e+216, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0320321414840751e-153, -1.632780056304155e+276, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8082829205033302e-65, 1.183705644121837e-91, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2241374208025053e-130, -3.1571173600169084e+59, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5089676344946565e+83, 2.588871869044478e+34, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.439519701021929e-159, -4.4568301195384515e+213, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.871027313376909e-221, -2.709040896571992e+143, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.983598189094876e-13, -8.907487557083783e-63, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.495544073523491e-46, -5.08903616753163e+258, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0126708521284013e-285, -1.1656037791662143e+200, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3614244032299468e+247, 1.0673319276419395e+257, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.629269142218636e+126, 7.016003273675288e+280, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.832683274666709e-27, 1.8099167745312443e+151, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.169750594817393e-185, 2.5885875801938794e+209, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3110694007297122e+250, -1.5373219319458464e+56, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9624301943730354e-48, 1.4402952196620093e+77, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5151802910567136e-287, -6.762075685571563e+81, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6908299891898888e-24, -1.5044560036009785e+270, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0679498913453376e+283, 1.503525118837548e+200, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.748268483371656e-18, -3.902442257481202e+75, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.931658386096326e-234, 220.9619192072064, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5299369142489692e+122, 4.752020093943817e+256, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9390056027407865e-274, 1.1305739433139295e+266, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 318946.73145423975, -6.87703343400115e-30, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4871148075325876e+59, -1.6385877068254544e+44, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.66952514513771e+128, 6.465530383576533e-251, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.886170575261403e+273, -7.340832387146076e+120, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.86176451078397e-236, 3.4798451976755164e+178, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.622803753770873e+130, 3.4307481416981235e-84, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 302436859018887.56, 2.996557372347067e-58, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.630521862590337e-30, -1.377878750950432e+67, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5884791609578692e-274, 3.4161805836474536e+140, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9124098525702335e+158, -3.280339878891509e+52, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.257084360983044e-222, -1.4666066167484445e-27, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5424565064884006e-250, 5.525629767846223e+97, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.552787591707859e-65, 2.026878565017928e+304, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5128493061251133e+148, 2.035464890248035e-263, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.580817563283422e-127, -9.955599155045471e-152, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.220543061695977e+232, 4.802408179866733e-145, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.045403724197806e+215, 3.098236222287531e-270, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.681118176879606e-60, -8.768997662208718e+73, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0264882959508427e-255, 3.082131895877679e+194, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.937174824685853e+268, 6.995165459536298e-138, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.44917313815257e+232, 6.754090600546615e-103, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 31.909253845866154, 2.672183648271369e+217, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xE5, 0x7A, 0x2A, 0x4B, 6342.6270038189805, -5.642750288188206e-09, 0.9999999505974498)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4473642279074458e+44, 4.918095861658115e+220, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.07343926729622e-120, 7.954568570558057e+130, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3807231683592986e-61, 3.2670557363885683e+209, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.276562620812696e+100, -3.096840424484731e-306, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6247491245491916e-40, -2.9586388344111836e-182, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.62895695018797e+212, -1.3062317500234286e+264, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1590453632687837e+271, 1.438845784136313e-261, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5459269027413946e-59, 1.8832788075486093e+80, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.5383833258114e-86, 6.303190103550447e-111, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.572806109319869e-297, -56509138290038700000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.76995249738776e-263, 37609953232304202000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.339072861276035e+242, -7.189991980366934e+220, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4185114270564668e+77, -3.2096225975350343e+47, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.606297721673691e-109, -1.887923178026485e-268, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.6316627769523075e-61, 6.2176108605271415e+149, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1184310942200084e+277, -8.155485151766573e-103, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6327442441308568e-172, 5.842229968429195e-299, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1148046391325883e+213, 8.532519943937956e+88, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.0776239536110185e-49, -6.659253175402198e+84, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.431279627202126e-274, 9384642593749120.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0554815064937134e-77, -2.236322635490797e-109, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.511710691043209e-45, -3.3166836933208395e-110, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.54507354671678e+219, -3.0302922434758377e-88, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5325327271652905e-29, 7.106279193675235e+139, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.848777368586325e-278, -2.16563429313068e-309, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.300781217436876e-307, -2.7692280915858195e+267, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6838823329451096e-93, 4.796154899305875e+115, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 29010166531.42859, 2.681326188793718e-280, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.229582739684363e-296, -6.538633184134199e-231, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6217432200853045e-75, -4.908773030915916e+305, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 97047767228033990000000000000.0, 3.197273119240188e+203, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.399371743304737e+170, 9.681960793352936e+258, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.505091947441545e+158, -1.0038801970706306e-221, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3622153196827076e-181, 2.931778117054522e-138, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.190770444022746e+172, -331216.5463262124, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.08497809474581e+303, 3.3971707071979482e+168, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7463903714063082e+138, 3.13735784317215e+254, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.311311876076343e+302, -2.2922697939782195e+92, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.685820829932562e+192, -2.7338733657609373e+90, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.509651465233787e-232, -2.089234721744609e+194, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1481545109638934e+132, -8.754132119710043e+151, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4906461154178e-306, 3.0408296567904656e-163, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.856439532462974e+150, 5.7250378425231054e+163, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2716465879207955e-83, 2.0729191623820486e+95, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.750968475570719e+36, 5.918649403966622e+105, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0005171282461234e+290, 3.8426826312420864e-289, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.610885675950307e-234, 3.3093550613221724e+84, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2372166512700307e-96, 6.739221352192362e+306, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0779911206895256e+34, -1.492962363316052e+87, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0746929174813212e-288, -5.141686136257921e+87, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.166976817265982e-225, 2.7988010583354173e-148, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1898717747509415e-256, -1.6455222737410924e-80, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.936791063820393e-12, 1.5557907260301972e+266, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1304037113828972e-163, -5.071397349142276e+278, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.788910925730808e+305, 2.8772019767080165e-296, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.948568433859671e+114, -7.897451325827358e-63, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 114995494253022840000000000000.0, -7.450780817854505e+170, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.068758885794381e+114, 6.736558205504387e-170, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.3604368129690034e-123, -4.19657729642556e+41, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.388199012437341e+81, 6.6726391539328936e+193, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3931040045727205e+72, 1.5873526124714497e-177, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.546736131414551e+187, 8.345759081944093e-79, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.183176186904809e-305, -2.1867180809412847e-65, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.360199454739468e-124, 3.270204038033661e+102, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5332152161037524e+41, -1.61920067378795e+131, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.902701648001315e-304, -6.560730182580973e+131, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2760512537220672e+70, -6.17885013579037e+278, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1554365352014594300000000000000.0, 4.389289404487229e+166, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0867845231207295e+205, -2.471589032731016e-194, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.270956211737096e-291, 9.561153055735832e+75, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.724432932199614e+53, -4.4620575026048655e+271, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5893428512863803e+161, 2.203479814701544e-183, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.7963417620007015e-114, 6.492979029297195e-143, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2274509804218955e+217, -3.217677547567354e+127, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.299789163266533e-111, 8.084903129026442e+145, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0803313690729106e+63, -1.6260341470713984e+120, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.427847867228716e-49, -6.201179668568544e+280, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.407520694449979e-303, 4.689121218698632e+265, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.014531849440336e+193, 5107416656930834000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.30393688636533e-185, -8.01680801491267e+43, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2580466167508674e-80, -1.484757444400091e+49, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3032481869175587e+51, 4.956895257713762e+201, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.3931603365896894e-114, 2.096740582309191e-133, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5175186716612954e-254, 6.489042540416345e+96, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0264620103794825e-273, -5.156701910150055e-46, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.050770168871484e-45, 7.302518115880834e-70, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1471523589594225e-137, 8.255593240777178e+194, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2589463774591356e+73, 2.8161945773705425e+78, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.890604532219224e-102, -5.714476587845061e-108, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.157011206208071e-26, -4.019819174077051e+193, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.089207958000102e+301, -1.7480668454146529e+277, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.628197707457167e-93, 4.3017591040377e+185, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 229651914114.60022, 3.512342164510072e-47, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 627736714283117.8, -6.328172435989687e+287, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.3979436415779917e-70, -1.5852952034734e-299, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3318333316325586e-153, 5.117423949648563e+158, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.019290161121471e-82, -8.731601016888893e+153, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0523903202782734e-263, 3.430522110389782e+47, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2428243175510247e+188, 2.0610881959976814e+143, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5907991285914981e+237, -2.1014443666516515e+208, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.421063009219459e+215, -1.373621152063459e-284, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2474026604966476e-306, -3.0244037860778703e+243, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.271245824525795e+197, 3.70118357307147e-43, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.980704717735323e+96, -1.981424018031536e-39, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4454917570417655e+55, -2.2018920362939806e-232, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4895038495685533e+229, 1.2629480927968586e-239, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4342127890236367e-175, 4.6080203837985494e-55, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.834511799491512e+287, 2.5868616980558817e+165, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0800090451067061e+275, -4.2584254656239395e+131, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6794612181192564e+163, 4.290067393461272e+99, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2730000481277833e-32, -3.0951801263748497e-171, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.445640351283648e-287, 4.728116983582026e+115, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7077741966170233e+183, 9.22001388382154e+53, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.18412945166643e+204, -4.591187072173581e+286, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6709068122243767e+160, 6.032573486216555e-297, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0854706849083053e+70, 6.3084834981071045e-229, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6828535830194651e-199, -2.3763606239210976e+259, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9400309619272906e-10, -9.520324655428312e+266, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9241297192772752e-182, 4.717496361185175e-138, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x3A, 0x4F, 0xD2, 1.3536424836705205e-96, -3.844013952251205e-12, 1.0000000008485483)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4837099654886507e-94, 8.710468465474693e+278, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5567042865295323e+204, 928317051275038400000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0921475005663257e+80, -3.6801577025899517e-68, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0212386581122963e-195, -6.506080272345642e+190, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.840505579008419e-32, 1.349335301168939e+59, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.629477744987473e-212, 1.4533648413905156e-201, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3011781777221305e-53, 4.6281926191921556e+297, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.902163315933946e+51, 4.428677476045768e-39, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5786796782136037e-138, -2.0267484304808654e-89, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.434025278774936e-99, 9.416028245069877e-25, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.251080247010108e-252, 2.2567181388633838e-169, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 17520452403195423000.0, 2.525132708518234e+240, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1064060908905484e-284, 6.625118577807138e+121, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8553455451340838e+167, -1.1648806988468926e+120, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.752586012661566e+137, 1.0983594888162752e-73, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.617080715570843e-291, 1.6534340103432272e+67, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.932400109670956e-73, 6.721683327161494e-57, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.781459323751095e-60, -2.338237218787334e+143, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2401898014602868e+71, -2.5697729883260743e-111, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.867210881064237e-279, -8.667167051412002e-104, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.128675707445574e-07, -2.6907976189795063e+50, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0638804736933027e-141, -6.472909159554034e+38, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.143402781494411e-228, -9.98029932692175e-254, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1825361155026387e+145, 4.533150454258549e+217, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4398147096641536e+225, -98096014284454530000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.114233350697911e+87, 3.1871757201592987e+131, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.219157666131528e-195, -3053337541064429.5, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.094096732458564e+206, -3.9350572699969154e+72, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2785453405105.731, -1.369244688813561e+202, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7393858363561852e-271, 1.4955232363841566e-55, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.204065029228183e-81, -5.747124161771437e+31, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6715097108577096e+68, -5.641291013264707e+181, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.905819212421897e-84, 3.8768285509308497e+225, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -49366678390028000.0, 1.4125215707887477e+54, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.7015027826223344e-291, 1.7725993284006525e-272, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.811472065196993e+93, -7.420225083720753e+96, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3324812503363943e-168, 9.876194339149099e+119, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2016303765402817e+127, -6.97198712679318e+255, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.38137701261977e-27, -3.075649416885513e-174, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.393689018216788e-08, 1.772400205266441e-142, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.8349510507180525e+202, 76570645895004470000000000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.486302347412386e+269, -4.119038336740415e+104, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.780458673001507e-231, 9.932631351002021e+244, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4374046239926216e-12, 7.61054835628379e-91, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8553893118800686e+86, -5.636923285025425e-193, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.203449044995777e-288, -8.259294678900486e-93, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.804028002818385e-273, -1.2818028023091244e+56, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.011914908669312e-120, 2.0911804995125016e+299, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.21394937479188e-120, 4.770898397924884e+145, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.043631603607836e-148, 1.2574165001075834e+75, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.904155142277983e-199, 6.35602873836365e+233, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7955517527140706e-59, -4.50255183773142e-140, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.2524932512434758, 1.1476281378289294e-67, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.26263525725192e+78, 168305154352719570000000000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.663597557693808e+114, -9.861050816051371e+211, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.042483988302771e+223, -1.7374523744017166e+137, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.529735141043038e-130, -3.7895227181587154e+248, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.188240046566806e-134, -1.2403408410881077e+305, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7307354438168336e+64, 1.022278417725568e+100, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.100452612335686e-120, 5.052049312707004e+246, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0814426171675921e+213, -4.6242915723468845e-32, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2393412267551667e+178, -1.31592882770784e+125, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.986807186770558e+190, -2.8891913032325768e+200, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4170977668202966e-15, 2.960335707635583e-301, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.152076117764848e+152, -19245.18613085721, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.903101997715185e+107, -2.5480797876366832e+36, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.640825679747388e-67, 1.0287938259284333e+55, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.735507307134304e+190, 2.0941992229139364e-195, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.383688237870083e+50, 1.0660219660432051e+83, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.324306327039269e-113, -7.398424074647942e+118, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7441150214130807e-218, -90620020613.149, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.012009920039525657, 5.49765811215956e+230, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0x56, 0xA2, 0xFC, 0xF6, 0x24, 1.245824427895588e+90, -3.8930360532818696e-07, 0.9999192412721567)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.350883662415424e-104, 2.638730187272748e-222, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 526096291.85075825, -81548658768289020000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6213743105537894e-307, 6.76005014176541e+197, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6268665940652037e+68, 1.9907413170628573e-256, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2336078143638156e-272, 5.655984088263838e+240, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.977350324971919e-212, -1.1448723563625065e+210, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9125546046971277e+225, 8.248357436776275e+303, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 2.0053742568552293e-217, 2.9534256617282182e-18, 0.9999999999999986)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.968602593092362e+61, -1.4438543949170173e+143, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.36495743140636e+279, 9.321022730377458e+206, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.570469118901968e-08, -1.6103735116813524e-233, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3982749235725521e+160, -6.455141423397587e+73, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.997867251946827e-253, 3.8671015618384925e-103, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.719711082311945e+40, -3.9551849651151403e+288, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1830268633851428e+64, 4.851632610819906e-178, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.244348916036258e-90, -2.5426444239403908e+269, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4503497207720358e-166, 1.6208824354097875e+121, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 975.802653804723, 4.2121932263975097e-91, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2696876592522835e+63, -6818664769050608000000000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3686565878056585e+94, -2.9102066197490006e+290, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1594794647378401500000000000.0, 1.5426702806737565e-231, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.689836275574649e-183, -8.105519292239865e+80, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.53522090110597e-148, -1.5794674446830156e-228, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.430433750783332e-05, 1.3115779479850877e-273, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2963863775042553e+178, -4.794462009884759e+113, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5834534198323942e+107, -6.60866486458435e+303, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1068954340876544e-308, 7.140373500200774e+47, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.56696253808404e-184, 8.802334494402157e+270, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.717493338332821e+109, 1.5047732885615746e-84, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x1F, 0x72, 0xC2, 5.29702085685727e-84, -2.3866101672714275e-12, 1.0000000004576326)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.102642632285809e+249, 3.458060375247464e-120, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.332798566324987e-228, -2317.2719686609007, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.643387994693533e+271, 8.198602278468069e+107, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -242187999532727140000000000.0, -4.815985142787629e+235, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6046353653597185e+204, -3.0443789946869462e+38, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.404720122715952e-132, 228973.36205500914, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.864562155340258e-84, -7.276322343247071e+269, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.387109698330555e+51, -1.8526198496421848e+133, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8310058040856166e+194, 2.3297168129935925e+87, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.737318173552179e-180, -7.867071594601933e-128, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.038066093900035e-253, 3.6038871281426486e+148, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3736575459172574e+299, -149070872354664990000000000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.670666014640136e-101, -159626769527383230000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.447987659954779e-44, 4.6435433395568204e-164, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.989104462785412e-184, -7.207258652151713e+35, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.864522856776761e-296, 9.925510836533643e-97, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.563794615862951e+68, 1.7251497284934556e+175, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.392188067942406e-199, -2.6230864804698416e+244, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5318639047544305e+204, 1.729714155737928e+41, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.596977709543663e-49, 6.791639544681675e-220, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.172505593540677e+302, -6.589971330191188e-97, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4526514351835292e-127, -1.7640426192575494e-185, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1720328664749e+77, 2.0265227680478365e+117, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.962990315608494e-160, -8.343373124863293e+37, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 914397563154560200000000000.0, -7.88473382309396e-244, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5294052477934653e+162, 6.442524328938146e-304, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0201982827577265e+61, 4.3411899948459757e+161, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1041457669849180600000000000000.0, -1.1400242268961925e+98, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.005585037641068e+133, -5.716878209330224e+127, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1443352229732415e-131, 2.2208483094954705e+150, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.2576505061468945e+245, 1.9078928610191322e+278, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6144044168504767e-51, 6.5752200864875025e+212, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.23824711832346e+244, -2.332201912415851e+307, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.142657974538862e-126, 1.0269295485677426e+239, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 205696184424937080000000000000.0, -5.27934771114395e+243, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1551041970905508e+102, 8.342158524397991e+238, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1462193.114880574, 1.7767704722885792e+167, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.435421501261601e-294, 6442426688552433000000000000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x3E, 0x97, 0x39, 0x5F, 0x17, 0xDE, 1.1406907349571001e-148, -4.451876407470262e-05, 1.015280937297113)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.992845138219493e-17, 6.817696187052882e-191, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.934898575359073e-68, 2.1691457126216932e+265, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7009650568.946501, -4.334900450225525e+179, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4163473431757583e+307, -1.9810868366211714e-28, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7585289316781287e-173, -2.0591615227949963e-216, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.877992973714853e+95, -6.743976422740318e-197, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.548432914637502e-257, -1.836743588867031e+117, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3260425165614761e+182, 3.374124153748949e+291, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.397319359625072e-290, 1.498133101989663e+233, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.655138090045048e-239, 1.8558912859349331e-233, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.873357613364891e-109, 1.3740537802045778e+284, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9737204939412663e+232, 4.9267891205131115e+57, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4008889588999184000.0, -7.46008757282927e-306, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5584196742558975e+108, -6.09996569623799e+110, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.318757978318642e+111, -6.429885262725169e+150, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3213194251521512e+88, 1.2378949317555538e+174, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6078600736747162e-149, 1045648850767629600000000000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1076120585967402e-71, -1.8436315555955758e+109, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.64945266486287e-157, -2.5530093519898685e+63, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.408535730054189e+161, -2.840480927618689e-290, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1332209499358054e-182, 4.066099652789554e+132, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -104579297993331090000000000000.0, -1.5525214558520258e+46, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.439555751367084e+125, 3.881252540616406e+240, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5351429056536145e-17, 5.77866983785651e+205, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.991932176566727e-196, -368856090351188000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.41503297355865e-264, 8.296293765497439e-106, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.151661473980072e+193, 1.5582600290566557e+190, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.123750184268447e-86, -4.9353698774452086e+185, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.532507804947574e-19, 2.338605716456376e+80, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2173026998234373e-177, 1.1291190788153258e-245, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8515574510430924e-219, -4.18658537874679e-188, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1785805808722534e+237, -6.871680452753867e-124, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3814729698879516e+161, -7.795029518814213e+70, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6179081260626692e-199, 3.5257018945298484e-160, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.332102224450672e+237, 2.248448507722957e-268, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8915743844984164e+220, 259585857650700630000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0170609449957242e-49, 2.6690221379162764e+206, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8209649821571243e-255, 5.555270076302735e+160, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.584730668854416e-300, 9.161025917388488e-70, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3978768616013574e-253, 4.748518997407983e+41, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9495441135563082e+117, 1.2217192766158858e+123, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9572319770667697e-146, 9.430283619437664e+68, 0.0)
	assertULP(Math.pow, 0x4F, 0x89, 0xAE, 0xFB, 0x0C, 0x16, 0xE2, 0xD1, 3.9794022420527796e+55, 1.3518390234211974, 1.45212315851446e+75)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2094940375837176e-172, -9.109882834950583e-207, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.177282133645006e-162, 8.496737720126969e+131, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.1764745878302024e+128, -2.5318218483607553e+85, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.380761432872971e+88, 8.921156336743911e+113, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.238729654825727e+205, 6.1920211659489126e+237, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.410640010690549e+297, -1.2145020947858255e+73, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 535911786553119800000000.0, -4.0022133303817945e+303, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.594709270469256e-151, 1.280103909849862e+229, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.265708063702022e+70, 9.591136159106952e-292, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.122185155707963e+39, 5.511918611356489e+231, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9395069373044412e+73, -4.7615287510192536e-45, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5289695746691306e-265, 2.344130459629944e+146, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 482904923054224300000000000.0, -1.3520739695629712e+50, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7708713964795958e-287, -9.016787113481997e-204, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3054006404329302e-13, -2.85485517887969e-46, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0541773247173684e+112, 8.593263838045654e+74, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.897073523865197e+147, 9.694952576649637e+298, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.06122201455732e-66, 5.6957912728870525e+79, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.705454530262445e+117, -3.2143937500889294e-308, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4881377063747692e+291, -3.953173819481219e+100, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.292037039883793e+170, 2.5812192325649204e+219, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3966695433688e+270, 3.745654237460409e-88, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7524042913771003e+77, 5.295567895805565e+45, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9104518446484196e-280, 8.539181965960371e+170, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0641859056181438e+211, -7.585678488758884e+74, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.188959747237051e+79, -8.859120507503854e+88, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0136942086959916e-223, -5.436097052097302e-262, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5298374710029823e+193, 1.5230625011613164e+183, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.754355225282631e+42, -1.1803208133589284e+33, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.41106354882819e-210, 1.8571439774961407e+55, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.9340291091165866e-12, 5.3280639877540995e+253, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4973409663948523e+188, 1.767742390121639e-243, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.911785755340525e+124, -2.491880784883858e+37, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9679492188375042e-68, 4.2056889958163174e-108, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9264269503456445e+126, 3.037836806892262e+54, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.37676643520226e+65, 1.6635096139641957e+64, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.807721791108693e-129, -1.6396909695170994e+233, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7441170226627688e+286, 1.7089182432030974e+168, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4320570999775782e+163, -2.1887721604709346e+144, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.746762425504156e+69, 1.5050546255592416e-23, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1911093919269373e-220, 3.1758159673509196e-56, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0936909346814106e+163, 7.539444530971978e+137, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.941108460856574e-240, 1.8360013900340724e+223, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.604902095177898e-93, -1.9526970702231119e+257, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.84588341610468e-220, -1.5420360408850317e+147, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.77173995460962e-218, 4.680812110103795e+210, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.621344381254312e-88, -1.9362546467092279e+264, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.614468563617622e-147, 1.286887561026127e+93, 0.0)
	assertULP(Math.pow, 0x3F, 0x02, 0x08, 0x48, 0x77, 0x79, 0xDD, 0x52, 8.811499488674462e+91, -0.04854548950164882, 3.439398909404569e-05)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0.1920350553588134, -1.1707409172203644e-15, 1.000000000000002)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7455691716187108e+226, 1.7310384580373444e-246, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.4002441803387286e-98, 1.2334058577949414e-179, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8607604034441782e+74, -4.3399926628558604e-39, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.130243674451484e+300, 1.7649655642663424e+203, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.395048858623429e-232, 3.1287705855566935e-238, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.942783258103555e+50, -4.4088814878274814e+135, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.918315062292881e+184, 38681206867594480000000000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1341603918865848e+98, 4.126600943139948e-194, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.42091143670338e+142, 1.917582159331908e-48, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6683025443945382e-282, 1.2060580386147208e+210, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -47578587462761800.0, 1.1759973093431656e+193, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6965056549473255e-190, 1.5872498081679304e-209, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.22252615878685e-275, -2.4574721044682082e+297, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7059480575135287e-126, 7.502617868474422e-141, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0911985469485258e-157, 5.1113809578382124e-142, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.935148269705161e-56, 1.3929373424479612e+198, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3185892310020973e+187, 1.4145295838528025e-289, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.751315033235522e+45, 26463616560210390000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.767336065461787e-224, 5.437000429873169e-238, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7484778891086307e-249, -1.1737597522990486e+190, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.797208584608881e-32, -3.135563682522951e+82, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.696497229682234e+54, -8.233794521839569e-135, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6683758853441915e-143, 1.3767138994940065e+41, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1691158270021227e+188, -7.387719082278674e-210, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7267713263190835e+285, -1.5240085394482322e+39, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2074687827055768e+267, -3.865620866256033e+286, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.524040925815718e-200, 1.1892882740579583e+302, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7745045974890995e+51, 2.639087133761506e-121, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.460650490426551e+265, -4.650923756740078e+279, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.412309543594054e+307, -5.3432565600123976e+39, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.303570937531451e-240, 7.195602237999575e+92, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.471544853153079e+101, -1.2963964260477584e+54, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0x4E, 0x50, 0xB8, 0x61, 0xF0, 0xE1, 2.829239228596187e-175, 5.45609253015358e-05, 0.9783099747869778)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.895032452249348e-85, 1.4426286948084282e-191, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.319544659349078e+77, 5.578720710085763e+220, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3344978544117115e-223, 1.5990313489063595e+69, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.38642606133893e+190, 4.441633952092871e+293, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.916709567622888e-37, -7.982246746427245e+148, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0947824576978635e+154, -1.1564359393680917e-54, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.665310476288009e-283, 4.282816411516579e+91, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.474433499721052e-174, -2.218164608396779e+159, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.044232384965507e-255, 8.462861175261265e+277, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.574155321984529e+271, -3.956344215155383e+74, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.290647324963968e+281, -1.391450767256755e+254, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.7883840774481e-279, -2.835496078949917e+242, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.095223361490717e-264, 46579046236526460.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.339710122995547e-302, -5.792898865943346e+136, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7819440195406145e+302, -1.4974696346910645e+294, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2260424134429013e+92, -1.9110227320571937e+127, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3371716821236876e-151, 433087147491.3676, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.355848682989499e+97, -2.552259888014165e+185, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0759608832472453e-200, -7.959695847272205e-74, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2621810354557065e-300, -4.62518067116635e-177, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1470311011955698e+60, 4.195829265055035e+130, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.396545625784927e-46, 6.248684550251399e+81, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0159581915106285e-19, -8.571336316907197e+203, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -105262576712595820000000000000.0, 1.3501963093432335e+286, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.163687971692313e-212, -6.2798806178978426e-242, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.665473864969098e-240, -1.6712903028921922e+305, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2704064109205273e+209, -2.7490333837690773e-250, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.097111152265034e-248, -2.320998939858544e-112, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4895846404037217e+224, 9.359997359992319e+139, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1736441391445375e+63, -9.734424379221955e+295, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2704970255910385e+231, 4.75725565666464e+178, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.033659116260092e+84, 6.104161003597809e+139, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1722640243117394e+41, -7.045901916450497e+97, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5275423089122627e+286, 9.322781548841733e+95, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.997484985515467e+291, 7.292521139344481e+173, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFE, 0x28, 0x02, 0xA4, 2.449846964464206e-137, 1.0917463491904113e-11, 0.9999999965658231)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.223039144509791e-72, 1.1518797378820315e-195, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.589538428201958e+158, -3.9121329874359926e+265, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.72884813051173e+221, -3.4823691852414417e+236, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.293903779673155e-142, -1.3960620341529598e+80, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8735724065746848e+173, -5.498367949169252e+250, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.830551925287339e-298, 4.982683716796351e+142, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.328698802008022e-50, 1.1849200950315906e-273, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.186774407427819e+201, 1.3901325851447175e-122, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.277358150351732e-12, 1.2185538509309328e+303, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3983698839298162e-48, -6.5975355856546854e+268, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7966007519846555e-113, -4.396660652499141e+265, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.705141678315677e-181, -1.0212251263098657e+71, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.074676790035893e-57, 4.0776686421299875e+110, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.758556389242565e-259, 8.235847505974683e+206, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0174623813161376e-157, -6.21804538084438e+271, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.917667555571443e-163, -3.7232295949616584e+199, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4385003273046516e+264, -2.882779008935762e+40, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5477373059813182e+44, 7.222441116088358e+269, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2357514907838559e-205, 2.793877942064069e+278, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.509583388860137e-250, 8.098474922763585e+152, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.69440947750139e-55, 2.4150511487161957e+111, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8228896827854084e-18, 2.333771565027929e+207, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.556991849312999e+46, -28355163.34067387, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3501397182989735e+103, 1.2177814441720879e-164, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.772257372747012e-201, -6.862563030825246e+221, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1199776074226464e-246, 1.0362667750305168e-234, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.04590852751755e+159, -1.0848433014104342e-243, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9225141216317342e+221, -7.477447724811242e+70, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0506311417004642e-219, 2.479846100282879e-39, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.860175956763721e+104, 2022877101618134500000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4085687851160647e-06, -8.385325337957684e-115, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.640123372666059e+82, 1.5207261509285784e-123, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4651760792868474e+84, 5.491036370631723e+230, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8851376800636226e+302, -2.421286535278193e+47, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.404401844758833e-246, 36358619059146640000000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.817063977294043e-13, -1.2251187190901305e+293, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2512550409148675e+281, -6.1910997530878025e-49, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4542089093577235e-195, 3.9982959735222653e+167, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.935154601555297e+282, -4.7916087765270075e+45, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.617271876529974e+222, 2.9577046933151323e+212, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.270870565970243e+239, -9.679388093427395e+251, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.930590420708947e+57, -2.5884601455414275e+177, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.395643421054433e-15, -1.8799203900368047e+241, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5569857908385235e-108, 6.747759238005498e+180, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.987412771802464e-31, -2.381826432382964e+179, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -13742110603625116000.0, 2.499670632922824e+59, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9029005724811496e-260, -5.6942813350515505e-161, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6209186082361044e-153, -6.727835231008589e+148, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.377903846175831e-115, -3.2407555177125135e+216, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4191942016875335e+57, -1.5886144971506632e-221, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.967575387881652e-61, -2.910409004419995e+250, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1890505448562288e+223, 6.138585056863135e-171, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1936625621199946e+194, -2.8179417767888416e-247, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.238675126655533e+249, -1.726817121090235e-220, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.082100376562309e-156, 2.5247851969349896e+188, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.70557962006718e+178, 9.18485122338521e+41, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.519194174788433e-294, -4.319868411007464e+273, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1285376596598383e-130, 2.3075978318760493e+260, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0493295288883319e-47, 1.031812408026556e-105, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.780428017501673e-258, -1.8408322245915173e-153, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0353702625483276e-102, 1.409593041861177e-139, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0445318857107254e-14, -6.049237123022799e+243, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.977793050099752e+154, -1.4551024865633136e+152, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.965020949363426e+195, 5.914158147365428e+227, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0056630459413246e+221, 6.187529592775114e+105, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.414549235555205e-34, 9.67917191499093e+40, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7605869160505598e+203, 6.486741498925018e+294, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2632967887165195e+61, 2.8039519215998975e+127, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9300459709520573e-307, 2.0842564084940145e-139, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4115582879812961e+76, -1.33636120984264e+233, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.032732836017557e-107, -1.0799054678013293e+212, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1329135930972595e-164, 1.0468782432613528e+161, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.622099574445377e+262, -7.831387096202675e-250, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0678398577477215e-44, 2.5898427214513207e+34, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1785587996296557e-293, -1.2782437003508438e-64, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9944557592922583e-265, 4.911366353050587e+255, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.827004336805115e+123, -3.1453971736979884e-75, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6147293706447698e+48, -2.558369941900253e-120, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x11, 0xA5, 0x71, 0x47, 0x4B, 0xFB, 1.937326568424494e+172, 1.0836528530534316e-05, 1.0043081688825157)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5322059246837106e+85, -1.3452828240813756e+81, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.249625156250008e-180, 7.713032631229204e+275, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.720172518719041e+210, -4.9230304554248514e+234, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.620341918723782e+135, 3.0124143684297306e+181, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7726614615918545e+187, 2.2803806795504882e+69, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.884930857876013e+272, 7.193805231912394e-63, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.7992632169295555e+121, -251585245720143150000000000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.312281294178603e-276, -3.043064169288165e+115, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.022063594497422e+218, -4.045008774362038e-288, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.834960670489418e+150, -6.972357131131834e-270, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.585710055374629e+301, -4.01136751872527e-47, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2997541327436129e+114, 1.2010841829072848e+181, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.449644703637842e+33, -385573232019.49426, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.853527627341868e-167, 1.4415053443892879e+82, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.126220775672614, 5.948886876002402e+41, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8211431969333784e+55, -6.205338741600727e+225, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.310914468574809e-292, -2.7675808192527348e+231, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.926745842750651e+180, -5.6136034677992175e+76, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.325002977184727e+269, -1.0221611210687978e-41, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 60251.69896797238, -7.702641369580451e+294, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.897554611184398e-19, 5.009313985727545e+171, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.958617598873589e-305, 3.8440551490076223e-240, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0394869811975935e+247, -2.57185575935788e+35, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.308171227024716e+110, -3.4293504402860546e-280, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.604143298195026e+197, 3.9821194183269226e+49, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.127285668882689e+140, -1.2716267623861762e+231, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2651641912708079e-197, -7.842733455328899e+119, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5027261273272499e-182, 2.958168955733664e+281, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.650352255967305e+129, -2.46562212731113e-248, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3931869998691937e-247, 1.0272016883485726e+155, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2818066767191653e+129, -1.0343574591295391e-150, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.160457929258592e-129, -1.9597888192991126e+108, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.978010894621633e+292, -5.250648219690814e-263, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7562610323291754e-207, -7.087539430176005e+172, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.189361675047329e-54, 4.1109092812884897e-81, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1715953928923172e-234, 9.407175612853563e+263, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.187219616110712e+39, 2.9395881380658157e+122, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2556108571320278e-09, -5.8396984425925126e-285, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.471069293340862e-122, -2.535021015663348e+108, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.8450187540927e+41, -2.788449421483577e+167, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8524860359380223e-220, -2.8663794683475543e+50, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.129033729752967e+233, 2.435781877349705e+49, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3155478126187618e-213, 1.1629997487225507e-300, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3273807808482473e-277, 2.70717024855895e+306, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.025050483970486e-155, 8.246085652980624e+117, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1403606392483036e+107, 6.9202623429514e+226, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.3944145846349564e-27, 105458162448451250000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3523520780264272e-211, 3.3146286082052777e+177, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.706941646786476e+233, -8.707546456775119e-106, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.609695304865077e-63, 5.47806987710832e+273, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 83464488703760000.0, -4.5331222451995935e+178, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0257293078935985e+253, -1.8258074144997742e+168, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.051930573919735e-279, 3.4673911539987976e+196, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2366440597846727e+155, 1.1165965327522286e-38, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.123175051016237e-295, -4.870708838493983e+297, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 90351185577492480000000000000.0, -6.34774178131371e+96, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.524507539352235e+55, 1.0824096583095528e+81, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9036979665779986e+41, -1.4757447813809951e+301, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.952057488082482e-220, -1.580149593519853e+270, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFC, 0x31, 0x88, 0xF2, 0xDA, 0x19, 4.1971418667341817e-231, 8.761578991309279e-07, 0.9995353388574727)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.6592167010492147e-48, 1.0319248827375225e+269, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.450214872640827e-129, 2.452498129480277e+233, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1209135974005248e+93, -7.430994217246522e-246, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0807941641831707e-20, 6.517681432858566e+212, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9013369089252193e-10, -9.028116632066303e-67, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4524646752852964e+107, -2.857801167641734e-130, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.676145310422734e-69, 4.3508465764213316e+194, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6589926294950532e-109, -6.455622913953184e+283, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0430147978979155e+145, 2.743891630978008e-195, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.970909890565134e+302, 4.6737568547481915e+169, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9946008950264264e-162, 9.180834801850003e+32, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4736701857672287e+215, 7.419108029288445e+119, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9980178510822564e+177, -5.138142134153245e+302, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.627053471189258e-15, 3.231467898141212e+120, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.67210062308669e+60, 4.947862159691987e+52, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.854706330887772e+168, 1.8945837300595882e+117, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.663701929314861e-193, -2.0781543705942295e+112, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.179495138659904e+160, 256520.7114538601, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.766677261280533e-152, -7.571967629510204e+96, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7654372535230604e-08, -1.4159425457565083e-229, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.671406072923993e+219, -1.777008527220647e+244, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6813297601653116e-289, 3830513806130493400000000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.486931071756215e+213, -3.855156577860684e+173, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.165212888528992e-217, -7.6493629349829e+38, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 522103821314575000000000.0, 8.384395476208818e+56, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1272376546394755e+129, 4.684655151733364e+212, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1218876867606354e+220, 2.4035078887200143e-79, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.644394094304482e+243, -1.3342969549366793e-45, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1301838198502383e-202, 2.0432363147768233e+128, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.335327474414544e+203, -3.1607030044934176e+242, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6738341867988188e+131, -1.0262217798132535e-189, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.151702209508158e-69, -7.228319979071733e+145, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0822237432269005e+71, -5.788835856538552e+270, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3527157829003404e+172, 3.972108990316432e-123, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6703568576674263e+202, 1.4990260664930285e+249, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.6928520372168e+129, -1.387855364514532e+173, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.34586392738179e+90, -1.7817712069531413e+149, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6255861236311693e-253, 2.6341902593277693e-279, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5129716548329983e+274, 5.098624701803035e+181, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -585719677050.0123, 5.348224129113539e+131, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.269705383713811e-49, -2.052437480096038e+47, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 813865653102.0425, -1.600845151192786e+51, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1575680444765177e-231, 1.8742191009147252e+282, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.589114102955847e-24, 4.723334372635024e-162, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.028530953971997e-269, 1.5771782592295016e+200, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.654438026649389e+102, 2.1122751060542626e+66, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9795362666410758e-188, -9.631067946743503e-300, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.524535449420905e-289, 1.3385899455678968e-187, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8486446738041866e+191, 7.253275273941776e-165, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1094385439224237e+280, 2.915467735448266e+80, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.770893568996204e-237, 1.614426718470521e-63, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1636816296126675e+62, -6.113060887245489e+117, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7462416906739067e-259, 1.5274689509184986e-152, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.349397519703432e+220, -1.4750841962521591e+252, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8364151001402009e+288, 2.9494975645673314e+154, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xF0, 0xDD, 0xD9, 6.429497125798587e-269, 1.7830583211419724e-13, 0.99999999988989)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.784090768844873e+273, 2.4108946256762007e-173, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1487848401476407e+212, 1.4309556755711945e-80, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.30049714949261e-35, -2.544633630625113e-186, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.613909533162005e-24, 3.926736416811806e+122, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0432600928315695e-156, 5.893694964023112e+213, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.885587190233258e+125, 1.477814424827285e+83, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4464325652618883e-279, 1.6623973531179013e-265, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2412614006417524e-181, -2.0184509577994454e-217, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x7C, 0x59, 0x17, 0x85, 0x78, 3.207825809444028e+58, 8.802287195839166e-07, 1.0001185875083518)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.347303487301957e+261, 1.5824181879550543e-287, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9170119403410426e+118, -8.452984572849903e+182, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1762278692148918e+301, 1.5362279372917512e-269, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.8686099469607785e-87, 1.4267541320710448e+292, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 243587602867218800.0, 1.0002549619477526e-36, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.053086911981507e+174, -2.9334094301193176e-73, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1513169218394e+184, 6.1124732321796534e+181, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.771515682219989e-141, -3.8739944788164347e+92, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.450828799496144e+224, -1.3505804331163148e-132, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2248917387697134e+278, 2.1876730692969606e+219, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -718484189.7333803, -4.9345079525002204e+94, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3503079360714963e+291, 1.7484271456475407e+88, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.573936944629724e+81, -2.639151830912681e+273, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0330298654770654e+171, -1.6040687160967154e+66, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.040655723192776e-48, -1.0403128239176739e-277, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4743536000467051e+37, -2.118594117466837e-235, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3889999345806106e-132, 9.381170566986158e+103, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.4566203399745125e-37, -4.995991464985696e+112, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.210999437399388e+132, -3.7844265203703146e+290, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1101991250214413e+167, 5.9041225562555815e-183, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.263585415954996e-207, 6.432704076882967e-272, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.563369838239547e+294, 1.0257575522975555e+99, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.754641786321691e-74, 2.366846746425411e+138, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5634544771821757e+77, -1.0502314910059157e-122, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6491543187831174e+307, -5.473439752991343e-237, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2476157617371473e-176, 1.2062326036770934e+256, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3871401094666777e-28, -1.4543818354051254e+120, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.626021513697822e+49, 4.0358377855647315e-60, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.46457161148078e+124, 2.467759613980572e-228, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.009982735789562e+50, -1.2994395577658344e+160, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.585564833672788e-286, -5.880325362085171e+59, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.218258358566613e+288, -2.253101429625346e+138, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.998856364075117e+206, 5.1062256654598306e+70, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3970701686364465e+170, -2.7813491988308146e+225, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.752466465967939e-39, 2.622570884654973e-85, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.441457852801859e-78, -7.544258377684376e+91, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.440841337608725e+304, 3.046818745509743e+86, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3951577886050293e-225, 98816881314520.78, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.375875335360949e-58, -2.889663011948701e+157, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3183215262743527e-179, 1.6475716603446292e+130, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.519168442321133e+220, 5.0400612998634195e+54, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.985706063645994e+227, 1.6948145929529884e+277, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.966416028936161e+134, -85.66895636708477, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4624800362581114e+69, -1.3754339950071971e+156, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.954911451574859e+200, -3.8441318484489937e-149, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1236880424066402e+96, 1.2493362712565164e+102, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.775923293950749e+84, 2.5834198008389666e+179, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6853644551980076e+283, 1.4693389525636034e-269, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2518170271650293e-111, -5.022377343646246e-42, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6699709059359922e-38, 1.2200244070985206e+294, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.422209084487418e-133, 1.7900634376189751e-115, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9134334070431228e+166, 2.903043056928674e-199, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.551364594194234e-60, -5.362221357489505e+177, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.635860725036312e+173, 9.582055214270799e+171, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0730902136241717e-214, 3.8323112249768304e+245, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.719350991898148e+209, 2.9584390676142423e+188, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.880572810811647e+192, 3.275333086960769e+168, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.686390197652488e-58, -4.949231601120255e+99, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.640795924867617e+34, -9.289022538365755e+261, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.795910742159617e-106, 4.6384851689118e+34, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7747945982789353e+197, 3.6587386875094764e+86, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.60602705508885e-120, -29596090329032230.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.996321893438602e+131, 3.0781921990656117e+173, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.355694074830748e-183, 5.55226263001142e+296, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1081328637220685e+159, -3.072280129201153e-124, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5362389804271094e-47, -3.238704494216503e-188, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.956313232801139e+50, 9.325754245853656e-216, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.579160352660321e-233, 5.776036377969013e+294, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.30550815831062e-107, 1.3570585076194237e+142, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -69268993003362010.0, 6.740679971535218e+70, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2440962005066663e-164, 1.193474367698319e+298, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.363794215433535e-267, -3.218991630954751e+178, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7035963363053204e-271, -1.724541168606702e-28, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.714908811157961e-09, 1.532190812397887e-112, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.849605609755692e+59, -6309716146243629000000000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.832617044548708e-244, 3.6112154999185097e-68, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.484345097464692e+194, -6.288177651690362e+225, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.851232194860055e-57, 4.776194033647946e+140, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.611456403021268e+41, -3.0104405563014347e-25, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6659316728313117e+239, -231932139916594100000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1653004281308683800.0, -8.751060548154209e+290, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5324697278645185e-28, 3.3504753505733843e+162, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3410535090901567e+202, 2.3166285655247972e+141, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.7515592932501934e-05, -5.05902503272805e-281, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.240497155455322e-163, 9.55040388773541e-127, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2476536420595276e-13, 1.9670003046354417e+147, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6982507876801776e-277, 5.53714334098046e-141, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.654104814069659e+156, -7.888769282383853e+103, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.448975943235186e-282, 1.796705522435847e-271, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0428790738776015e-95, -24454351885880188.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6596194159273651e+50, -1.5490860465144432e+64, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.595878695800873e+112, -4.157551358778786e-286, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4527499727701307e-229, 3.6302017732615248e+199, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3678293950014403e-192, 1.2362443427944076e+129, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.552607790501604e-166, -4.156159623395798e+217, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.118264938172706e-28, 8.966566447589721e+305, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6047488032196166e-98, -3.386326893913667e-161, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.0352526816697015e+143, 6.027908001618957e-138, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9927268471521555e+180, -6.370331859498204e+35, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4418025957756909e+214, -4.9334142364298635e+211, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.704011512262776e+229, 3.2977861279505407e-178, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.655207516630941e-223, -2.544560717817667e+280, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.0002158381261592963, 5.366828263156281e+261, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xCF, 0x6F, 0x9D, 4.866216731146615e-132, 1.1686432936892863e-12, 0.9999999996466503)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.03300723432168e+190, 3.6861213702356204e+146, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4223529073117479e+175, -2.2035798671084678e+77, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3243172706578717e+221, 1.0343904752215598e-278, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.056245262974687e-124, 8.708535932564865e+269, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.300100647525879e-229, -1.980629804225735e+32, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.782976238877222e-136, -7.107910363227331e+168, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.806940123958225e+65, 1.9382355647383407e+40, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.431313438540142e-57, 8.243990876356226e-131, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7746653881246957e+274, -3.2471022524220203e+125, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.780923974244337e-180, -2.2641852310628485e+297, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0834497095890487, -4.233330290169016e+269, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4735783763443842e-37, 1.7703137252482464e-242, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.442604476135346e+178, -5.7732050367191616e+76, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.276337403667536e-205, -3.834256969472793e-255, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5583665584039434e+206, 8.771142091518276e+254, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -42891523439968770000000000000.0, -4.36902706336246e+269, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9282039650433073e-85, -2.879416056307202e-273, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.840204911871535e-272, -1.4282570642367511e-170, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.042159384120057e+246, 2.5402532687536324e+222, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0211739175056638e-274, 3.0940022734619795e+90, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6731291326669397e+270, -9.594444749735645e+249, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0809283712551392e-167, 4.6024717676931835e+239, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.084318799791473e+237, 7.357382951025901e+117, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3014379590019454e+122, -1.5345845875243706e+167, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.24671678473785e+289, 2.4036903847376061e-51, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.1515233430663865e-283, 1.7946621201709837e+137, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.127733864200128e+41, 9.432709297628172e+215, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9227698313185156e+164, -2251425777172748700000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.642203134438907e+123, -1.8108815756870163e+273, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4786363312025763e-64, -2.5840471753220885e-117, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.63626788559261e-75, 3.8283258333138083e+295, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5402176626564507e-102, -2.249327178454382e+283, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0903744066343244e+122, 1.4864413250259182e+231, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.501852668595596e-113, -7.1123173473308795e+214, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0993728070672683e+252, 9.76925650382086e+132, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.590228360838266e+211, 7.373121446380857e+97, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.48287133278302e+262, 7.87880770688647e+102, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0654270733356307e-79, 1.9510129864612392e+167, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8241848001302975e+185, 6.112375025939233e+212, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.847354024342815e-49, 1.3179422922260455e+307, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.932305725490425e+284, -2.5419589817703504e+280, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.915131073936976e-181, -5.7505736276997705e+280, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.983752430249235e+230, -7.600041900181667e-305, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.337503018609245e+236, 1.0699002295771089e+182, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5690728467285344e-94, -5.942671267320773e+232, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.125959034499258e-30, -3.7975167208801004e+77, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.655983061624681e-104, -3.2818738962599514e+284, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.50299131290886e+123, -1.6602247347473198e-156, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.006386740364903e-140, 1.0593422596335873e+210, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.022689190325359e+111, -7.505919296723976e-113, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.988739453554763e+148, 4.50308348922028e+59, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.810300754823916e-43, -5.093938229640829e+214, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -357908.7459639886, -5.502155413784265e+83, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8620126463686687e+173, 1.3211572636192349e+137, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.643952767656634e+182, 4.803304363536847e-44, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.795095845816635e-134, -2.1114195998402758e-91, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.991418826697517e-39, -3.271648408260773e+52, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3801859234145381e+132, -1.4896219819422826e+253, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.554408029145735e+207, 1.3291626801617716e-94, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9319120047878613e-10, -1.4980437164306607e-170, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5983659780910193e-264, 6.663290012242874e+180, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1378819432420166e-225, -4.6330087030357484e+226, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1247791877016448e+225, -7.388164832936209e+215, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.514400867353991e+121, -1.6604707344682043e+45, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.043184665427978e+170, 1.2364299528735061e+162, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.430609405835276e+299, -1.1398343582627382e+69, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.064750121553444e+223, -6.011860134759838e+100, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8015237255749937e+202, -3.5962649154290496e+191, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1668420091096515e-229, -1.5435781562697566e-30, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.0541123881235006e+285, -2.2678624718647982e+204, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5485175921858572e+261, 485710508430657540000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9376181234286405e+83, 1.9580646403746745e+111, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.375192363147539e+256, -1.9715139919744334e-135, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3167221149240214e+156, -3.0874971899224855e+60, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7189842529370556e+196, -6.11809970492953e-178, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0103840798152107e+192, -6.109213356130419e+185, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0650488645586845e-167, -6.04910295094481e+100, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.816327091580983e-209, -1.197838572960347e-173, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.892850526106222e-160, 9.128036373351499e-149, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5767348150092763e+78, -9.41669648846305e-170, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.394409482410153e+134, -9.613412370050738e-168, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8680070425530396e-75, -3.7470520314458e+290, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0388465091329351e+185, 6.01322205582657e+62, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.03842578634235e+93, -7.765851347141043e-31, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5817155710513527e-136, -6.577660303946989e-44, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3079306761960865e-164, -6.386098094845104e+112, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3638013401220465e-293, -2.563597234698489e+228, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.432253327831423e-181, 7.869515891573915e+229, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4196085263379266e-189, -1.3594929435317596e-88, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.5398118430874615e+273, 9.743635424706087e+66, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.37937708757288e+246, 2.717495829466157e+277, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.800347644585538e+115, 7.596184599883868e+145, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3829478697411544e-114, 3.5506022834052485e+56, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3184827667079917e+104, 2.0894385891494068e+89, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7322986004383365e+163, 2.572133202934936e+290, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4824422834522216e+303, 2.6102046248664854e-28, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.169060290820701e+225, 3.628369501340509e+254, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.304134454420315e+185, -2.031196344429965e-216, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1684638296098918e+287, 1.085137003173132e+264, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3163514015536017e-66, -6.1106668139879324e-298, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.666397043483585e-70, 3.413541946488765e-284, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9924965036077385e-193, -5.504825761586837e+91, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8708133097155524e-115, 4.773255044151803e+154, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.555128901566799e-35, 3.512801932513092e-236, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2234677251908896e-192, 9.3590330536909e+76, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.3774909641665266e-270, -5.1110353650404036e-129, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.462051971148379e+262, -4.339272796014308e+186, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 14690.591937206409, 9.093337185419422e+124, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.00022244446684e+190, 2.7739335367493376e+77, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.365736892791008e+221, 9.683157174459727e-226, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5293086461366919e-180, 2.840244805928395e-150, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.847156159358115, 1.6695652543634153e+299, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8431416485051664e+245, -30165948043118296.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9338958529610712e+98, 1.1477181347322087e-62, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.164947366934483e-94, 9.282238798297298e+154, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -24977.31728613656, -886972791856084600000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.048249978873097e-99, 3.545034503695352e+140, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1737376526852042e-253, 1.1116394936808536e+207, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1580389626407877e+88, -5.109068412721279e+239, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.418267520196783e+301, 1.774887170586228e+256, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0302466264770548e+179, 4.289462205441975e-31, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.531960228016852e-125, -8.27279419745485e+286, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2117648217700694e-229, -2.6704261982404496e+53, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6403287405121702e-284, -7.198648594380162e+158, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.986139952584645e+184, -2.588926823174389e-114, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8769307276947946e+222, 2.8252961112104943e+238, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0158608991817354e-36, -1.1364146955601644e-73, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.279423861010034e-279, 2.691124647783219e+204, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5224753999914434e+249, -8.793691328331443e-228, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1638405239058092e-59, -3.9467500520643044e+228, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.968162046140249e-229, -9.361843619835657e+104, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.692394447948954e-209, 1798167.6942476614, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.062182351657135e-215, -5.689931403585208e+150, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9683253888695185e+304, -5410131296460363000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.755199932057714e+254, 6.123349876177775e+193, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7073575377403408e-202, -1.1193242827475721e+257, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.130699015412553e-137, -3.0216936704865673e+231, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.473698363316444e-106, 1.3040729993302837e+210, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7608911503275493e-228, -1.2029713519663286e+191, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6805189856457354e+242, -1.7455268259830055e+202, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8622857488593107e+209, 8.356189929658164e+217, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7345039380903076e+101, 1.1433850421929511e-291, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 420602579430779300000.0, -5.299272458998092e-150, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 380752472610025.7, 9.25088266211433e+132, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0849429190366083e-19, 2.72891284763805e+299, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.02158681389174e+105, -2.0059032329527843e-275, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.532823288399268e-84, -2.8338962709387934e-154, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.732932076331581e-205, -3.201408231079061e-208, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4120882838220031e+299, 1.381498140762427e+259, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.60151845844931e+61, 2.1188322838933956e+51, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x01, 0x6D, 0xE4, 2.6920955982674584e-143, -6.335570388278531e-14, 1.0000000000207985)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.994363370546784e+148, 1.9541858592907124e-257, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.305057179398738e+218, -2.63177620830144e+286, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3997921421652057e+149, 1.1434678527686474e+279, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.185899505585316e+221, 3.080711648405619e+42, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1474303788176447e-302, 2.590244335270855e+248, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0578541182691048e+68, -7.450469511439995e+243, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1723768623818555e-55, -4.089862517173555e+147, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.31330105730013e+293, 1.1168901662443563e-36, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1711293566093355e+58, -1.4614758382563881e+79, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.02937005080552e-146, -11514493744682660000000000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0975586272944712e-227, 2.148752695382272e-101, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3181444726806087300000000000.0, -3.406931581425268e+67, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3566899547455284e+163, -2.560105731656585e+108, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.918497329587002e-87, 1.1264909657663623e-154, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6165428924214107e-73, -5.098614666404615e+114, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.550060329410545e+108, 2.2503653211518924e+36, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.665588338494348e-96, 2.258924771675577e-225, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.298865487980781e-191, 5.5370043190014424e+200, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.721264270077945e+195, -5.096944816791139e+107, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.983170107222225e+135, -6.3003366166747154e+119, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.297758593997141e+249, -1.785247461758723e+174, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6158825601535775e-36, 2385911962669.2905, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.324736131362015e-161, -7.104937053524633e+182, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0x17, 0x52, 0x94, 1.2076235126598931e-162, 4.540811025384268e-12, 0.9999999983070489)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4339543630785221e-185, -8.837540654948156e+91, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1638180366258151e+207, -1.8453246654196936e-81, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.282703533560388e+151, 6.502249525340761e-249, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9895797010480225e-60, 8.297089725503116e-156, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.668603367987677e+305, 2.5689591109106e+284, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.126895285259034e-32, -1.4231710306475799e-24, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.646502624372031e-179, 4.745490274809463e-286, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.083462612700416e-22, 3.8322134975178395e+285, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6567352252293422e-53, 3970183284028840000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.012417082889725e-161, -3.137382409897843e+217, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA0, 6.606624546351643e+248, -1.8577871554484473e-17, 0.9999999999999893)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.254093676460567e-263, 2.2599705263426903e+61, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6235756780258161e-62, -1.8321840052723304e-127, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.565340648375241e+262, 7.266452800420069e-128, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.618359145061549e+192, -2.923534214564194e+61, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.004159967100286e-231, -1.80787875106638e+200, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.136776908405213e+210, 2.2845978700941697e+258, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.682987047967147e-81, -6.6630713791070175e+81, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7494711443751482e+37, -3.182491039310693e-196, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.75437367372711e+158, -1.1532756143396693e+61, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1397448227408383e+284, -5.868956267838856e-242, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2614745738810046e-225, 9.689515796725894e+264, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.915830913659345e-131, -2.1898162251940817e-229, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7496311560776745e-110, 1.8271714425322613e-236, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.798508533414426e-256, -9.367489252603298e+47, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.842794777922298e+247, 1.5146235614724153e+90, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.644760046813256e-30, 8.874182284391387e+120, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2627407341822293e+265, -7.068029687966132e+88, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.675447936650312e+62, -1.387301475871473e+248, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 14559792994114492000000000000.0, 35895271852690106000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2876144218315424e-95, 5.486882692872616e+147, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.753364933023469e+250, -4.682479781313734e-273, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.473947403274548e+225, -2.6670340850061468e+126, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6237467458440554e-304, 3.373831920091591e+42, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0221146964023842e-18, 6.9468103269545775e+180, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3001356207033249e-163, -4.70685483211103e+86, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6571431471411835e+183, 1.3387889122606914e-259, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0879919512684526e+161, 7.476818032477346e-200, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2402147022373307e-252, 3.2292871135183703e-214, 1.0)
	assertULP(Math.pow, 0x40, 0x0B, 0x07, 0x86, 0x71, 0xE8, 0x87, 0x6B, 7.146080820066319e-99, -0.005387348515511906, 3.3786744021498882)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.046211446264034e+44, 1.5508923140097477e+248, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.355855136909297e-209, 3.0346130803819197e+97, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.114468935604234e+224, 1.1317017678599723e-36, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.994391260896864e-125, -9.304084316774926e+213, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4420480063515076e+280, -14.723035520959197, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.405941262532722e+82, 1.7761690854798909e+279, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6479068235674065e-258, 3.67249131026032e-296, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.37549444832969e-235, 1.3096540943370108e+88, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.039007193799489e-93, -2.1923688882026362e+304, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7526611494367841e-68, 2.766007103848257e+187, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1437924184650365e+44, 9.57105556525435e+81, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4258571183487893e+81, 42082505196086005000000000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0904093387272065e+119, 2.3888369682804906e-159, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6218228796549844e+305, 8.670491886770812e+304, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.597947459805627e-24, 1.586738420116333e-236, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.99760872325668e+56, 3.966088898087422e+303, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.526803993907109e+267, 2.412660035773734e-146, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.136575248048056e-264, 128824429.00331372, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0492715136874464e-74, -2.695716937886152e-87, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.602365219649701e-161, 6.0960245197360236e+53, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8216742364515885e+124, 8.263426483711792e+157, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.071290256503626e+287, 8685765024118.445, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2963990743420112e+117, 3.937828271031439e-50, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.889594577411279e-280, -1.0313398508963315e+37, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.373436973652383e+202, 2.326177856723699e+228, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8877413881642674e-228, -3.2521109246406218e+267, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.158066751489846e-103, 2.1926266786473182e-45, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8209323284789843e-13, -7.820014959046249e-211, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.530918908789554e+271, -2.145407480104397e+248, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.417814587544908e+91, 2.3490390352367363e-63, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8306914911191333e+82, -1.3215940922062193e+44, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.732533629617187e-175, 2.2132049080731437e+191, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2464507919351572e+146, -2.5447427216362218e-58, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8380499502785425e-117, 1.958484120963531e+206, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5554183783682402e-280, 5.623091603831022e+162, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.143547894000972e-299, 2.598336187507179e+225, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4635766505127475e+189, -3.0872175340812413e-152, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.723880379860305e-219, -1.0824861871638288e+62, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.8950642668450246e+256, 5.43399741443692e+287, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.493073216380791e+48, -1.7600703236218723e-221, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.0893263573059804e+244, -420644096535406800000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3051050965509467e-246, 3.227479179514144e+97, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.51215031135298e+147, 1.1149875682829029e-231, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.342776285807322e+242, 9.015114807625034e+171, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1451170238507030.5, 1.2487160485458536e-303, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.0006181951910661203, -4.881296356318235e+73, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0681343280010424e-223, -5.806724901740328e-235, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.221816197457516e-254, -5.124843399311776e-36, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.893639083094335e-134, -3.0260233398246316e+111, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9892711396241596e+160, 3.636243563795832e-192, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1899099936848216e+140, 3.4318129986212086e-287, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2122630911891676e-26, -2.5695479661798803e+91, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.31867189430875e+58, 439435780961.40204, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9342663506426236e-308, -6.49366259337816e+189, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.904337616369417e-117, 4.7121951878058597e+114, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.809660349004533e-148, -2.4983467489600815e+150, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.143385035713173e-160, 1.0154571792402764e+73, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7460670576302075e-164, -7.74745963893576e+37, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5564153916078765e+162, -1.3512382190552513e+138, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.018917170284088e-112, -8.595978199139337e+94, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2107133205965338400.0, -1.7757735017569845e+295, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4101475766534317e+191, -9.581228222415381e-251, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1876895762459814e+96, 2.5097187344481218e-30, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0325420255714508e+127, 6.738675925292276e+166, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8673091512776415e+65, 8.6908783867668e+38, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.614288585984026e-65, -1.7854519627960232e+111, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4371741343273573e+212, 704032539900652700.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0093244283423595e+111, -1.3486314117963195e+185, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3230461101054588e-129, -1.237055516103785e-199, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7354809668564266e-51, 6.439209546843589e-147, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.579601668314696e-299, -5.919060549447479e+275, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2571440464305393e-185, -2.3420515126224294e-82, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5826674427775482e-250, 2195699339396502000000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1670350726124105e+167, -1.1086002702503334e+163, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.073978394626267e-178, -1108840379689186300000000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1642528186248854e+145, -1.8099683042895317e+295, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4091845715956518e+215, -2.2253448050353345e+246, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2336034007532969e+235, 1.0726340690613098e-236, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7011149558087613e+241, -1.089455961639854e+213, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.605729728850524e-152, -2.144077282718649e-154, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6834590365023872e+271, -4.0083073598639876e-138, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0814902101032351e+100, -8.111580221415458e-271, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.0773732889544865e+258, 1.8495726853598065e-178, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4095691841406813e+103, -3.989675494334647e-288, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.31219641816862e-153, 9.158664506774944e-105, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.835450903314223e-149, 1.3659297953129777e+256, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.573292784323424e+213, 6.489200907669369e-96, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.014535640858445e-168, 2.9808719760517955e-77, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 86.843904292174, 7.871329787231698e-113, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.197044146405086e+143, -7.773057055392784e-203, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2029631959056897e-30, 9.690003244127935e-304, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0429128100992838e-11, 1.532638823357415e+228, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.910349985186409e+130, 4.210823520085716e+213, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.822911614745999e+148, -3.592141779079514e-259, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.735429149576696e-138, 2.1838067726062787e+88, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1978821749492418000000.0, 42.387733404578704, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.570022110346856e+209, 3.1504297956706134e+149, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.501352586792761e+179, 3.406067102266247e+178, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.728140314286734e-162, -1.061705736934614e+166, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.061467923738318e+185, 3.841964184983432e-164, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0783934198642076e-104, -1.969701603072725e-47, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.119218093394441e+207, -1.765813163881793e-83, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.853721255736754e+239, 6.223987959325938e+140, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5455665147031465e-273, 1.1964291289206719e-172, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6930172649774508e+258, 8.988605794035102e-125, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.001903800178253e+143, 1.3393216995329619e+231, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3331680867022363e+145, -8.56248492366844e+289, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.718473593569239e-30, -2.1418495909013752e-32, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.713214068946278e+98, -3.5532307145274996e-65, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.042909862813046e-227, -7.775148415521098e-78, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.571914820012794e-06, 8.921535788695096e+185, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6073421378659745e+51, -1.996643819585568e+112, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8722096836835668e-35, -3.8392916340664935e+143, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2508478823317104e-173, -3.903128404949928e+203, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2584121117590781e+33, -6.393717548982676e-114, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.802369507739757e-94, 3.057494577899745e+62, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.328157462612195e+299, -5.3318435377566105e+219, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.832585312955906e+275, 1.188533503380647e-144, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.199503602122199e-256, 6.01721685727041e-40, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0302566288180148e+152, -1.0504554085644757e-64, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.426808789598946e-207, 3.099968904749234e+227, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.734552564189784e+111, 1.974444702210289e+297, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4457116472833033e-27, 5.876239463105894e+187, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.961636425640734e-201, 6.029269240444972e+74, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5081808304357098e-113, -2.024474528081959e-291, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.74262753926202e+253, 1.194245545568189e+190, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.750123183868653e+295, 3.5452186236024095e+299, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4283482887317e+36, -2.6044049219795038e-207, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.808992990045803e+63, 1.0253727407044293e+39, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3621200704324188000000000000.0, -3.0264858130518554e+44, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.193086179000415e+301, -3.403076200384917e+98, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.737622964484893e+300, 1.2158307019713504e-123, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.2076717663475e+77, -2.5850840113893207e+35, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2404897540844636e-171, -1.439536179453239e+86, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.708887305696691e-93, 1.5257438220951583e+48, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.890037397790153e-179, 128953065078028440000000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.039381651280504e-39, -1.2699850429098742e+61, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.253250353146814e+206, -5.1111419291719955e+128, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.20732274787487e+271, 1.7959649796474546e+250, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -133299231179242140000000.0, -2.811738725739553e+291, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5041113985270267e-123, 2.36782396121007e+283, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.102268714028916e-47, -5.916317969035667e+214, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6350719886338825e-156, -3976404902402356000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.39995338450262e-25, 9.425875054049392e+294, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4399503881191817e-183, 1.0335995521079729e+291, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4548045474001746e-88, 7.153414581089785e+91, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9648808221566346e+47, -2.8863233432937023e+150, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7133454159187932e+191, -5.187740872897557e+248, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1848749501816864e-146, 5.311598129722609e-194, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0699299001508968e-66, -4.625130376181768e-236, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.909159798385872e-206, -4.864188981548716e-205, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8535629626525046e-148, -3.6817237684988373e+118, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0524142552613408e+305, 2.9389087927029836e+265, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF4, 1.0050336073897266e-257, 5.0343123287873104e-17, 0.9999999999999702)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.803263553987324e-46, 7.346774541622317e+278, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0466437402615322e-158, 4.945133228110135e+221, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4086200.2199463877, 5.963403299401853e-106, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.252256370461326e-253, 2.081731020669888e+256, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7730621464818247e+165, -5.5662261921495716e-294, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9235812342073186e-103, -1.1592239696047713e-128, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.094666707689939e-288, -9.593674238837452e-73, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.960181739282419e+76, 3.022044999213783e-78, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 103623061154901820000000.0, -1254683339519315800000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5103574900291337e+130, -3.3941794117091805e-281, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.776572461068778e+244, -5.889257496154721e-80, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.525033760954326e-134, -8.673064314653308e+82, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.284994905154871e+178, -8.096251017121434e-204, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0124579091355523e+223, 8.145243595379242e+111, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1620101118615623e+279, 4.366321648729872e-231, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.125112009146984e+302, 1.709118902675432e-304, 1.0)
	assertULP(Math.pow, 0x3E, 0x9C, 0xEF, 0x1E, 0xC4, 0xD8, 0x17, 0x64, 1.2149269489329725e+60, -0.10594021996149082, 4.311511404290042e-07)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.110804480322492e-298, -2.166203319767841e+163, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7599779140185766e+55, 4.185147763109249e+98, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0427077774606358e-55, -3.234234738213141e+200, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.099437718425329e-222, -2.332251257364742e+122, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.34989956012681e+92, 3.595079723156984e+269, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6359063954351857e-153, 1.5567869648479475e+184, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.552556367533823e-111, -2.1323903319530598e-33, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8570635321126066e+84, -1.991283249133911e+291, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.469193003051047e-192, 9.543682727775413e+305, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.158331769796125e-168, -1.9949255629740087e-114, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.154593359210318e-237, -2.2748235152945022e+169, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 88379087.90835953, 6.567505708781091e-200, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.028486164037537e+286, 1.2758825538603853e+304, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0110601838454177e+214, -123422519428638590000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.497787960269503e-293, 4.541459005615664e+142, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.934472529780095, 4.3105741570799655e-250, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.627943604555862e-253, -4.833279980026258e+166, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.081923562905289e+114, -6.601912464316723e+161, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8720223897079432e+161, 8.50890910191089e+186, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.766180019837945e-215, 3.7736794272171513e-59, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.683842993551532e-91, 5.535262171732252e-258, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 48765000205606440000000000000.0, -1.1743518644810902e+182, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xF8, 0xB5, 0x7E, 3.7498009261436727e+199, -1.1544101220285737e-13, 0.9999999999469507)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.916288853752647e-22, -6.400270214240903e+226, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.455061654531116e+100, -4.032084216548905e+224, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.627273191348875e+170, -5.477584610705697e+242, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.260408374427479e+76, -1.2857781016337706e+133, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 4.472798663569814e+60, 3.0631010526968455e-16, 1.0000000000000429)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.006717195628232759, 5.971105105109893e-222, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9142925873232655e+161, 1.8921191742956227e-222, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.106552215168689e-17, 5.502741047170277e+152, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.942660972762458e-33, 9.569214254657257e-259, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.254281875596225e+267, -1.5106546734861569e+270, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.31710865289499e-291, 1.1108956721603832e-205, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 35.83653697718325, -4.8698521658737254e-259, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.7483317892396436e-27, -6.141923209217475e+71, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.407977276140035e+157, -4.864099736536839e+112, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.704098385686406e+101, -1.054679273720269e-59, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0016830824801867e-74, 3.819685377957604e+97, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0578857892637548e+259, -6.481340412537712e-278, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1110433071322406e-201, 6488.254352246462, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5625723744303163e+267, 1.0843317834505403e+175, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.827185616541576e-225, 3.983816917050971e+117, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2096946881851744e+284, 780986967322904800000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1108377854656615e-110, 2.4053807536571063e+231, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1044482396741062e-87, -4.5007915418815475e+297, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.499715358159429e+233, 3.76593730535671e-198, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.06563138330188e+71, 7.298121844855116e-170, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4729476428663894e-205, 5.086162093292481e+132, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1854208219340761e-24, 1.4059468881665756e+36, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8466194585831298e+65, 9.760526910239276e+294, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2943266714044285e+64, 6.322564650292129e-69, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.402340983357216e+172, -1.7559360247617886e+193, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3225047973154784e-46, -2.232358069141183e-225, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3159564937108192e+288, 1.0730892069390143e+72, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1931495118393052e-294, 4.254662941213563e-43, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.9607371073502645e-84, 3.889899757586213e+267, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.8479001908564165e+274, -1.4793792892893578e-151, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.803370515221597e-304, -3.110943981398965e+48, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.935065041204679e+265, -1.3168704540613438e-28, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4156351.2202006658, 3.794813600494731e+158, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5373574235366667e-209, -8.504296382645548e+103, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.375281155562442e+32, 1.583959165885175e+183, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1783250602855666e-153, 2.8531739241089017e+103, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.075813532178875e-13, 1.1186204437467654e+104, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.922546319410598e-266, 6.440976140613068e+262, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.898743159576045e-197, 6.072327916772697e-28, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.289561873347243e+209, 4.8221833946897273e+48, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.531549157140327e+300, 3.4286348513360045e+280, Infinity)
	assertULP(Math.pow, 0x6C, 0x75, 0x8A, 0x4C, 0x0B, 0xF9, 0x9C, 0x3E, 5.33962425955558e+112, 1.9024857889240805, 2.9005951925139807e+214)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.884933409674205e-255, 8.616973611572173e+91, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8372183218533.703, 1.2447407690651711e+306, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6461500420019303e-203, 1.2889351114035421e+98, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.953696988446264e+287, -2.5066347584155375e-173, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.875583678144558e-175, -1.4675601661460454e+59, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.950498424472912e+122, -7.456945445709593e+106, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.090938391017818e+177, -16020139788249645000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.93018268916754e-174, -3.9107836397223873e+105, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1871091932759715e+185, -6.47189380999112e+76, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.013338002990128e-94, 1.012749814990438e+149, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9840714906937105e+302, 8.01229907326599e-108, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.059888710870302e+115, 1.2281370212381662e+256, Infinity)
	assertULP(Math.pow, 0x36, 0x5B, 0x3F, 0xA8, 0xC0, 0x9D, 0x23, 0x66, 2.8771145594859894e-218, 0.21203996001338304, 7.457718284053198e-47)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.290400289133853e+177, 2.7368268622138824e+203, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0540186189767169e+294, -4.013638501655998e-172, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.749059808960154e-245, 6.077876428520923e+230, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.768497007883407e-46, -2.760900562214034e-249, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.410429556405089e+236, -1.1170437098091884e+58, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1454733949261657400000.0, 3.5575075054434454e+202, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8180515927004503e-90, 1.16793015731886e-272, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.437674138699205e+157, 3.451804167067006e-57, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.981831377381512e+213, 3.4553609616351774e+51, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.607447846525061e-203, 2.6814912317506843e+245, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.109861298025531e+119, 4.751205022311926e+157, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.311492798810768e+278, -2.904127172936979e+297, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1337107676697703e-283, -2087710626053.4106, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0006829907337942e+273, 6.890213757060691e+231, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2507732111976774e-248, -1.0294610129685766e-266, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9629021181575431e+102, 7.891085162733663e-189, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5678995474926217e+288, -8.586697475270996e+232, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.691494202873611e-69, -8.735244199947774e+141, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.11185191632688e+36, 7.2840459918774395e+53, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x7A, 0xF7, 0x89, 0x5D, 9.081901136978189e+225, 8.804498755939535e-10, 1.0000004580875477)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.0476575881736247e+208, 1.4530963292332802e+262, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2606590973209433e-163, 8.663398577294344e+50, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.21718258913987e+280, 2.0809748827682395e-92, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.297087696195866e+289, 5393787123016844000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5283338224379918e-253, 1.1738609414728144e+183, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.122375198011108e-226, 4.3591002864770396e+241, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.19861773108353e-67, -134205100243355520.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4240896665542062e-251, -3.278205463499323e+162, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -0.00036261317719852275, -5.479013838456814e+160, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1966387853088303e+305, 3.505800809746494e+260, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0776211178446385e-32, -2.7912423069660805e-305, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.462531463515625e+162, -2.9165293398244245e-117, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x21, 0xA3, 0x7C, 0xA5, 30337491515984656000000000000000.0, 1.7287036579175348e-09, 1.0000001253136273)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.103278319158461e+138, -1.017874463139458e-75, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.708740561742806e-183, 3.2481890465322406e+132, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0067520219621795e-66, 1.7938283993061673e+307, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 28111901.121493585, 1.2210105839085118e-275, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2688491718992127e+296, 9.292163586521469e+58, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3451197352252108e-57, -6.989256988357489e+138, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.833783589951555e+218, 1.4451879789141278e+151, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.342262864666013e+156, 1.5399658470861701e+178, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9396787657285905e-210, -2.1301577702645537e+286, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6293178684841391e-285, -1.5194188973746444e-305, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3409707127985477e+95, -2.9459773360644795e-241, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.81056150769685e-254, -1.369823200136156e+272, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.153012078948879e+105, 2.916168865896486e-240, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.191911932213154e-139, -6.696363251877486e+85, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8825285433132487e-11, -1.6642720764514825e+212, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.284081282257934e+193, 2.745688725705639e+304, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1970254030751375e-16, 2.110294376626247e-89, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.6368581933339205e-223, -11283538745499162.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.782587754599691e-189, -5.0929012414485644e-217, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.629432957668979e-253, 1.0284791218788158e-31, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1288877724607645e+227, -8.87056387963949e-217, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.477158677542458e+185, 9.835595353780786e+98, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4647097514389038e-181, 1.6285209689887393e-167, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1864265375766122e-205, 1.4712090339997721e+122, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2803899309204685e+66, -1.0905687894351772e+249, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.501203094174841e+269, 9.559529525983498e-55, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7023854092025088e-214, 2441751687731274500000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.4850309919044153e-14, -4.102600719592869e-192, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3440033713020073e+59, 1.4005577698591982e+209, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5329044568713358e-210, 1.197683231459819e-261, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.226228444768729e+50, 3.722463067377796e-195, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0338348513855455e+138, -3.632817856056057e-124, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3761736193678314e+159, -8.533879815137612e+307, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.741935037997113e-65, -6.296713046346884e+277, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8780667317638974e-150, -3.371458449204953e+142, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.815808917023772e+77, 1.2795688906680483e+45, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.789239714889498e+243, -2.39189933778627e-84, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7537584121185104e-207, 9.03481287157557e+300, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.096442170196829e-275, -6.8453862974491695e+152, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.726763077951893e-35, -5.0746307521123364e-253, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.483922460555319e-196, 1.4121226098383717e-218, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5232237828596218e-239, 1.6846443682417226e-80, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.53782614074751e-230, 4.600767626129561e+178, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6103366473217787e-74, -1.3521452139527464e+71, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4875528466045195e+97, 4.01218287049218e+124, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.263449225954732e+231, 3.440636202136604e-197, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1532703518508546e-129, 2.3601328028106002e-304, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.131522573102496e-225, 1.415250643881807e+265, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.858141581222876e+219, -1.5919259362068817e+236, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.957185995314811e-47, -2.321308006802121e+281, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2884066232233855e-248, -4.647791440859259e-104, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.080772299390307e+143, -1.265518911182205e-152, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.997903420650342e+207, 280.1551853260007, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1442850184392615e+168, -4.539162353438646e+234, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3859090627817737e+288, -2.629598791877835e+117, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.209208235455195e+250, 475941005946490500000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.70050344151708e+176, -7.697024152488568e+90, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -465213136824411.5, -5.28578498712419e+199, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8421395777051616e-230, -6.256463524031256e-165, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.460743908543483e-124, -9252709761368.664, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.160541022409164e+82, -1.5302183228568546e+258, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.901635052581684e+172, 1.1780982330994117e-19, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.242550191555122e-09, 1.8947666564187232e-84, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.460792788613679e+247, 2.941470145813021e+143, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.588015327627087e-127, -2.364796012657117e-34, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2255195219128659e-120, 4.3766462626508333e+55, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3896148997754389e+48, 5.714273867176944e-170, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.260664378937972e+165, -8.777133200269414e+257, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.455773569412763e-96, 5.125464690675894e+75, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6970221229193557e-19, 2.3554041787165467e-152, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6853940178915e+288, 8.341168101464025e+207, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9617326168236525e-71, 120049986954.96754, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.016118453224666436, 1.4073989232305935e+71, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.034600543747721e+260, -5.287518781772e+100, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.211607233477048e-226, 2.3459025230262764e+251, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.815418780195168e-245, 1.8901460242079735e+303, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9990141561480776e+196, -7.167551750918494e-84, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7132022387323035e-80, 6.895734723142906e-267, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.59246153102339e+45, 1.9691218947784929e+211, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.036623696993651e-93, 3.2800938096788587e+164, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.196314005532893e+306, 5.511693373211001e+64, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.808329564223078e+114, 5.16113857400938e+280, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4802803109933157e+234, 4.038812091062191e+121, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0660696739756561e-134, 1.7446233892629566e-290, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.305527229788773e-178, 9.602651611565266e+161, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.791430379642691e-198, 2.406302945051264e+46, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.976104535530928e+253, 6.2661300460205e+295, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.332213325377695e+202, -2.8873513978486817e+179, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.391461955236795e+138, -7.0617513645044895e+44, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.036330542739246e+120, -2.3393486821711978e-225, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0024887046778264e+90, -2.8776574034695046e+223, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.970487012622709e+255, 2.0789749841427344e+177, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.9095137423525035e-196, -1.8517140106462802e-215, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4230243438443287e-282, 6.092911484146954e+304, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4031774304266529, 1.456244533471136e-288, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4810956545790229e+181, 1.1503550682835293e+33, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3831013290.83028, -5.166428928611585e-40, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0139605160105237e-139, 1.171972226742323e+152, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5759371513459902e-217, -3.805461355665157e+188, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2943572095483355e-186, -1.1650260047867092e-52, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3868822867465304e+227, -3.498468124081787e-30, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.678520881195948e-134, 3.2686259912742755e+145, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2239523525364794e-59, -2.95718832963046e-305, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8845372383403711e-81, -9.839252560429222e-161, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.306339116577981e-29, -1.0838388207212225e+101, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4234917156398.798, 7.802576378467036e+42, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9002466726015883e+153, 31936299506922710.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.72657882880436e-100, -7.862821226011636e-299, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5072012494004574e+177, -5.152068840767471e-73, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4019740387276374e-57, 589106132923991400.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.540012081299276e+178, 2.9756888313431606e+264, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0034345120388047e-268, -1.5914885853423922e+45, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2573954992235756e+186, 1.1093116566925592e+269, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5543215598829356e-58, -3.0653279088827074e-230, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6611892528135283e+104, 1.7106980194085643e+186, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.970572946053213e-65, -5.865543304543193e+297, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.280728090999271e-267, -1.3282973072993237e+159, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3211533352128543e-43, -3.2947281539313187e+35, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1516760213911143e+198, 2.894497873656329e-295, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6525093299448926e+247, -1.6427164037679276e+50, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.399199555627849e+238, -4.1860899857591405e+35, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 13987686089082303000000.0, 8.997340128830404e-269, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.662348803487966e+40, -2.624580040212021e+173, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7708833872980.655, 4.597411604282852e+142, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.904421218062304e-217, 35514.880031043824, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0672417613817638e+72, 7.132438185663752e-26, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1013979604674067e-223, -1.4607823527398056e+155, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.05908673804074e-104, 9.53009078819421e+65, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2435570084414516e+159, 78330004543778650000000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.224489801277107e-213, 9.710107009254599e-104, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4322778809234083e-289, -2.6493030317367736e+35, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.181624615815249e-43, 3.8119276710933585e+225, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1526272857363576e+304, -6.932385969302706e+192, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1455188854126573e+268, -2.737275741641449e+109, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.796215328830913e-172, -6.879604971140792e-63, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.540031040541958e+300, 5.351680750705326e+211, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8276131871919845e-18, 5.1714573629079125e+205, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7242689659540285e+50, -1.9550909918230157e+173, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.566236108340076e+144, 2.561880709180406e+33, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6243553017531275e-146, 1.408066351616456e+295, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xC5, 0xFF, 0x29, 9.978725830829445e-60, 3.106477291386648e-12, 0.9999999995779706)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2385640274809975e+176, 1.853754544879757e+128, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.123902188306654e+51, 1.255031675198537e+163, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.491095266759705e-137, 1.4451829399561978e+259, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3826352790973184e+48, 2.9846940695443923e+116, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.229532288435138e-257, 2.6903380234506447e+213, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3501665626575022e+254, 1.0065196527461895e+69, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.110674924034448e+182, 1.3452278352000507e+132, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0370606940390401e-101, -2.3525906735962255e-35, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.093714885244082e+181, -8.394744533474858e+279, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8467330403022212e-44, 2.959182063012557e+84, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1152079717215833e-120, -2.3677013150300933e-141, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.415615954577186e-167, 1.6979565281625132e+243, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1853062632797576e-272, 3.212334033097778e-33, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9888793064701254e+58, -9.130140434168293e-118, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9167491009933753e-140, -1.9281241130550014e-172, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8997432947769945e+281, -3.713820267445052e+60, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0094849539621086e+226, 5.7095951368971394e+212, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5775802673218138e-111, 2.647178385981093e+244, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.30895855509666e+189, -1.585029920692252e-50, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.146809335845325e+301, 7.682076317214879e-91, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.300478905764488e+175, 54774805179203186000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.754328162488775e+251, -5.458759774144334e+198, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3093711429488503e-268, 3.1363786529087368e+175, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAF, 0x4C, 1.9137477324906877e+121, -8.21345386229305e-15, 0.9999999999977063)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1044718941973722e+139, -1.5216243527377925e-307, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1890731739925046e-229, 7.332959311443224e+96, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.800683255941261e-300, -3.9330374185705215e+139, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -34358510570594114000000.0, -1.237895743043558e+77, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.280205520231065e-307, -1.0676792661727751e+158, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.003634770697226e+37, -1.4473160505045751e+268, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0997687480872544e-174, -1.619882051850682e+223, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8525710273905344e+195, -1.856263061343657e+273, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.747846720815021e-260, -2.778939703743853e+223, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2891753451469522e-93, -3.716077520778604e+100, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1724445652872635e-197, -1.4861090637246656e-179, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3066210654593393e+109, -2363534075634558000000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9435442293296013e-123, 4.991713088169775e+185, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -10916103696661347000000000000000.0, 3.867398310116845e+189, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5919152577404234e+200, 4.289456769668818e+283, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.0541377216553885e+286, -1.548187236972359e+286, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3462781145034754e-192, -2.27046283875228e+133, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6545352824599938e-302, -1.2960523874671324e-294, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.278580060873046e-266, -3.7137604461329885e-198, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.844470879158089e+245, 4.6437382109120545e-253, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9130261217793486e+246, 17601178416533046000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0476763192002156e+211, 5.295847613185551e+173, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.811503672466459e+167, 2.255400081618268e+60, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.244060178189528e-235, 8753047385696.288, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.636826544298937e-239, 2.2218393500789313e+301, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.537737653731278e-191, -4.6590665586804616e-120, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5684829134905714e+219, -7.533195279540773e-296, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5528545507675977e-145, -3.123284606001184e+207, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6883611795379285e+250, -7.103413467219762e-92, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.505557694573759e+152, -2.175706799640044e-267, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.043326294871827e+291, 1.9236316625420633e+49, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0589940544853582e+144, -1.3507247023682025e+56, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.202470659769093e+69, 2.0908932105338662e+112, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1105069135731102e-42, -4.892117991821621e+258, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.494403752203515e+137, -1.8142018333369222e-42, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.696452679269564e-219, 1.750528603774005e+142, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.941601729712511e+216, -2.5532453794409916e-129, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6941961499066385e+83, 1.118818078470391e+65, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.315955800977271e+273, 1.3049171162109533e+271, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2800215720301143e+40, -1.4148902400460453e-300, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7123325606601424e+40, 7.097512702389394e+126, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.360348861762662e+66, -1.479377943581278e+179, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.8324136209599685e+44, -6.94197240546718e+128, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2019256358305059e+58, 1.1913506353573626e+167, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.068030105036934e+302, 3.533396508897927e+169, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5342503111795525e-25, 3.622348710997991e+107, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.981970143272485e+170, -4.289355214622222e+258, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0x29, 2.1670687129323278e+141, -5.972843926796581e-16, 0.9999999999998056)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8957710364025893e-137, -3.5366503215440057e+106, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 74995337181.6859, 2.7435117373691645e+106, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7127272490807603e-271, -5.354321854290775e+187, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.836951285771766e+191, 7.008652725693818e+82, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2219737238797003e+140, 1.5250429835308575e-54, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.318287427744468e+90, -7.509394224007691e+39, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.630738127598506e+228, -1.7760929668003025e+168, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.834278560049058e+286, 1.7905090073773606e-290, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5745153837254146e-76, 9.362588567112751e+70, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5527686203517168e+188, 1.1385493010862234e+235, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6134555217040166000000000000000.0, 1075261307856142300.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0671385555154807e-16, 5.034752941214719e+176, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.664780933013394e+99, 3.221255496150398e+154, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.093497495564198e+265, -1.0378334797563965e-117, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9871060499308735e-161, -7.722767453988832e-255, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.17654624010671e+132, -9.953804554690937e+297, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3395759490729062e-66, -6.802735479435067e-292, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.950176579803565e-225, -4.24367253985025e-126, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5144697052796934e+237, 5.854098217564183e-180, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.118623726621138e-298, -1.343268537424985e-55, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.58780893404629e+135, -1.1093898273880034e+288, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.958129556780961e-174, 2.5239975334620952e-82, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.671873207885043e-65, -2.0540543335906895e-245, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.271387061708802e-258, 1.105271242522663e+123, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.387648660259093e-70, -1.0793944781660254e+222, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.785663700527064e+146, 2.1975293987063757e-176, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1469176974860533e-110, -8.263198770213893e-103, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5709518347749762e-154, -1.1665431805434034e-201, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.96344693956925e+56, -6.102370567970399e+209, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.4710632963224386e+83, 1.221061575964713e+137, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8468035741251336e-172, 1.3272797796457434e+69, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1487889544017516e+136, 2.5437776270788473e-94, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.033987031894237e+151, -7.62331848141904e-106, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.275216136788706e+214, 3.384263570773566e+38, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xE5, 0x3F, 0x10, 0x89, 0x13, 1.56307485743922e+178, -3.109189914049572e-08, 0.9999872428636841)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.948637338325519e-235, -1.1150914912932482e-50, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.241446091153095e+298, -1.388305441351126e+78, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1537972251459915e-24, -6.697366845992831e-43, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.877142301564449e-73, 3.362160513694753e+171, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2913740751463446e-298, -1.8436931416290104e-287, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0421594197421593e+89, 5.906886127624674e+111, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.392158983373203e-31, -5.38851449171184e+183, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.558400807540102e-184, -1.2332880216769413e+224, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 150523835072194820000000000000.0, -3.603177923593483e+147, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5577494203039347e-161, -4.791443831412301e-124, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.656993835801432e-231, 1.563776690566261e+238, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0032159315883007e-293, -7.684207035935622e-66, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.51752142223813e+301, -6.374575224603428e+205, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0552452726574847e-113, 2.9531687213299286e-161, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8238808835992373e-281, 8.966957297116671e+282, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9752824727393125e-205, 2.1838323972847848e+158, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 1.0546204050196093e+40, -9.7170054396699e-18, 0.9999999999999991)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.310428963188482e+254, 2.6828032388786397e+168, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.5236908851552805e-85, 1.3999640479948145e+291, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2018349786559752e+83, 1.0657074298833425e+257, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0381868491835956e+41, -8.800136940910435e+130, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.885772222485062e+286, 1.2041757646730896e-158, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.605214689658619e-107, -7.031246440117211e+96, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.754620158562012e+294, 1.2020964089928525e-78, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9086229399708753e+97, 1178694051733886500.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7130451598720845e-60, 1.9599113449244883e+278, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.238493043799996e-54, -2.725490575798723e+54, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2100656905496667e+90, -4.499932960094671e-89, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.58984972992086e-160, -8.89839821864189e-102, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.44518164308411e-202, -1.096832941245772e+32, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.496569005860644e-224, 1.9378003281011967e+174, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8978546412719968e+174, -3.806677715740253e+255, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2170714956907404e+137, -5.608722398333508e+221, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.4032015363213366e-214, 18282.886375688533, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5771972197869779e-66, 2.327652622984644e-33, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.947651247909608e-156, -9.814222460723735e-225, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2603863916734615000.0, 3.003970907538958e+256, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1943309586.944774, 1.2743660657758952e-66, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6869427280259077e+78, 1.4989873260600834e-73, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.875775988264005e-290, -1.5425567319658296e-61, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3424728122941368e+299, -4.4500880867300666e-308, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.513893655120415e-55, 1.268770744909842e+45, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.449432066407376e-224, -4.376005670980773e+96, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.379900559468343e-39, 7.283708021748837e+133, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.502148350830072e-83, 5.708006311221277e+51, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6548633314062015e-100, 1996897594392532700.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3016315539431135e+161, 3.5393358869257693e+285, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2185074863484036e+207, -2.442249942998696e+143, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.811422556255511e-48, -3.6766349584863676e+249, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9839692850330643e-36, 4744962303922673600000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.076448030783418e-201, -130819835302694980000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3575783383551742e-122, -5.2987097412392614e+303, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5201689577154515e+295, -9.303177794329744e-121, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.597447627541126e+277, -8.157545842939007e+119, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4476981123844963e-112, -7.364937254586758e+148, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.180217902709265e-41, -1.8781260282558254e+46, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.077857656532923e-09, -1.1310892219603723e-295, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.4052354091741485e+93, 1.8237922716200893e+35, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.714513803576879e-170, 2.1130668137298056e+92, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4376114243941426e+118, -8.946092232466021e+200, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.5807508445852375e+274, 10566656223610684.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.028193339483445e+298, 1.077393249073423e+87, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1623789746423899e-116, -1.5287898016564384e+279, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.294931705087279e+179, 1.3614391802099797e-161, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0370225923933925e-113, 1.7618741453023436e+146, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6303520085652.285, -4.5487676521768044e-219, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.084812371396516e+267, 8.380285439099261e-190, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.034743786605531e-20, 1.0400043062645422e-94, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5621818794734426e-164, 7.631021979888904e-128, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1379667273414786e+125, -1.9877678926751174e+142, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1310104988608128e+286, 2.805899447755917e+120, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.024077635015383556, -5.610921203446386e+123, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.149529934067051e+210, -2.7287704175549354e-220, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3094610685552684000000.0, -4.4870934016499645e-268, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.859725695198082e+288, 2.074752620212503e-106, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7285497142592145e-56, 1.8077910375615507e-260, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.41247555698693e-197, -4.585858456625045e+246, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7203596076227598e-289, -4.2796922125674986e+265, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4353130935066277e-93, -1.7604962989808324e+183, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6395510036074484e+180, 7.733610195048493e+160, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.889882876721843e-52, 9.816580459270712e+58, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.12022207081842e-86, -6.074194433795703e+254, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.563564473977487e+244, -6.2825650572696035e+181, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.7573990869153645e-49, -5.4855525204608194e-120, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2782466728352378e-123, 5.521081620848605e+148, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0286370003449226e+85, 2.6071404041972517e-248, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.200616884457043e-203, 5.218851086289258e+155, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -0.003156083621845364, 7.60071326838037e+151, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.168395628432249e+296, 2.6037250152177087e+298, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.90025481437244e-130, 1.9957225820917338e-174, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6271579192412623e-285, 2.830557670824744e+135, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.365652146416457e-212, 7.700370124806421e+76, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3287513254296595e-241, 3.833937782301555e+280, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.570215780143601e-142, -1.7411373897510677e+84, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7431903063472767e-192, -4.886849157042497e+166, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.95850040092789e-272, 9.028173587443493e-51, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2221762724075494e+162, 1.1212230512113298e+34, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.220601675710149e-86, 2.5728352102311284e+42, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5239131746559324e+64, 3.0154728456567542e+131, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.828671831539425e-50, -4.528254336496058e+70, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.592849235822578e+66, -6.37733064618132e-101, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4982711717055272e-211, -1.021045068080253e+217, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.792778217632152e-109, -1969395.0588042573, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0719161273917387e-124, -4829960643315200500000000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.680187601078444e-206, -8.979436299131171e+206, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.082658297276164e+52, 9.613734968922394e-150, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -113014954135893200000000.0, -4.339588755593952e+211, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.660118968472029e+199, 1.8125201132213834e+244, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.96660198197514e-195, 2.1349537487966142e+287, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.9221875614457997e+176, -1.3556578113131144e+290, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7945591148170894e-168, -1252604809130198700000000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.222638513580407e+138, 2.7545669184773075e+243, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.735361374516912e+236, -1.4107660431776239e+97, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.486669924608557e-263, 2.610901925586784e-104, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6318444679847527e+118, 2.7277090694234733e-194, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7853299214736877e+248, 9.866114988414242e-265, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.7603203275567996e-245, 1.78945020757982e-134, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.603347134711e+232, -5.251045864627187e+180, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.233296432105364e+153, 1.348902516694265e-298, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3532728600055466e-265, 3.1124487286911316e+278, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.616624001888415e-73, -8650860034483205000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3588437903945475e-43, 1.1043366745263943e+102, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3341116145348483e+226, -7.642571901982837e-140, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.093230746259768e+36, 4.1769787185061927e+223, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.770570805518591e-37, -8.373210116871439e+147, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.082225456419678e-164, -7869199187748258000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.389331419071022e-205, -5.28913080988903e+71, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x26, 0xE1, 0xDB, 0xF6, 0xFF, 0xCB, 5.267133213441964e-171, -2.4097004090944627e-05, 1.009492739904078)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.740954035646364e+49, 2.913859057344177e-180, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1521685785546841e+185, 9.413198862306782e+301, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.281553586938645e+240, 1.197034068220057e+298, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.465560327214026e-250, 1.2194577354846263e+267, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.501945777550196e+271, -1.597083249517914e+122, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1290109218571919e+210, 5.597168059372527e-229, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.489310231506491e+295, 9.164300899000232e+140, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1845865401003844e+191, 3.2875338836259514e+280, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5900353015472335e-101, 1.2665921990956629e+45, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.867755258590018e-247, -9.571090476412071e+148, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 252622946644382750.0, -3.2653518262985765e-59, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6627918681561798e-234, 1.716030679753818e+69, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.958892467780837e+274, -2.1796630815574442e-96, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.674159965829151e-46, 3.053273208943432e+233, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.896079345282419e-64, 9.65251472486985e+132, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.681139143672838e+244, 8.671014766222446e+185, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8649388209653486e-24, -4.903902720188673e+203, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.002619487918272e+46, -2.0902840034117795e-184, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2503585621563353e+163, -4.700100767445861e-169, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0586881791932155e+276, 3.970240455437612e+199, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.7235335924809565e-47, -1.2023740450973206e+267, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7363166176130922e+258, 1.1220153373187425e+196, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.351655480728938e+55, -1.3398526544952047e+48, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.686021205688825e-262, 8.384532072120322e-193, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1181794503600164e+273, -1.4886115615584802e+128, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.387645848124828e+251, -14197.757169912837, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0580501257979145e+109, -2.8613888658968994e+257, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0592601894332453e+285, 3.8060195205615504e+146, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2782342746904263e-05, -1.1014265138832273e+32, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4247284855528607e+303, -3.1774777205802496e-47, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.566491108172809e+148, 1.899153865400443e+286, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6029744407629255e-208, -3.49488553277853e-107, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.017762346354941e+278, 3.4068928864263614e-279, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.936283543511419e+153, 1.940886464111651e+140, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.258247792200016e+44, 1.313804957106719e-139, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.342946196073323e+108, 1.3030965617732e-95, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6599991416569603e-72, 1.7311649595220697e+46, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4117081954452975e+103, -3.004315289004952e+178, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.13566716241127e-306, -1.4702095266186732e-173, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -109914323442900580000.0, -9.876058558075384e+227, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7778965389610464e+196, 3.836701788001214e+102, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.199449440732062e-219, -1.2056235310860678e+112, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0121661754069836e-60, -2.1333855913650334e-113, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.898155497427715e-21, 3.126735671381037e+305, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.955650412218665e+142, 9.127586227732059e+167, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.587563352879225e+48, -4.06437687394503e+273, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1716152267168632e-46, -9.90828028365607e+228, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.390066513608206e-135, 1.1155016824798583e-136, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1754275529436085e-263, 2.5074234955583244e-21, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.250745910033282e+222, -1.9976660389731662e-307, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9579097226211394e-13, -3.73035503122808e+139, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.082811920103861e-205, 5.055407250314607e+76, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.4255393031465904e-163, -2890797093229491000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.427839798604573e+270, -7.464947636415526e-247, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2838570464010914e+212, -1.3129186811809247e+302, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3761231660818225e+169, 2.146517300942413e+300, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6133522445486197e-31, -7.940693947323105e-261, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.889530616186835e-137, 1.2408445364559787e+259, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8959400275426958e-185, 7.330147105400075e+94, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0879064650019047e-62, 2.8206275234720776e-303, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.267964673326172e+266, 5.306677285718768e-116, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.122127068898823e-68, -3.1100224710652097e+175, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.446201717168386e+233, -1.6827420928590708e+253, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.123934274044237e-131, 1.5460318766362227e-187, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.92139375188039e+86, 8.191996926789276e+55, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.088539184378617e+123, -2.45838534718099e+102, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.942473006045671e+118, -5.58678829563235e+279, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0068764498264367e+177, 2.307284501292234e+211, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2965155834880551e-115, 3.696762163505922e+237, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.980913064106178e-96, 3.5981173026521716e+189, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.9016492240772305e-225, -8.524648664421768e-89, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.263160183676714e-170, -5.979786821129392e+225, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -901501134775407.1, 4.3015044831382844e+129, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.982488200180246e+106, -1.1922286229086219e+204, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.378985091696769e-178, 9.423371128424178e-125, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0000971003707524e-122, -1.1341571584407784e-296, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6983347152764338e-140, -1.977725888462328e-110, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.640175339480769e+36, -1.726620001440691e+246, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.066128413259452e-210, 2.2717189505798854e+256, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.193406137112813e-06, -4.406101487352802e+58, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4029644178076912e-219, 1.0013362149435393e+281, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.260118529751833e-266, -5891966449808407000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.825685995094092e+68, -2.5053757855328447e+290, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3052950757004187e-79, 2.1051100274383997e-159, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.580700130547645e+57, 1.0689423021328944e+105, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.894764972029408e-70, -1.1300336481566063e+295, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8700965871130888e+81, -5.297189778042594e+270, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.916735904591126e-162, 5.003504613403645e-104, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.506261158926667e+136, 6.143212203319428e-91, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.539733682438485e+218, 3.9071463033757386e-176, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.580944708079076e-176, -7.791905317995534e-197, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.31838541122123e-43, 8.448642834451739e+199, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0980584649140652e-57, 8.715344107016978e+268, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.0009621318316065014, -4.70145647924053e+129, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.582914957788041e+197, 1.1322772882839509e-155, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0477516501483023e-176, 1.9000103989783715e-87, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.355808332604899e-123, 1.0842779943606978e-271, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2514076308901817e+302, -1.3539658278088153e-225, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.817629855026717e-157, 7.144561964788768e+132, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0012686945783664e+187, 6.379387765251898e+200, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.541099398031368e-268, -3.1801955415398674e+64, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.324860062478115e+255, 3.083542084949856e+124, Infinity)
	assertULP(Math.pow, 0x45, 0xB4, 0x94, 0x2A, 0xFE, 0xFA, 0x37, 0x2D, 6.563296256827105e-147, -0.19020051901562002, 6368824260625071000000000000.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 102473831.28541988, 1.2260625530845915e+240, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.8242289165367036e-06, -1988526.5767997613, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.014320010244459e+292, 6.859193822169707e+239, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2705586770776714e+151, -3.5027246290250663e-190, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.889158076743175e+143, 7.181307792270544e+275, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.762616808971395e-20, -5.875117171433327e+288, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7462321492466287e-26, -8.079017764887721e-242, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5052672113739704e+286, -5.52345863346111e+118, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.834186204857625e-244, 3.6731084764999814e+251, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6857556741657747e+38, -5.446750431167209e+180, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0206140771404832e+272, -1.2365640388600008e+61, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.307900550018949e+115, 7.397861222953999e-258, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0246787561933004e-84, 5.478793294650379e+192, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8034831592799877e+169, 2.866030057599816e+196, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0888759012406172e+49, -3.3047473998012e+195, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.651847354399685e-294, 9.057111955213355e-128, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1063419187000424e-45, 9.666780180869508e+161, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.228660536006247e+149, 3.324799033285254e-103, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.552846081260689e+194, -5.756891299764739e+185, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.764000557058886e-131, -1.6137852795749242e+299, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3813150482736566e+206, 2.839376933090038e+194, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.703612561869182e+50, -2.230551289291961e+90, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.010044029905435e-147, -1.5624561908633145e+109, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2709595185016837e-147, -4.4065392676443086e-284, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2869050304574808e-43, 6.227764330569596e-21, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.54686797120544e-41, 1.5964910328048119e+291, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8050097848386658e+277, -2.0123249254759553e+127, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1475433563038828e+182, -1.870347357142696e-306, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4699806617834088e+257, -1.0317018867668476e+180, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.050316664422473e-179, 4.63904776762175e+292, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8128800679395963e+202, -2.1652491776596595e+97, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.331175842283116e+294, 2.2210527142448102e-92, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5291692748463984e-22, 2.2368686285452535e+86, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1540676850110788e-289, -1.7507063016368051e+277, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0626759861051875e+228, 7.556817473491951e+154, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.921066470971097e+283, 3.2220606533183214e+74, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.611388810972134e+244, 5.53928439991759e+216, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.8553516954568256e-297, 3.566745732370279e-275, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.554230400981231e+195, -716121.4502661389, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0212347734675772e+293, -8.598619309609299e-232, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6105859237377096e+107, -4.612387626043091e-110, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.296061833406042e+123, -1.3184410767342777e+44, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.045135321382568e+51, 1.9669748961867955e-288, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.302252325857248e-73, 2.4591618374932116e+63, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.035963169936331e+167, 2.596385075119013e+127, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6135736789035697e+212, 1.47904524596673e-293, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6008395376901636e+53, -5.058480931410561e+39, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.399112587832819e-106, -1.5036230244302958e+113, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1816003153417882e+156, -5.9310049297699946e+302, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.445687372367038e+40, 2.9033828696939e-223, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.539256570581196e+223, -6.00623365471956e+62, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7042195203801477e+96, -1.1005248837803556e-271, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 138411472519565230000000000.0, -3.7236367063456837e+112, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.673854921240652e+254, -2.7386395336864023e+250, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.71699731411137e-135, 3.664112501023639e-167, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1869755417214291800000000000000.0, -6.998308319143652e+234, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2395404842618555e-99, -1.8441294970943258e+32, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3461658786511424e+104, -3.327113810298922e-116, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7520508245110082e+270, 9.299041984158927e+148, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3335643083213364e+137, 5.447376798675107e-262, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -822475314954825800000000000000.0, -5825136737553310.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.96019297232019e+199, -2.989069154673509e+151, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5023713365605716e-204, -254545814978600860.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.145192816455096e+256, -5.795381764136744e-60, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1494714281583624e-206, 4.4477048744455204e+164, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7398136886102296e+154, -8.176680028418332e+191, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.613520472228869e+209, 4.678371463229756e+225, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5611554002973597e-196, 9.702982595273154e-32, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.080840849148796e-80, -1.8591168752459773e+302, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.182751269221533e+297, -1.3915294681701234e-272, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2727038748778332e+76, 1.029223715455132e+117, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1675268982175252e+131, 1.284104626780576e-297, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6494533249080907e-198, -1.0422345375347923e+75, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.934972699634507e-49, -1.7724801054405413e+76, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4831140457230992e+292, 3.2902522883913824e+64, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.208857253712842e+250, 3.809787430800726e+48, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.35003519564824e-226, 2.0660221699705616e+298, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.816073338343707e+115, -1113930777621736700000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5486528305242856e-86, 2.836618461611747e+295, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.913421838027578e-222, 1.2945718106128305e-244, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.760620577554707e-249, 2.441052861708828e+273, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.95095386664843e-79, 1.120456571815872e+53, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.37401056162043e-272, -1.4106631306183891e+37, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.654207917372708e+40, -1.7021550971262993e-232, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.679533860323939e-279, 1.1036288593029541e-208, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9419150624430565e+94, -2.0860140103890676e-73, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.13980722192435e-41, 9.041134732160479e+82, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2846927873671703e+219, -1.027873999195827e+201, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5446217970498595e-242, 1.728440750318548e+34, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.681493441854835e-143, 6.330860786913119e-102, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.262978000661275e-165, -7.373935996457026e-26, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7821912610681587e-118, 2.05402447567677e+200, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xED, 0x30, 0x6D, 0x75, 0xDA, 0x97, 8.498617437424108e-200, 5.015268439638688e-06, 0.9977037561319148)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.706981059292768e-214, 7.061121817479924e-215, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.396279134584151e-13, -4.023221472045814e+78, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2818460425164234e+293, 8.762401720634121e-174, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1371540976343007600000.0, 5.249712069757586e-130, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6237433984994803e-10, 7.005811045521286e-244, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.780624060493059e+81, -1.7005456592520397e-176, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.016716151907696e+236, 1.505990015643633e-31, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9921518568996386e+264, 6.170354072055716e-90, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.990296997674618e+150, 5.154467959175826e-290, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9112315137491787e-194, -4.4693315505545487e+111, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.093436552166191e-248, 1.8236662249479123e+242, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.6806526336698e-97, 2.1100283895166319e+111, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6796772450496124e+285, -7.958242910903075e+178, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 702908496821555800000000000.0, -2.860820462293534e-290, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.090674815424337e-193, -3.0065975062350864e+33, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -0.00011922684560932478, 4.88266722092679e+198, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.555100247240629e-159, 1.1056570453437819e+278, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.308655340757713e+206, -3.800270066872905e+265, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.379738055450565e-101, 5.833836509931637e-120, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.533138756191003e+64, -1.5801445090849627e+306, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2389222832896997e+195, 7828979800607758.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.939753553174668e+35, -9.86069408062048e+172, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8994684786212098e-227, -58904627453349070000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.03842499713788287, -5.425856144943911e-302, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.939630901465075e-270, -9.415631539869062e-183, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 14353595455923739000000.0, -7.219100165404172e-104, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2820975249332226e-141, 2.1723494312214776e-32, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.033330371239439e-204, 2.9969251535605376e+159, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9641057518484476.0, 2.870333005019109e+32, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.344837644791851e-11, -2.3034456592372523e+171, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5122384845536516e-133, 4.930981862534745e-238, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9175167625891355e-208, -4.963395268264503e+289, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.846476487708054e-146, -2.649542473433579e-30, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.795348136777178e-183, 3.172558369505189e+269, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.667023570234766e+243, 1.421611733566211e+82, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.648742626398367e-09, -1.7495188283391403e-176, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5440996983442818e+158, 9.323987523944796e+37, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5064434918.413596, 7.935072827532782e+298, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.449643201658243e-176, -1.8333220144999737e+79, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.737454219696904e+93, -1.2317896426144914e+247, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6804590757540214e+307, 1.7783696957238055e+196, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xF0, 0xE4, 0xA6, 0x09, 4.3123079185178913e-268, 4.570703932418562e-11, 0.999999971861315)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.615956059307832e-204, 7.132974884223148e+248, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.237147341760587e+53, 1.540956998536846e+45, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3699072386484311e+122, -1.815381597590618e+127, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.338618150543363e+245, -9.788711995735553e+302, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.289376364922985e-301, 2.0113558707388568e-184, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2750792049313221e+162, 2.9309130014040386e-64, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3261925647258877e+304, 3.5152222739868414e+183, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.362343015650186e-09, -1.9453598643849774e+104, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.808150989657193e-45, 3.7708565373757106e-280, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9480091104491277e-19, 1.5236940081118908e+116, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.055484031660113e+307, -1.4018812125085075e-63, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7113179308329973e-225, 14140464397244417000000000000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.196479470821323e-20, -1.780283334851904e-202, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.137554928870886e+83, -2.2216842058451785e+117, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4392483202460483e-274, -9.78515201517826e+62, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5472500294177356e-55, 1.2557720223332924e+219, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.617780853425675e-75, 1.1948733523036607e+91, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2538905326339159e+47, 8.954629743881614e+60, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.740876193811061e-138, 5.610688751560852e+116, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6370504591285956e+259, -1.9419798573520945e+290, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9148191737412734e-167, 1.2512554214203263e+108, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.568804350120817e-238, 2.4550398148373902e+96, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8641305436049216e-17, 4.954544146271023e-88, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.107857120164736e-200, 2.4769188110423635e+159, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2118072856429963e-104, 7.909466070471576e-248, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.659329994580657e+248, 1.111901611962991e-160, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.765157127715093e+267, -2.65734281844626e+54, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5514570176860497e+96, 2.6307092529619703e+225, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.657151719337237e+237, 1.0550387167768341e-292, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.540058501524904e-77, 1.937694844147512e+103, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2947139642264164e-39, -3.78007427700481e+86, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.749378654674737e-52, 2190921336333726000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xD4, 0x94, 0xF0, 0x5B, 0xCC, 0x0D, 0x64, 2.659014060870227e+70, -0.006996077121687452, 0.32159050907667663)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3020935248440068e-123, -1.1708155648281542e+118, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2845950953222102e-303, 1.7282635093118682e+280, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7924596857140665e+290, -3.817159329518171e+64, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.485542510957806e-290, -7.375097921761684e-207, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8682764147455587e+139, 6.780728522396699e-282, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.157484845840996e-263, -3.463365444221907e+83, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.0015480203295372243, -1.5665203999877037e-235, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.157103532351691e-240, -2.523155969045466e+177, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.050397304872475e+292, -1.4464813355318566e+128, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x4C, 0x11, 0x10, 0xAD, 8.142286913622686e+101, 1.2075878648345236e-09, 1.0000002833703932)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1104258796360546e+272, -4.41568944246015e+228, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.290910463843075e+203, -1.8173899343840397e+195, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3953365548096137e-189, 2.9964252949733966e+234, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7516764505365518e-161, -3.488299580262917e+160, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.388861604805285e+118, 1.5290596730641315e+259, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.065736668692688e-25, 6.847714263064176e+61, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0788782533825107e-225, 1.6339885068499765e-43, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.666695347141261e+60, 3.44491310208716e+84, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.820284536978271e-54, -1.7200793233299345e-28, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.110108859825562e+130, 6.396249816353719e+293, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.411543524662477e+158, -5.306119894221911e-55, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 22359270714988204000.0, -8.23730888513756e+300, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1054812650260862e-273, -1793441.0517728422, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0569222555293211e+66, 2.6140753624817403e+36, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9338581169863617e-156, -4.623108028287544e-284, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.21957439983953e-113, -1.2366820160636321e-118, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.634843649584475e-47, -9.03639770777423e-40, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.883653023721e-135, 7.946331129983666e+198, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.729536486984742e-189, 7.376466329190169e+214, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.278670693758952e+94, -6.717577983805866e-197, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.754491586137626e+114, 1.1228029357672087e+131, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.30613016105642e-273, 9.074650669409443e+190, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -81.08322946294784, -1.0841626022597193e+80, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.9575908426164386e+275, 6.5927833805788765e+122, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.447504384538679e+88, -4.663763225592437e+124, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.853462459654037e-116, -6.359752220514381e+256, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2210008518516399e+260, -1.9098272973001857e+105, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2308.7369166973795, -3.135509257744332e+299, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.560580641062336e-203, 1.6980175369914316e+41, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.16305161729897782, 3.599835189658712e-244, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.188320060610429e+80, -4.711678709800373e+226, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4931479553596283e+294, 1.585248879006367e+274, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.837809036154713e+274, -1.8548020418091588e-202, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.858650788034399e+44, 179438167928394960000000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1209731482712342e+169, 4.2675714443339444e-232, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.796944082122412e+236, -1616600112051180600000000000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9505522296203324e+149, 1.389836307035265e+116, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.108338003937935e+210, -1.2487418541665616e+285, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4980170858770562e-288, -2.2958281237569234e-60, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.330891365662614e-85, -3.6103306644835456e+146, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6973671076955726e-69, 1.0425670266247747e-164, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.1103067403305945e-65, 1.9096058755359104e+60, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3494222940846653e+306, -5.295497090040772e+296, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.745765618445368e-99, 1.3709414883289493e+72, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5628819868648788e-251, -1.1218085160978618e+136, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.8233801955773835e-177, -5.136738572038681e+266, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.2576986535842185e-115, -1.4924669121729478e-52, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.350558389879551e+200, 2.795091263934639e-185, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1829025254640357e-261, 1.1474673173323143e-21, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.878573833068823e-38, 1.6192853315633808e-83, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.246130343432846e-194, 2.3537468038429457e-270, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3071019203551706e-59, 6.402710167763358e+283, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0x3F, 1.4585135193063719e+131, -4.475123307512515e-16, 0.9999999999998649)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.355383560245249e-101, -5.682530397077249e-149, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.255805372817457e+34, 1.314385043780784e+303, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1462740887644765e+291, -1.2067299651237869e+271, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.419022789019685e+36, -1.7366190158359856e+160, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2602425221348763e+167, -160413403683087450000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.358300022719246e-98, -7.146859406280745e+99, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.19041442283563e-105, 5.4032910511230145e-21, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2803987481022292e-302, 3.2868607240057575e-196, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.933221188803703e+136, -3.7527383436640783e+258, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.517104185657834e-196, -1.419361027511857e+254, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -34578719043859290000.0, -8.696459072003415e+216, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.333851026623391e-243, -4.8959661012648966e+266, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7294653303829765e+240, 1.933843619257387e-147, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -89.04858172247114, -1.2869600840253031e+177, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.8466709430496086e+265, -5.721419925113461e+100, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.027136711695925e-13, -8.076652541921167e+42, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.1890781916474774e-257, 1.1378401037825837e+279, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.35169752806191e-259, -4.696467759464492e-174, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.953718680060512e-202, 2.7515858433447963e-300, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6159383349493382e-286, 8.031003843677423e+177, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5741198277189123e-298, -6.300018585332207e+153, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.438542852091908e+194, 1.724802830683052e+69, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2914064402359241e+210, -6.916895877455913e+294, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.228716067513136e+108, 2.994818918694501e-235, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9793504725292676e-189, 2.9095709338987436e+91, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.693402219806705e-214, 1630624825231124400000000000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.481734764253649e-170, -1.0394607880448165e+292, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.781999927305377e-33, -4.115288428549981e+160, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.580445146965936e-214, -2.325657267834945e+47, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.322679849213852e+164, 4.52358264356101e+185, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5166705634225413e+162, 6.929836141858242e+208, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.589634875329543e-136, 4.891196740591903e-268, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -209355992623894460.0, -2.3896394099822083e+67, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.534388276102656e+130, 5.881024041576214e-225, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1311467528409536e-107, -7.183368182388038e+186, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8482264259256154e+81, -1.0206681321221542e+266, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.724882204215081e+86, -2.249897232222714e-72, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6136419928133902e+262, 6.663082431383582e+142, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.057987475588759e-253, 6.491418957848787e+225, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.078538466194815e+176, 5.721106252813243e+185, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.891029282719205e-308, 5.132038269160711e+264, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0xF8, 0x63, 0x92, 1.231244481263257e+92, 1.7046006410035165e-11, 1.000000003614535)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.008549346162463e+207, 2.36012057541712e-279, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9232396655781293e+198, 1.1001010071483577e-257, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0001762876319651e+290, 3.435025907974232e-260, 1.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0x57, 0x6A, 0xE6, 0xCC, 0xCF, 5.598934251247997e+151, -2.3007045645117798e-07, 0.9999196136399408)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.730884949737139e+101, -1.4916102206452217e+221, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3021894052052747e+78, 1.0695955960181257e-71, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4729721727142144e-107, 2.3742625511042913e+170, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.787675254969304e-203, 1.2283439925958212e-253, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.676320931288629e+114, 3464858779034.713, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2669669819406287e+248, 9.214369848665947e+257, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.076682245512947e+252, -2.7480774381357965e+297, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.9058904092672775e-66, -3.031969305717994e+251, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.734981180849252e+33, 1.5176824212295395e+189, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.98697541363431e-92, -2.3943082836290663e+38, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -33388250592304820.0, -7.14533947788385e+87, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.422071038368801e-51, 7.728380350556316e-93, 1.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDA, 6.891679580057382e-68, 2.736486407048913e-17, 0.9999999999999958)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.356586396591496e-276, 2.4387726205931755e+79, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1192863117870158e-169, 1.1843239668109373e+37, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.174064852874161e+137, -9.127860642515158e+226, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.176085965257971e-213, -1.3257477399820495e-254, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.414778314886106e-174, 4.604582925787581e+266, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.981094822619637e+209, 1.599358871638783e+231, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.573397943735892e-179, -29174423133972433000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5024847438537286e+64, 108282080700029200000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.56008748594228e-262, 1.5086897098548958e-52, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.094741567450512e-104, 2.8331534125573845e+307, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -57245.61403022548, -3.905078661726511e+290, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.454980328378538e+239, 1.1948643514692102e+204, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.514368041792597e-289, -2.3431676549120004e+289, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6788185944566058e-269, 3.920077967538575e-96, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.913141943407291e+133, 2.6546395109911286e+106, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3565043168814194e+39, -1.214541665006222e-147, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6881247924775005e+178, 1.4077265502521077e-307, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7656324960789203e+120, -2.9790284031614386e+97, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.97486121175912e-163, -2.1777062044127093e-172, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0671931124377144e-165, 1.4052222038649878e+104, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.216115329382314e+136, 1.5391562795874868e+172, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.575208475347453e+302, 1.3603155226070052e-267, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.286222780492326e-227, -7.85517013045519e+207, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.833465319747119e-152, -4.2901732839935665e+253, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7633952090523736e+124, -3.235165239100634e-51, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.552825368677902e+248, 1.4510866302105934e+85, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6487945898982752e+302, -1.889319394333389e+82, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.942037392938471e+254, -1.256922734642033e-82, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1721929519755896e+135, -1.0333286842189027e+91, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.4768703384841476e+112, -7.422709210175685e+194, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8381335985602806e+229, -2.408578857496505e+150, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2823563361922106e+202, 1.7692830510457573e+206, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.266136287079353e-65, 1.6610328286751836e+232, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.1868115787955826e+194, -4.160165372427981e+174, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.711262194463893e-267, -1.9556227306117715e+209, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x05, 0xD9, 0xAF, 0xEB, 0x79, 0x43, 1.1646753383312971e-97, -6.39470224928623e-06, 1.0014283058040554)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3123904492756106e-88, 2.649088074484365e-70, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.260210835106819e-283, 1.6958339656153045e+303, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.3160151633923285e+241, 1.165043622105827e-46, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8249617461811058e-41, 5.541706669092635e-233, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 132994826205613930000000000.0, -1.490142715620068e-115, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.130032836045649e-159, -4.51005177886114e-41, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3244094422311624e+116, 2.1122796000973e-232, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.277124444586998e+171, -4.560613161650125e+264, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1037714044584687e+56, 4.184567438362242e+153, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.57812998646782e-135, 1.4744274832565853e-196, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1192657078787604e+123, 5.000224244883857e+198, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.387520137250052e+132, -2.6686287533107632e+191, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0114002048656475e+39, 1.588974571195398e-36, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.482429521952126e+177, 9.392219275027746e-88, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0272040325528595e-204, 7.343259785226704e-199, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2461236055466225e+59, 1.2190208305675095e+114, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.8875710662029124e+211, 2.583003142692301e+112, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.877464250218558e-280, 9.212120515238623e+97, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5353984919909746e+75, 7.473820632470064e+130, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0412574549002716e-303, -3.1679213973912857e-52, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3174417080646686e-154, 4.5191365046245604e+111, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.932166195204716e-263, -1.1368912606072253e+99, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.592250223450298e+135, 4.983238095013954e+36, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.525963063289104e+101, 1.381102528127974e-295, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.1849662763569496e-203, -8.481753877326422e+36, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.311770791978083e-146, -4.4447312799021615e-163, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x04, 0xBB, 7.097943994443344e-52, -2.2836949957942872e-15, 1.000000000000269)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5615250926205295e-183, 5.3053071724293283e+51, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.757089172605833e-46, -615279086081588600000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0793335091435787e-75, 3.492746943638631e+229, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.312509298087695e+191, -5.7996193979544986e-248, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.285042499353723e-166, 1.4847682835531728e+263, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.235995926428537e-260, -6.746408844233475e+187, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5691176347781969e-158, -1.1853380528616533e+51, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3471054922189515e-160, 4.653114553878693e-273, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.221233438579902e+229, -4.1302165813420646e-29, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5656433564342765e-64, 7293386412567462000000000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0477890141305642e+265, -3.557217972171746e-113, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1113412684231373e-133, 1.7264863142956835e+42, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2577644968202072e+125, 1.0645588859981727e-161, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.189258332755948e-199, -5.8769823620626355e+63, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xCC, 0x59, 0xBD, 0x98, 0xF4, 0x3D, 1.2085144117420762e+209, -1.3137586857881806e-05, 0.9936951354099005)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.546202331465492e-63, -1.494719138895673e+213, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5080842877486162e+103, -8.671674938869796e-270, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9622963688854297e+83, 1.9427078315028116e+218, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7709392934457865e-127, -1.7482060013936e+280, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.841712668458604e-149, -8.670932451482965e+187, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -19979.906751197857, 5.759591118003338e+253, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2442328120562201e-243, 1.6869594329838016e-95, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.773564709120053e+177, -2.3371057996201336e+175, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3632858149010862e+283, -8.7578228743654e+258, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.32850897306232e-69, -2.170645315834081e+106, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0409235645644995e+68, 4.026976431201181e+111, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1780268639122563300000000000.0, -1.825398628912611e+201, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9894859378825584e-201, 2.414009851808e+71, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7174900870187742e+186, 4.487284245162091e+206, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3841625845025143e-135, 3.2486477727532553e-271, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4528379829348418e-05, 3.2658219899558754e+296, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7096070630487408e-267, -2.598167181288213e-115, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.5538272273935925e+296, -3.023967235234084e-212, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1327363640767125e-189, -1.4407032028141663e+274, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8036534091697286e-171, 2.1992245821503185e+272, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1827260610036258e-192, 5.783586966676157e+282, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.0004875612492054442, -2.3791086863045415e+150, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.9296651037149936e-107, 1.547257450694098e+122, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.62550286496941e-279, 5.684024695311651e+203, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.580244260994361e+87, -2.565271534013836e+84, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0084194296760905e+177, 4.980527652135824e+294, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.955902951471657e+42, -1.8380132244240998e+223, 0.0)
	assertULP(Math.pow, 0x50, 0xC9, 0x9D, 0xE2, 0xF3, 0x64, 0xE3, 0xEA, 4.406641111907743e-45, -1.830229729143599, 1.518702763746036e+81)
	assertULP(Math.pow, 0x40, 0x0C, 0x54, 0xCF, 0x31, 0x93, 0xD6, 0xE9, 2.260637232990809e+294, 0.0018656987115970342, 3.541410815548137)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7331874527625454e+64, 1.5784399257803936e-188, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.217802600237991e-222, -1.7930082827487605e+32, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1864527357182094e+79, -1.4426561450323494e+261, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1848509870344588e+120, 4.979934861325337e-36, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.30749475434784e-201, -7.211866391764071e+194, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.211839326529548e-105, 1.8544845436324144e+126, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.0002607891494307134, -5.681119251229167e-92, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.042588983308528e-96, 7.789025093452772e+157, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6718908707502325e-306, 1.9806087221559663e-299, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7738205892164598e+190, -3.6743879685569195e+279, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.921688869983912e+119, 1.3218119321467306e-209, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2323685942579406e-32, -5.790475463970532e-138, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.8426179534297634e+57, 1.4574824975755997e+188, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.92521291136111e-275, 1.4524727852611557e-59, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.368223454961484e-198, 8.467135547889992e+99, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.518914988205512e-149, -2.441716678081246e+142, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.082502228725731e-28, -6.82666085388668e-81, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1377519861357596e-224, -1.0708277796577409e-141, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.554782939270667e+169, 6.742073388399003e-225, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4323495690977303e-134, -1.9219987910717698e+267, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.876910249470309e-302, 1.6679622664579082e-199, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.158700589308932e-297, 2.2734972092939425e+294, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4711207438552176e-251, 4.883119779222414e-302, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.415938293023059e+75, -3.3666479839170945e-164, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.455740499197234e-208, -1.9888138322750396e+71, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.671747796921106e+137, -8.940663804178973e-197, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.41808833412374e+129, -2.6542456919227236e+119, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2918058306081066e+164, 6.323316897924585e+224, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.524103231300057e+56, -9.098646663398869e-184, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4564324055344188e+87, -2.5780477157659568e+32, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x1F, 0xE2, 0x14, 0x5A, 0x3E, 0x36, 4.206129589022477e-75, -4.527588054945535e-05, 1.0077839655895224)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6677709038053895e+57, 1.0711649398433431e-238, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1370092995162545e-219, 1.461136158839328e+143, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.595830230684373e+84, -3.0295189505086762e-145, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.9807573330039283e-69, 4.6049447964580076e+281, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.57083182506065e+183, 1.3879778599924802e-252, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4311357276475966e-212, 1.114575517098442e-22, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.406400302245612e-303, -9.111794758832646e+278, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.86304864582772e-128, -449643713062734800.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.538653387861459e-185, -2.1997888894438247e-203, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.441951899195879e-204, -7.317675381556145e+278, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.475659567492938e+148, 4.400711359761763e+295, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2234853114775735e+258, 164997663715124250000000000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5663961612579186e-44, 8.376670762807844e+116, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5527339899268702e+55, -1.4173683369867447e+128, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.999917579986297e-272, -2.1647796872217257e+127, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.858706303439626e-37, 2.1036811560073401e+220, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.332518555047714e-290, 1.5713045733343271e+117, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.796466645244741e+306, -1.3464819746894816e+71, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8213515611666026e-183, -8.451117016629704e-196, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.980150316988185e-130, 9.32622560528275e-303, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8314960055389114e-19, 7.380576433156673e-36, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1663737839494117e-270, -3.2951786158173314e+191, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.306717784153246e+275, -7105181.017961945, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0006914435790392e-123, -6.167509323603603e+87, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.56948508229923e-39, -2.7688603068332326e+87, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7467583437376223e-112, 9.569723815434377e+256, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.1278788321514736e-129, 2.459059559774706e+164, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.088724450040806e-116, -9.262153032068384e+269, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.041768872957631e-285, -1.268981460028295e+70, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.806328828108118e-224, 3.742215198080622e-120, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.516328089832306e-209, -4.739459173942564e-125, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.758185118622411e-27, 6814.449860183307, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1558226316523082e+88, 6.058923382488628e+306, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.539149705196188e-244, -193329375124726670000000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5781164046110063e-156, -4.377248187824108e+143, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5688748457544323e-158, -3.585337516937781e-140, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0559413849804596e+253, -1.8823120595997955e-72, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.607258458327594e-266, -3.298862987337166e-203, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.722812471404612e+84, -2.4002256270462686e-265, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.120510925162806e+74, 1.6260851802300622e+258, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7655263265638503e-119, 1917036924816340000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6906554407730554e+40, -20177198346947534000000000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.330497580597973e+255, -119749539049271980000000000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2069125760875785e+168, -4.6044032053205385e+68, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.376984156036896e+198, 3.548426774340755e+222, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7029874476201e+203, 2.152332608476368e-303, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.387067128918409e+183, -2.117984313178622e+82, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.065114012176935e-281, -4272294006479229000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.055811773063861e+85, 6.859437989661745e-179, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.472858012103743e-237, 179298045.2940868, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5076913817279555e-167, -3.732015439770215e+200, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.016185228078961e+135, 6.877653521354059e-70, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 353018700094446560000000000000.0, -6.1600304995699984e-204, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.389665554534644e-94, -1.3094433020737083e+56, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1232046152844343e+257, 2.908381321631697e+267, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1285828668002996e+139, 5.45709045008946e+285, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.850135788405221e-14, -1.4363822685529507e+258, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.6084598741190465e-64, 9.261128185204131e+146, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2434035210856098e+231, 1.390439371657126e-20, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8095817000049783e+262, 1.1797836124008357e+276, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.365888380837613e-57, -4.434133071992632e+181, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0733644339146152e-129, 3.578109222140665e-232, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.794449772403558e+128, -5.192726669649494e+39, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.872634105393909e-210, 6.558318549302978e+223, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8833472179906345e-207, 1.3536722744104725e+215, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2542392874188506e-137, 28.373803394677324, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3057724495976375e+167, 4.989312330319001e-22, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3838903653231746e+306, -263.827608160601, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.953822599872839e-10, -3.5465306617502687e-93, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2040728504460025e-288, 6.0710894479653254e+50, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.7428487299200475e-241, -4.017831349418377e+241, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.028208124929003e+105, 1.8141458085166803e-206, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.50799775032728e+42, 6.428887290173602e-299, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8728246283183456e+66, 2.6357761329542562e+154, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6569472489813593e+230, 1.7784918317144685e+84, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.186243437944793e-235, 6.866427368564479e+83, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7973259214473019e-96, 1.080170938342092e-238, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4256312351201691e-252, 2.364444397396906e-104, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.8265402770438295e-82, 6.6416076613068515e+168, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.253836239218326e-89, 2.1904020862183668e+67, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.2433543792468454e+251, 1.3174145838912006e+252, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.527438202403974e+139, 7.596820601266347e+235, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6084049428919724e+304, 2.4576822767771362e+235, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3535087952051285e-95, -6.423101557254633e+97, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.2917662648411954e+212, 1.848247924489893e+265, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.807002013326554e-100, -2.853301681132999e+265, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.394788882515932e-82, 3.969980581929033e+117, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.81201928103999e-203, -2.0369466276707118e-290, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.4248298283987723e+248, -8.58794441470301e+77, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.478862355595881e-263, 3.7517887770893285e+183, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6403216809547719000000.0, -7.326065775365702e-302, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.7598529672309875e-202, -8.553289430099658e+94, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.073147268047928e-191, 2.2151649920129666e+166, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.824007523175073e-71, -4.5411039184463025e+223, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8750202194581188e+109, 34078005849166803000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4380679221499006e-86, 6.041530286470821e+190, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1414668715936404e+145, 7.343945892525224e+99, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.906212820567048e-80, -3.5169015442942376e-89, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.6322794997359666e-176, 5.557458071750612e-92, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.761267215983554e+142, 3.3761232781532896e+180, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.284913097111829e+118, 2.565393880526484e+306, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9962894365383214e+199, -1.0295190459732366e+292, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.487875047445177e-82, -7.196832388170809e+136, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.150859191737084e-63, 6.98902828791855e+166, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.08244240427492e-305, -4.586229678708616e+96, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4043420382203905e+186, 5.932702642053286e+209, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4695569950465178e+100, -1.595788516341241e-33, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.8034731377969704e-20, -1.9178827197738948e+67, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.08463817364016e-241, -1.7807764798609704e+37, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.525961341724372e+253, 5.342826813501212e-196, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.463133401542667e+259, 5.699631340567532e+127, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.077129952458306e+264, 6.688104004393648e+118, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.750433953575274e-221, 1.1297409877308577e+282, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3502315682948831e-278, -4.6747934067873754e+241, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7540850800355422e-271, 3.3358675696234104e+279, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2140504791020062e+243, -1.0694636065928234e+82, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6544795932301666e-256, -5.011538046679316e-28, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3538416635945377e+147, -9.720848917470595e-259, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.972689728837586e-279, -1.5340032644273309e-74, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.99345347324061e-104, 1.7461578589590562e-188, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.269010442577192e+106, 7.25812295223608e-121, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1789536551251282e+85, 8.882184812256591e+269, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.880747025478477e+207, -1.6773656451952854e-131, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3574023776148838e+128, -1.06869452515495e-231, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6658483371902006e+300, 3.9909099043835946e+57, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.445395254664781e-195, 9.491962476833638e-164, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5288839637031904e+161, -6.937229904067805e+262, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2556685365217715e+223, 7.366192064331916e+279, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.658853845003437, 8.141686798245549e-258, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0838570781751556e+251, 8.094610496590718e+53, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.76452833887239e+238, 4.427885487397479e+146, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2856612573928258e-145, 3.766378942352152e+61, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 33188465268.617878, 1.5970086516169395e-188, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8405522935413607e+176, -5.633661995874114e+235, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.199696732038421e-241, 1.0867465620068704e-29, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5854771650145305e-12, -3.215974828138791e+168, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.567729826404054e+175, -8.93690090337673e-293, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.786647691690783e-62, 1.2713838263521183e-148, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.286049101190664e+251, 5.520996437965661e-31, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.122510229865988e+277, -2.160149130978355e+189, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.34868718466812e+248, 1.8076681843919394e-58, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.369346151340457e-238, -8.93913877869803e+253, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7567051442249065e+161, 2.0591619698272162e+281, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5088284425402160000000.0, 2.8722502476102646e+53, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.37339424661156e+107, -1.3627868125197132e-258, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.72811605823265e-197, -5.257679309817528e+136, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2037321963476334100000.0, -4.334444575434482e-83, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1362357629722303e-10, 8.138112599706853e+125, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0522579320963834e-227, 7.03647682126203e+283, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4115490252429750700000000.0, -7.243572808417244e-200, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.422581523937156e+53, -1.9730500085406908e+151, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1660107969026568e+82, -1.0285384528173438e+73, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -12.69148477857478, 1.4640418139025454e+57, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.59104376796329e-50, 4.3346232559262523e+307, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.266773923693014e-210, -1.0223624693111945e-148, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3024811609599596e-67, -4.5738517676992575e+275, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.795427965587602e-77, -3.0275784149674323e+277, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.374752784228356e-120, 1.1652833253078598e-76, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5940281914523652e-21, 4.804503910419052e+270, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.482348887675404e+290, -4.840256390646322e+280, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1720616458188355e-306, 6.89548263912568e+277, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -71938545624185250000000000.0, 4.641434568364931e+95, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.657215556048483e-143, -1.4446455570982526e+189, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.347980589760059e-18, -1.2105331991534257e-203, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.722300557896778e-63, 8.124835170493223e+48, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.831006631992258e+153, 97600826430009760.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.37104314302585e-92, 4.949558500715336e+211, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.30505706842854e+192, -4.973662055081278e+230, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9486492409130106e+272, -1.7501952465754734e+116, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6041378729803777e-40, -1.2410966633882862e+52, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.465146009253733e-261, -13731680663.07137, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.143879769798007e+40, -8.612866221710749e-256, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.374377423611305e-278, 6.92158177395611e-103, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.303418465967344e-163, 2.23271311492696e+284, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -15.710102476668496, 3.3300682797432414e+277, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.8773361952639395e-266, -2.4196989742216178e+67, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.62293037080855e+286, 1.361487593832235e-46, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.741920848962316e-181, -2.9665994258616752e+221, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5313430311394715e+146, -1.0350529798156353e+170, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.402584406841605e-283, 2.5228549573341708e+92, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.086454647098892e-22, -8.175103219555941e+60, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.200337629351265e-213, 8.056147901774246e-171, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2593982471997026e+240, -1.1553992862657453e-297, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.992277809139502e+146, 4.90583473977184e+226, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.822399130691615e-130, 2.569739787242412e-136, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.223488282287829e-25, 4.2741980436081615e-72, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4141464986.4699497, 2.0437586056228552e+149, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.249755898533576e-142, -8.885533930807072e+296, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3569975882890927e-253, 2.6100873502062705e-165, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.82692468592324e-242, 1.0885458110794787e+167, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2280968755292667e+57, -3.280294522241525e-235, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.833583293006514e-22, 7.192391285976134e+101, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.538045314840698e+283, -8.180792869985848e-187, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.515553595261556e+285, 5.54336273861678e-98, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.390743044608523e-173, 2.5535220982085182e+129, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3579908442830588e-278, 1.750091112824164e-289, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.700131911061445e+156, 3.360237976403649e-90, 1.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xF8, 0xFF, 0x76, 0x29, 2.0850002332531667e-269, 2.1081726163356714e-11, 0.9999999869575663)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3489070858714404e+133, 7.241222472050714e+161, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3083119944837764e+261, -7.684146457485308e-205, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9002213151098444e+287, -1.0381025648600674e-113, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1251761627497699e+113, 3.917148468797531e-131, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.567768020395787e-309, 9.667785780828927e+199, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3045924304951807e-22, -4.3243003872145055e+49, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.974134876102897e+172, 2.0064311443157822e+197, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0438023757922926e-226, -2.8400838997806606e-141, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0727698257448738e-259, -6.10020461881958e+295, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x08, 0xEA, 0x07, 0x0A, 0xC3, 3.773586052456556e-199, -1.8606766708108606e-08, 1.0000085012149362)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.464665832944734e-289, 4.611184962209694e+235, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2134245402559602e-268, -6.35828051357213e-245, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8320546746547797e-300, 1.3821482150185284e-140, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.818110133013987e+247, 2.5926740625264258e+33, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.660679365226009e-113, -5.319904057883585e+164, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.763080322996657e-163, -8.893066514287798e+287, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.300862683613547e+52, 1.015241168097469e+102, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.792685850844434e-234, -2.4860415073490318e+306, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.1688375212949856e-226, 2.3620432078425634e-209, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.041899017764542e-62, -4.409067774969461e+108, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.000994947915952e-119, -4.3538421280463407e+52, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0262027143684017e+61, -3.735703378090343e+226, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.499609118209237e-273, 2.1369979500874904e+240, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3114528492934288e-141, -1.9180382039792867e-235, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.440973349591833e+83, 2.4418552654305505e+199, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 932546519937821400.0, -71318847569485790000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.66037011481551e-144, -1.3120443101693817e+189, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1345267304549882e+50, -8.680093766795145e+39, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3706599457354014e-48, 6.334047784186725e-178, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.916339232535823e-221, -1.7540132065121256e-56, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.896546324590028e-195, 6.19428907006061e-101, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6563734786761344e-55, 1.3672721407574888e+167, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8686014482944093e+190, -5.147545415604646e+75, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.0752718505650402e+224, -1.1303643224439492e+266, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.146496125761068e-218, -3.558036965354166e+73, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4458721914541587e+239, 454048741157653570.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2996392903977190.0, -1.5548014464478158e+207, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4225762674221504e-52, -1.9941395442755408e+304, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.85709940499565e+124, 1.8843982136776208e+248, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.949850151742164e+112, 3.546564257619971e-81, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.662201956796171e-73, -3.4276690879687263e+100, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.889229655399192e-207, 33268383402374650.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.460606583886686e+195, 1.2670215345133897e+40, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1592535731251588e-151, 2.168332774347975e+238, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.852187909686246e-276, -4.567369677653501e+228, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1015313567758947300000000.0, -2.1785810681563204e+271, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.722355104006644e-17, -1416855894666186900000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.829336041711152e-61, 1.8122692120833648e+229, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.859379763618282e-301, 393497155617365700000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.795933347119144e-07, 3.511215470488209e-209, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6286354038273448e+118, 2.7408978506409725e-220, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 272.5409217125228, -9.099459235506882e-147, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.211083404936536e+207, -6.930276407863687e+274, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.078863973113738e+83, 2.913918945753971e-279, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.623924538663362e-262, 7.921370264923391e-78, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -0.00014645499432518292, 2.3861498129624485e+228, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3609057163653388e-67, -1.9400824432312153e-234, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.084382198283102e+125, -2.183930207364582e+132, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.758817258520313e+197, 4.1715923974915835e+83, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.046701988557564e-271, -9.870348702025599e+200, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5177781723083367000000000000.0, 3.648098400835239e-238, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.448791624993228e-104, -2.3694974115647e+291, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.975304646104164e-122, 1.4803892927758263e+248, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.676397444450412e+199, -4.0526437282883674e+235, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5082584194576614e-69, 3.4494639463905507e+128, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.4197815545996114e+119, 2.3938179095468507e+157, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFE, 0x53, 0xE3, 0x44, 0xA8, 4.068888610287416e-140, 2.4844999776084945e-09, 0.9999992025788247)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.044425516494354e-68, 2.6446961717636124e+194, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0981406444776421e-41, -5.058695612008829e+286, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4432823562517098e+157, -2.4458542541734794e+188, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.761002787001292e-303, 2.0750485936049462e+222, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.116281729334724e-20, 1.199914129474603e-78, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.649814040945425e+213, 2.845369789063426e-138, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.410797392793651e-48, -6.446453716121214e+294, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.159939277393817e+204, 5.001478059292352e+132, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8215766772387306e-156, -3.6139322223167668e+199, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0545084072817003e-65, 1.2086338522725065e+255, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3391367768037698e+228, 4.058537837309081e-258, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9695724095856957e+145, 1.9024310837866152e+90, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0136739018324394e+122, -1.3276058133424863e+166, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1525145245862995e+202, 4.7656721683419886e+185, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xE6, 5.892209044042205e-259, -1.2226937704466252e-14, 1.0000000000072702)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.648389173798543e-32, 2.529501514979553e-41, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.0374436859204935e+261, -1.9880281810238272e+58, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.51053850937406e-33, -5.3136393621956105e+169, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.9080770201393e+283, -3.785520983630196e+225, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.270132348384712e-16, -4.7076359282511344e+116, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.994327576579293e-280, -8.010192922767696e+156, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0275912257634033e-100, 8.258980848090206e+87, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2066857760475265e-12, 4.2680592060623793e-243, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 341009381701422200000000.0, -1.44572256281917e-226, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 3.5653904605457846e+306, 6.206127052198576e-18, 1.0000000000000044)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.344963113023634e-65, -2.8351983048360946e+188, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.38167131772486e-122, 8.192592866329475e+203, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.9896980436364845e-239, 1.5829901646272954e+252, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0288179591337133e+159, 1.2758494210922317e-155, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5669141773943761e+246, -8.025711734945808e-58, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9341714809233416e+277, -6.178523520270872e+50, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.459899321604997e-277, 5.692101949717213e-133, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5793808871205858e+86, -2.769447294551323e-256, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.760252608954722e-49, -1.0736051032893084e+298, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.69478543517139e-267, 1.2773782986198887e-77, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.217131304407742e+36, 2.225406492924889e+183, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1021434.8871227538, 2.2068125848098228e+32, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6590927973394621e-102, 2.8320378364533017e+278, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0085813494824861e-266, 157648940686218200000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.573652960238595e-231, 1.1182540813102066e+300, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.668744997143573e+308, -3.0977887086477407e+274, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 277604142.4772068, -8.286072797154711e-169, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.880273739564567e-283, -5.087191098083407e+178, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 346536852107563850000000000.0, 2.669349614838677e-139, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -814109.3995216457, 7.887728273788044e+282, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.962015207408873e+307, 1.0662939533933717e-21, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.568418565288201e+259, -6.405435659996738e+119, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.116973640413256e+210, 1.4405364606521264e-54, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.849056404055932e-131, -4.862676773462873e+155, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.453668531701325e-163, 1.8700169446657144e-276, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1776213774182858e-144, 3.2080741173090857e+273, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2806564573482635e+70, -537450988068145450000000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xA5, 0x99, 0x56, 1.0890094856467183e+78, -3.660556382230987e-12, 0.9999999993422459)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.166903812750237e-297, 5.733359987272547e+166, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4734694704796768e-306, 4.518671611689426e+53, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1713481356613112e+297, -8.942240291506166e+244, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3214521803790476e-263, 9.23017114521469e-199, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4201123151592168e+75, -2.234941065960208e+284, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.228325570773375e-182, 5.929872781409757e+168, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3197255498042204e+90, 1.5941324287142213e+111, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -125460017209923.14, 2.1383085610068156e+51, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.588781128282321e+86, -3.881541822377894e-106, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.535371590164903e+33, 3.7389789712187796e+238, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.469978078390963e-134, 2.223701503253895e-281, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.846409240108644e+289, 1.9181379797672432e-275, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3066409373819884e+210, -1.0288167364592763e+113, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 24447482936.695248, 5.191388882430872e-95, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.392718874853289e+291, 3.4360395955294543e-150, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.997532904481715e+165, -1.8845520485672134e+284, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7248008721607157e-98, 6.515531645579485e+123, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.58836532879168e-121, -1.0867276889615993e+170, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.200696688386423e+117, -304119462317403200000000000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.173609488775537e-299, 1.7230241573332422e-185, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6960054567066695e+121, -2.8211215396983907e+163, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.144823859983743e+40, 475.9285821798891, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.576825163772717e-268, 5.20176018071629e-203, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.137383109229594e-165, -3.218416696935456e+285, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2226270071213543e+73, -6.5236359575503535e+174, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -30394999145222.586, -1.1544314159178844e+305, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -28.261859239857824, -6.686788181341399e+86, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5813682240627667e-198, -2.9995278228444426e+258, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.330085909547861e-173, -4.2675978227959554e+219, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.576005515136396e-204, -4.807556750791032e+188, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.667400946582782e+80, 1.6414043118875426e+138, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7486294676376424e+262, 2.4065722008176287e+44, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.432530538030162e-192, -3.056302867115872e+83, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7944580145976982e+118, -4.935924664210049e+79, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1305873690463329e+167, -2.0074673378991987e-157, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1706797357153367e-16, 9.458528816077151e-133, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3634179634916794e-64, -9.874667726829506e-219, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.530208985520702e+31, 86768507513984580000000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3841755958149962e+229, -3.6340561418451667e-91, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 299906739168213160000000000000.0, -2.798957254612847e-81, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.999588194129718e+80, -1.2950049213319716e+236, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.858813311103372e-17, -2.697520696140815e-141, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3026632995110906e-204, -2.0135023790646026e+227, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.368925001410899e-89, 8398890001064.345, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.067123379806851e-207, -2.1711259415816768e-45, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.974067932784993e+189, -5.4558545592371595e+40, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1161137265249075e+125, -6.149568601974119e+178, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.159516468986297e+135, 824599583086825100000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.7575138924800424e+213, -1.781653643143643e-223, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.25265589850662e-131, -1.0831591672735211e+300, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.4507759968157116e+82, 6.797741221492099e+136, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.371416716713311e+217, 2.7141166266067005e-95, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0690326170056109e+141, -1.304737211396522e+45, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.64994591765274e+122, -1.2133311596929236e+278, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0929921297121423e-05, 9.409653546049843e+270, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.956121655359251e-21, -1.3870563522128433e+202, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.021585092489661e+278, -2.034786528815021e+182, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.8990413918626985e+114, 6.922211778061765e+216, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8881345800293165e+87, 9.569320741755367e+87, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.351190321721419e-238, 1.7447532601847672e+140, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.02441988774378e+252, 2.687838798669258e+127, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.439136289929148e-218, -2.2479547286476086e+148, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.36407432815125e+278, 6.622068204878801e-131, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.353834622036136e-250, 5.823902764314937e-132, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.039074147353056e-303, -2.076704807810834e-101, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5840631101290568e-127, 4.4908096780437225e+212, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.129845244009898e-283, 8.282460160421431e+301, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4555469383382755e+105, 1.8904017042372885e+46, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.292468160203124e-281, -6.326646479797053e+244, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.416855292067495e+65, -8.899460497985297e+53, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0188633306304e+215, 4.898674492243746e-273, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 349294140628.4876, 2.6686374893756735e+252, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1435037904452734e+128, -11931321053120640.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.872619300420975e-268, -1.8258332362440646e-173, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6740652684300184e+154, 6.974297338547231e+128, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.212576030246031e-26, -8.262909934013751e+220, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.284557048763875e+238, 2.0059981457963315e-92, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.626307095938642e-188, 7.314825417828338e-225, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.633711758383233e+84, 5.308017693951758e+153, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3199242465479543e+200, 7.940382475860655e+52, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.640530363477175e-280, 1.3154971351024681e-83, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8316877765833875e+216, -6.134951784384233e+189, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9856946805311478e-05, -4.840751338775323e-280, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.504983116050826e+297, 4.8515109994069625e-58, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.345101434098484e+144, -3.5219858880726904e+141, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.07464004535825e+118, 5.060108365470989e+180, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.051448428691898e+233, -2.945907136252213e-220, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0719546304332057e-63, 1.780967329381043e+43, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.866095644906093e-111, 2.6052226443839763e+258, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.688382185321517e-93, 3.879596114320858e+300, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 251376742820.436, 9.764735271140402e-85, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.9588375714521975e+121, -1.6282603454230028e+240, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.302466892981476e-244, 7.929089897500867e+290, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.158511815812665e-228, -7.998121432965872e-267, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.415852231694953e+185, 2.288781816840236e-64, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.123816175047081e+68, -5.2932361363921195e+180, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.955381933699201e-100, -3.3771862763036284e+271, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0958865848882082e+291, -5.5168724042801696e+35, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1456334042263753e-118, -5.640503434319114e+252, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6930308149315822e+287, -3.800861941096977e-40, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.06946710511879e-216, -5.249752660326383e+121, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0050799655636518e-306, -1.2004257576518268e+160, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.411673917276801e+259, 53117668075555980000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4488907492030813e+268, 7.121027751285789e-104, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0259527893911696e+75, 1.5491207060160558e+257, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.833083496509386e-48, -1427.6380917170513, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2278097933675545e+148, 6.327980113184617e+208, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.997630732043029e-86, -3.7671388243466175e+106, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.615445709145264e-110, 5.272224226003989e-277, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.765909636859011e-64, -8.337855921397309e+266, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6534685862756034e+144, -3.088004153760784e-172, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.319797896298723e+153, -4.32308682997584e+167, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0354106089299732e-247, 3.39153298154461e+137, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.436298285760775e-212, 5.1806969277614545e+168, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5236360293937854e-307, 1.054200056928556e+262, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4724672685841851e+221, -8.28832165170437e+306, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.349204377834258e+273, 4.78289402401061e+201, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 22.937273121042256, -7.650189733409957e-134, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.077258724578017e-185, -5.984239303517402e+116, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.347678328492323e+60, 1.1495611267690483e-29, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1385371033264177e+126, 1.532267375227944e-234, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0041140842043397e+236, -5.716439367701364e+162, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.250510975567551e-304, -1.2214338063051552e+60, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.699479361729638e-213, 4.4168956770424426e-236, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.275522302077468e+46, 3469680140056860600000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.424561281398904e+211, 1.1691864947368923e+76, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3372704695219791e+202, -1.3134904440614802e-278, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.4094296870262754e+249, 3.6757115779000075e+305, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.88665754361104e-241, -6.456738556048792e-55, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.285861208574577e+226, -4.267442573046074e+83, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.981253965119045e+89, -6.304085830504541e+143, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.890746973030668e-196, -8.636693236998317e-190, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.624642122011545e+44, 1.5847914405593942e+171, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6214202165460683e-92, -1.4804903707956055e+181, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.563735365237676e-34, -3.5129025916620266e-53, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.215205416246002e+71, -3.2098807917060166e-193, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.851926943455838e-85, 3.2310998257727965e+35, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.841132323964423e-272, -4.2303090570271034e-111, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7690466274879682e-168, 6.895166700794865e+130, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9333631113873775e-293, -9.41671843874436e-107, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9173911051376118e+33, 9.463454142408593e+258, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.935056987398977e+94, -2.4993489918525857e-199, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6251223188150638e-213, -1.4185409274327767e-208, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1170570687873363e+150, -1.6656319387568169e+190, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8853429415029793e-122, -1.6313446179075538e+87, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.036980575705723e+253, -8.296049784736813e-128, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.599596995072922e+161, 2.099703554014475e+185, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6326929293098498e-192, -1.3086253530995215e-181, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.487107252478416e-70, -3.493917941007785e-84, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.761881568557935e-294, 1.9333399593545645e+124, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.786035290678824e-95, 8.098050373812099e+135, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4029996321100122e-10, 8.824651624971665e+89, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0775474801238841e+268, 7.410929707856392e+306, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.729715636260193e+227, 1.1593092471983704e+162, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.832122876384638e+240, 1.8866363676494677e+85, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.459569419396052e+120, -2.2226900032217347e-246, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.789526311434379e+286, 3.1589084046611947e+140, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.648432287660938e-157, -9.44876160790319e+209, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1616886867482188e+282, 1.4487338394869064e+60, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0715732120548446e-84, 1.1820191469228918e+245, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8282806090052155e+254, 3.861271569979353e+47, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.052593581155229e-307, 4.252361659843541e+241, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.745665880172422e+163, -1.3754361649704147e+307, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.66374237916455e+160, -3.1933042538945703e+65, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.30385618746975e+39, 2.7749011712170495e+306, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.932780532163916e-15, -2.6254114148489723e-257, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8495848095544355e-200, -1.619189617207436e+270, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.782772536448257e-289, 8.633735861443739e+211, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1622255064177325e-159, 1.9656091776557766e+174, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.5933196179541e+184, -3.694188027691732e-47, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.508167854548124e+99, 1.223269117427926e-52, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.437649803251071e+140, -3.0273923549906524e+133, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.309346825330509e-251, 7.299325592006921e-81, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.727883676504572e-159, 7.037510648115566e+230, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.888131779621705e-204, 737490462866.2834, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1532656956674639e+173, 2.099445290895379e+288, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3894912804227593e+255, 2.5830191382402953e+210, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.056471548001915e+260, -1.0097495616377236e+62, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.946233411396323e+287, 2.013002033890832e+142, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.425547560386075e-88, -1.455666719287237e-292, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2924852442821467e-290, -1.870251435850037e-23, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2018608739526537e-102, 3.2166883163038424e-284, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.373459221943488e+307, 3.915756290809152e+213, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5186933839156342e-52, -9.83422355721067e-262, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.114055561628191e+179, 2.2374948947542292e+234, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8985143928565747e-235, -9.795994313943218e+153, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.9953267056608425e+202, 1.0214212791708698e+269, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0751029263910276e+42, 1.8121267178474162e+229, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6923293602917176e+67, -7.620903606302238e+189, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.165423212426443e-174, 6.83401091809421e+62, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9333876681593116e+159, 5.749821681640889, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0762009132196899e-34, 1.5845707884242872e+139, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.866755017620883e+79, 19375467878381567000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.395321237995779e+77, 7.325437232303962e+170, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.622316991862409e+84, -6.743023949882733e+133, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9648610754653478e+151, -3.873031989530275e-30, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3120590.478185076, -7.131599891330325e-168, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.141137225610342e+146, -2.2835974563042337e+213, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.2865866011519816e+160, -2.6156003540474996e+256, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.064880870735623e+165, -1.2827825198817279e+207, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.491491718131796e+67, -9.840812010970887e+151, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.621658421902795e-171, 5.1502051386866244e-301, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.014277902816012e+248, -7.913614909455382e+148, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.292582231742027e-28, -4.2332957609996805e+42, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.598729305208602e+248, -1.8894733647931827e+245, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.859930148894858e-239, 2.7095552473573956e+152, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.560803916581699e-308, 9.79824586843443e+88, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.00019628996370999008, -3.3097691482196898e+62, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.861301159966881e-92, 7.777788609463208e+173, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 41445059984780.29, 7.704942071286423e+238, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.674268770891494e-72, -8.701006755384543e-232, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.461981363634072e-159, -1.478740958038339e+124, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.897241858370844e-215, 5.971994248911906e+174, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.009840737822442e+210, 2.73232345585444e+192, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3843549300658593e+198, 5.626560524729492e+77, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5001056490859795e+169, 1.2307386053971064e+196, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.535314085726726e+73, 3.3688593655381213e+109, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.54135944648051e-120, 4.199307143146216e+164, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.298186276711945e-176, -2.4050462009914626e+198, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0xA7, 0xB2, 0x65, 1.7448129783004788e-121, -8.776322116997523e-12, 1.0000000024403104)
	assertULP(Math.pow, 0x3F, 0xF2, 0xA6, 0x88, 0xDF, 0x89, 0xF0, 0xB2, 1.341515492577906e+163, 0.0004080922189559478, 1.1656578762040621)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4164937964911802e+179, -5.88963622318328e+187, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.8210355415445706e-226, 4.2560962908277496e+191, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.4207643223443106e+77, 9.015116681980665e-288, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0401735527097009e+74, 1.8033018297861559e+117, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7699973239200558e-33, 9.166723644780449e+285, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6057018821077377e-303, -1.165336464407839e+237, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.008040732726079e-182, -8.221681218993467e-178, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0417886241262633e-286, 4.1561339445279974e+126, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.389219514213161e-122, -4.0366337260927846e-103, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8141128401556064e-124, -4.712923253849022e+158, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0611428811140922e+245, -4.529303156664123e+237, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -61248677124435.1, -8.711637681447103e+189, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.114114355997886e+155, 1.6427564481423927e+265, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.7291685316546026e-298, 532707225258.9678, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6524390016815365e-151, -1.1012853291057862e-307, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.540734154420319e-219, -8.739013643367772e+228, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9384890407110572e-112, -8.17191693077414e-180, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5817640452695753e+307, 1.6378605606791283e+212, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.901954874797316e-245, -7.978841954522384e-260, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8096565401483943e+287, 1.8859595895532165e+265, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.820563557112145e+69, -1.5579243465134246e-114, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0585780540445715e+167, -2.259416417957438e+237, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.349765041794568e+98, 3.168019587633812e+231, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.21517086162038e+208, 2.0022094123300348e-285, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.136670374717455e-71, 2.9097712582710984e-264, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5316970125999077e+303, -2.629569803823467e+134, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2155251088285107e+60, 6.736044882787828e+259, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0422444354287768e-199, -1.7677791004322636e+231, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.277617526826016e+223, -8.609672766665589e+98, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5247672841702286e+283, 3.7543721368746424e+166, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3112270505205507e-24, -2.171973245116364e+152, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6757300287157495e-283, 1.5573084507756468e+286, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.515366699183362e-218, -8.486145721988878e-54, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6959065332661285e+308, 8.538512491603886e+223, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 185450.4419869834, -9.048122584900413e+126, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8165975099304648e+182, 1.3816012211947594e+184, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8266897096437274e-248, -1.5692903748945218e+188, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.408147680138082e+115, 4.860127177620866e+80, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.193911592949531e+166, -4.2612973847791725e+105, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.896540130604867e+290, -9.668980368565582e+140, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.0801355643215154e+150, 2.73100112658091e+108, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.512340330190009e+112, -2.071893933994579e+254, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2362060861128935e+69, -2.7072476254058524e+135, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.758172848602722e-37, -2.410635845316866e+76, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4520578426302362e-214, -1.0750218243978617e+98, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.419981583564267e+233, 3.821953784323032e-292, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 338335141031984060.0, -7.799065509942962e-184, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6570130343646276e-303, -7.522415471732073e+261, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0599546280394002e-16, -1.6038648508325077e+158, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5437.869185779462, 3.9013737192062335e+194, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3597891329669667e+72, -2.14400857805007e-124, 1.0)
	assertULP(Math.pow, 0x3F, 0xF7, 0xE8, 0x46, 0xD5, 0x3F, 0x9D, 0xB1, 2.4294575613612848e-178, -0.0009819644104363168, 1.4942081766147164)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.318806544354087e+181, -1.153327637589766e-92, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8650226325978783e-175, -3.0953354035406924e+217, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.843378225847464e+265, -3.828329929376412e+212, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4455833207846671e-152, 1.7868080337794566e+210, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.617207482855781e-260, 1.6460799971218965e+49, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.610095251250951e-133, 1.9945558407152007e+95, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.363305794541756e-192, -1.5799594949158795e+273, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2327648298523324e+274, 3.1406280921529593e+175, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6975814447900298e+225, -5.899440652743963e-58, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.0591475635147326e+232, -7.35830257781332e+186, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.638586362254214e+206, 1.7871487981682705e+270, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7531215465338719e+261, -1.4960072299372038e-282, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.622200148924081e-138, 1.0159740048941292e+99, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1832836690134178e+158, 7.034336878730001e-107, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.940192171254769e+35, 9.503066555969198e+232, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.801650432443668e+243, -1.5342220005028177e+186, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2643320232201518e+254, -2.113169739554805e+141, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9276002184490874e-195, -3.538286192535863e+32, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4607142755804827e+123, 8.054091031515971e-260, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6822028079384738e+165, -8.155834838023791e+192, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.243017182321388e-105, -2.9339776863355377e+41, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8070577269554993e+66, 1.7331816276968065e+115, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.126928152380643e-46, -6.07616869813162e+228, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.574042283733985e-82, 4.2906376668977035e-104, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.7887031081188e-248, 2.6798015957172024e-123, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.327230624082373e-69, -1.850311595767684e+83, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.440273696938325e-302, 3.381248601367619e-293, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.892473529091416e+205, -8.054259319655252e-158, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.983267749106935e-291, 1.4172627045298588e+127, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.481950513287478e-68, 1.6727447045784818e-166, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.395173476376691e-145, 4.4904450646936e+48, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.876285612279508e-166, 1.4306369909372537e+115, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.38113734212171e+84, 1.714515537700138e-97, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 292774814573046530000.0, -3.9672697580515973e+183, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.13774195386661e+130, -5.516315270085884e+181, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6974701941929715e-308, 1.75174478806584e+224, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7955472.878884816, -3.7275546022349834e+124, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0710359947691654e+64, 7.955319903023926e+261, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.751260620828104e+154, 7.357870101949934e-230, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -37286673923206016000000000.0, 1.0779054730951705e+256, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0771156706985776e+77, -101206295416802610000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5921544647605655e-236, -12398016449552408000000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7000421295354116e-79, -8.766059842575693e+153, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9229352823885474e+296, -1.1961141460751432e+191, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7609496848504301e-124, 5.388491663462789e+277, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.000906752140663e-176, -1.1828962616909874e-237, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.699840689239077e-204, -3.5811874504062724e-81, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.010638200744292e+301, -1.7014953576946459e+248, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -375366088093787000000000000000.0, -2.889501162554589e+54, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3644464516101768e+120, -4.7510388458710484e+89, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.37881085342297e+33, -1.2712048391108192e-93, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1526826613676575e-127, 3.5465799711659972e+280, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.395750194244544e+74, -1.0553200272682517e-218, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.764694701875943e+296, -1.0680004111081331e+214, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3520796753817176e-78, 6.619107051940331e+205, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2471158060390623e+77, 1.74871872998025e+187, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.881461738630063e-273, -9.391040414063538e+279, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.465421947645964e+242, -2.2184848024280967e-20, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8997773856312782e-120, 6.36318415123811e-209, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1100372232783415e-201, -1.947235981972272e+184, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.569086461740714e+273, 3.6149343890125973e-199, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1614031114849856e+62, -1.6788178922268393e-160, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3029476754937555e-197, 6.8320975451658e+250, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.386432464869608e+264, 3.0967411390147424e+139, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1184274226838976e+148, -4.3224676284650966e+200, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.589675760857485e-16, 6.767455098530062e+77, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4219310089328254e+152, 6.7165129989992316e-295, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.422567935440605e-221, 7.228587261523985e+166, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.966323697510323e-257, 7.052133119493705e+224, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1763038256688958e-294, -1.2811211315168002e-52, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2924491945046043e-43, -9.152636411060847e+152, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.726216850365188e-294, -4.324740197309285e+286, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.1325408338183206e+283, -14816396866578000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.551748508898361e-167, 2.1660961826856816e+155, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.89783392025394e-98, 4.971873928697458e+117, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8298474369094812e+91, -6.934056836873059e-164, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.183202986432601e-117, 1.87273933709957e+304, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.346244253522627e+32, -6.501023477335174e+165, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.106140762488696e-192, 1.1485752761713246e+45, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.717230997375092e-238, -5.453426642535506e-63, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.264226104920552e-251, 6.441102980836625, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2342246003217518e+209, 4.997620835130177e+215, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.563345886555182e-167, -2.0300692684537857e-215, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.697648323187311e-232, 5.915152911970514e+131, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.065687167793373e-24, 1.5644316159793762e+247, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.5529125864504564e-180, -2.048508454021003e-258, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.997641258855572e+283, -1.7832205453417133e-295, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.580168164793973e+142, -2.673727187629679e-64, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2567175831338484e-232, 4.9224601298930606e-208, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.2378798992274966e-276, -2.50596987933798e+79, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7200663082594836e+96, 1.103368714905637e-301, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.162034262140085e-199, -4.071643445575988e-154, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3314645795394885e-164, 5.815667152996646e+208, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.667732485976059e-38, -6.759836926695167e-216, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.345416877975526e-69, -5.357458653838788e+92, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3395507602904024e+197, 4.4515774237752013e+43, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.331286530571412e+59, -2.208381921680996e-47, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.645121454576595e-169, 3852585694440961000000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3316610709713533e-82, -2.4618566343239222e+173, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 2.1119993239633082e+71, 2.8428923338067155e-17, 1.0000000000000047)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0xA4, 0x55, 0x9F, 0x52, 0x72, 28341191103766.04, 5.0591628608475955e-06, 1.000156721556007)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 68719.97633137969, -6.974874878196917e-42, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.799161748894351e+302, 1.752322815267328e+98, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.7392798039809655e+82, 6.57350883315921e+301, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0365344255998768e-67, -1.383376881711011e-131, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6197706744965886e-250, 1.4274965930304204e+57, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.58163872244911e-301, -3.388286576280587e+57, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.030866691175895e-220, -7.982013947556608e+211, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1856032620274184e-290, -5.351453942812053e+301, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.8875287382154813e-30, 3.234243444750099e+303, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0121716689089997e+209, -1.5622411689802022e+125, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 982134167652552.1, -4.640155068502794e-201, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8161784616614652e+280, -1.1084100524941261e+128, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8488417253096444e+191, 6.502087015775922e-95, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.4783482007750063e-17, -8.082013905193932e+278, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1103167466455236e+144, 6.486537708348332e-298, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.609398923144323e-05, 5.368895655742745e+201, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.789606557618318e+128, 2.6562307213323946e+196, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2955882984341125e+183, -2.5807860512953757e+206, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 415179.9365956692, 2.4327284927175733e+182, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.127265275806198e+133, 5.968693994651186e-92, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.070923167319605e-203, -6.8375886206111e-303, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0481801121098546e-89, 1.1700234133751346e+32, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.609876863108156e+279, -4.52366677550376e+168, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2680556028394.1035, -2.0066735592865537e-55, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.584284136725756e+111, 1.7002218892561897e+280, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.974455375943542e+223, 1.2833463060956569e+76, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.243726933088707e-245, 3.452337459809571e-232, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0019747591986203e+143, 4.757226369502141e-294, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.673418786390208e-58, -1.7720097306215722e+264, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.000466256044086e+55, 1.8550937002393304e-153, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0874905988995244e-285, -511937719714.8417, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.29873829502628e-257, -1.9171648338949665e+201, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.212811930545494e+283, 7.37576596394277e+161, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9938809226106835e+102, 3936966727508986000000000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.335051484852536e-05, -8.630366934645629e-298, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.347027353036963e-260, -9.931029572795339e-287, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.773544134633981e-134, 4.1363567114922374e+263, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.280753059284917e+70, -1.6744456006037066e+47, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5448252042829045e-138, 6877584237948944000000000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1884374752912235000000.0, -2.860112518321358e-175, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.456088257009695e-284, -1.8466963899009804e+268, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0994374248551147e-152, 2.3268882261239696e+151, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.43228207274015e-172, 149229937883045200.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 28828771.764365982, 3.0358986181277513e-159, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.120183481957571e+177, -5.98816207416543e-48, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.010656389844322e+140, 2.6800421215318796e+294, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9153864936753383e+203, 4.443447812848666e+205, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.037784043739775e-124, -5.883327900691878e+94, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7988967979277743e+178, 102593056493458440000000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.207055825943732e+141, -1.954988972887246e+248, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.074625452452553e+119, -2.2328120013171373e+44, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.170249095910857e+266, -6.385917038296112e+149, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0463400896130791e-303, -4.682108546462174e+277, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.225637434210284e-171, -2.5429856307875526e+136, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.69748805795258e-209, -4.6513054281452015e+97, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.166618081236109e-84, -3.292870704133766e+245, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3508219132040645e-51, -6.001319778773197e-55, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6729122740221161e-205, 2.1034933999981644e+204, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2773127612428348e+235, 1.5168438739708105e-162, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.676075695215004e+199, 2.6308941063473583e+94, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4286825104826241e+183, -1.2771370724444577e+144, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.005129061370272e+190, -2.211567054097907e+103, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5400137270170005e+270, -8.762772317583471e+123, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1929380325334625e+92, -1.7501473262458105e+81, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.600022916650357e-33, 2252148827252408300000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.8956491964053146e-39, 4.1641756551775306e+245, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.913093807343856e+109, 1.2133702952247034e+110, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.09603181764746e+64, -1.0501309887856572e+133, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.897394784992166e+175, 2.0501446490851727e+239, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5025983391165937e+198, -2.1040999351962097e+205, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4743587642950513e+79, 9.582788387229891e+264, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4669414679208582e-291, 1.0127309760774693e-63, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.976976823150036e-304, 7.559877768663467e+217, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.113821421410025e+200, -3.5617534433136517e+288, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.21082476952129e-292, -6.931975153695532e+163, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.7510128501927044e+236, 6.595825839660899e+184, Infinity)
	assertULP(Math.pow, 0x3F, 0xE3, 0x39, 0x1C, 0xCE, 0xE9, 0xF8, 0xB7, 1.5206065217205668e-292, 0.0007584407409660556, 0.6007217446601975)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9787555425203953e-131, 3.487494670443892e+131, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.995548642304152e+31, 3.856810078796682e-136, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.903133703591232e-131, 6.383964925686221e+296, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.626846673493575e+270, -27856911995496732000000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x04, 0x1D, 1.5156087721265666e+228, 4.448514104097656e-16, 1.0000000000002338)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.035773982461118e+292, 3.0607844292884724e+156, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0422879828450889e-86, -6.856605963727112e-156, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.444072272389573e+119, -7.954741189362017e-83, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.787364634050642e-204, -1139935252248925100000000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3696429026795189e-250, 4.831622932536197e-279, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.590900029034013e-288, 1.781261537790053e-295, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.098587672561463e+219, 1.0504206078197473e+254, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.3264500532254213e+275, 8825591728527933000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0598858993743392e-94, -3.8178239591434334e+226, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.573036878842051e-153, 1.8792311002364634e+190, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6077508528139182e-24, -1.1423610887203272e-307, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6903577984987082e+262, -2.8067083608388646e+154, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.950769811138551e+130, 3.0904497263148446e-185, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2130319387795314e-177, -2.480973417289691e+62, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.4865840083604415e-154, -1.4040790615488462e+228, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -0.0009399212357357488, 1.330222978615871e+128, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 413.2031813555342, -1.912310229221739e-99, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.092746263127553e-214, 9.357216671439753e+249, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7378845239921494e+147, 3.0815294173879925e+151, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.662311495719075e+261, 4.932894177359415e-166, 1.0)
	assertULP(Math.pow, 0x40, 0x0A, 0x54, 0x7F, 0x0F, 0xD3, 0xE1, 0x0A, 6.364934513285744e-113, -0.0046112247710820495, 3.2912579762015683)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.713690391480436e-241, 3.6278933824951543e-292, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.217643293692441e-153, 3.570765629519234e+65, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.1183134091626968e-285, -4.882114200545539e+260, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.713715437210906e+88, 4.2526485105838856e+187, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.31624424808946e+227, -8.397158791437108e+282, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.04632064757126e+79, -7.837450018059889e+60, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.223090491765767e-286, 3.370932415838088e-305, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4122861650304208e-149, -1.6507207647551784e+158, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3944261936765245e-106, -4.7507229421067674e+92, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5795611222202771e+296, 2.2231906699315584e+264, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.356922136453934e-08, -6.5735998558346635e+289, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.438185441836781e-283, -2096170189733908200000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2706605408871806e-161, -5.131377036111092e+179, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.059227418114222e+82, 25.395925731354552, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3276256630856352e+238, 3.634273601061756e-305, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9667464392771188e+130, -4.539556236611344e-74, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9099281840140105e+204, -9.278814357359386e+211, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.50995886434914e-280, -2.8937797356544037e+67, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.963819013718034e+286, 2.6822256995048485e+115, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7228338257543885e-156, -1.6247147424500128e+308, Infinity)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xF5, 0x3A, 0x68, 0x64, 0x2E, 5.007653513135363e+203, -1.0951039576804849e-08, 0.9999948635842253)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.769245667878406e-07, 5.544604239496379e+297, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2683335980426237e+179, -1.4157962767878034e+138, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3417619977924365e-119, 1.5268671503283503e+212, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.864827388491119e+36, -2.2215319825932295e-261, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1415385187101772e-88, -1.384393411233256e+228, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.515380873680893e+100, -2.3329524998050893e+253, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.305163037563378e-19, -7.706163898975541e-153, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.852816671291131e-162, 1.0560302250904128e+307, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.165651886438866e-252, -3.5265527016896796e-183, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1109086468762876e-268, 2.114921636554896e-99, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.349408633080271e-109, 6.383339890223698e+276, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.844732401947667e+68, 2.1545132879889796e+250, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.727021773336957e-49, -3.0290082128313743e-162, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.805804017719226e-58, -1.3286033583826513e-281, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.95522856007534e+243, -5.255304752028966e-299, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.785874011404252e-183, -1.7698568027787544e+126, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.912379041269497e-308, 6.026489814148136e+280, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.600503787979713e-95, 9.475175732675674e-166, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.3531161112263645e+208, -4.953324101871154e+209, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.567868901555355e+117, 5.519994586546136e+97, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6383003611898517e+233, -3.7431442852456383e-246, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.385509199785176e+176, -1.3864242441849507e-210, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.53475514190479e-103, -3.905977722220748e+50, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.289932102778717e+241, -1.4865021346384222e+290, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -0.0010179062900625383, -1.153643299640736e+141, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.413360050156928e+61, 2.4771073137330623e+305, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2376851788644354e-41, 1.2529857023105017e+48, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.987270359069515e-270, -3.1010864659828916e+174, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0998727374442397e+160, -3.408529846276479e-242, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2254989739073414e-81, 4.1203110584767503e+98, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.179793968423262e-115, 5.2829058220791265e+287, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1908848007467825e-184, -2.88208327761872e-158, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -64659148024681.52, 2.6613243625047375e+197, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8158513528349715e+199, -7.024030039293499e-239, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.790995875586627e-274, -2.184819299640375e+112, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.363785784558579e-163, -72229819874317150000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.704376629875695e+143, 6.627654025124196e+171, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6699716239710444e-270, 3.0798034502640925e+226, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7038265371630473e-254, 5.646502094648064e-162, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.171227772636569e-09, 5.6539618946724866e+200, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.152234926829607e-181, 8.024482972580102e+266, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.7906864811708654e+189, -3.0721612928617942e-30, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x09, 0x1F, 7.645148881955785e+144, 1.5539434966804498e-15, 1.0000000000005185)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1759866517216082e+278, 1.5564255582215797e+203, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9451831304158954e-133, -2.5607423096480834e+41, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1933628896143335e+147, 1.4785875962934691e-64, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.225460306835006e-184, -1.4190309668560897e+149, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.95148192293362e+299, -5.1796867227726013e+210, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.400084388328899e-215, -1.388752643264876e-95, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.182592852032767e-206, 2.6262590118258573e+171, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.4430139758619704e-220, 10348954805108417000000.0, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6412690558261743e+66, 6.671066477506668e+250, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.742495226659148e-282, -1.4870186843512016e+97, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.926554500424287e+137, -1.68783773308966e-86, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.818941873062966e-47, 3.2707306215334424e+50, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.2595440772186044e-66, -1.5037073999240316e+97, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.533211076544906e-195, -1.9251589267509923e-140, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2045090736344927e-32, 1.4541118632706596e+63, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.517968762813373e-261, -2.8780211097987286e+38, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.3047185634206796e+231, 8.661457201577887e-128, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9102038707843355e+126, 8.032032979146577e+147, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9424000451916214e-246, -1.293448797869244e+60, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.477050409964681e-80, -2.750441899551402e+66, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8358873697418787e-145, -1.858239562019228e+272, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.436765440799307e+153, 7852726.260026713, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.376362018729922e-228, 6.050531344422604e+158, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.387425769478648e+136, 5.615648110830202e+110, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.646811200379864e-171, 6.2738992003635175e+302, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.404928263251172e+219, -5.531351455313589e+117, 0.0)
	assertULP(Math.pow, 0x40, 0x52, 0x18, 0xB0, 0xEA, 0x39, 0x83, 0x81, 15694105.67029489, 0.2584382221338655, 72.3857980310113)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.808077992564474e+275, 2.6701603635529204e+73, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.204018890328181e+304, 7.522869795805445e+296, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.00020620883317356762, -6.448610782429057e-81, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.2979695544512485e-250, 4.1057231429164485e+223, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 13018421355618239000000000000.0, -9.379510504768722e-153, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.116107521874547e-31, -4.273035366893934e+109, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 129118.5310475976, 2.03947074558811e-97, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3603182038545018e-99, -5.236974366154348e+291, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.488961374834705e-27, -2.216307750978883e-227, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.36507381748686e+221, 2.3434070866585753e+166, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.722895750558392e-41, -3.122522690956447e-121, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.6455271959776186e-171, -8.154597288084082e+51, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.768036511469968e-37, 2.975364496708653e+144, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -9.408974256172895e+40, 1.6243644006467344e+37, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.404371001897651e-147, -1.3220621158396204e+241, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6670073033466774e+235, 2.4257541912443364e+285, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0885165524574877e+180, 2.970026802397819e+278, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.166028588030953e+274, 1.885551184069804e+299, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.249959924354213e+52, 4.79805945928593e+299, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.611692447046965e+172, 2.444909367780545e+115, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9184737770136174e-265, -2.496880505636195e-294, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4269381097692207e+250, -3.439837843676446e+199, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 46491260931193166000000.0, -2.4692474733548678e-27, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.756703567666146e-170, 1.0273582350372943e+270, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.8756237490749554e+156, 5.702132618161953e-266, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.113690142674034e-21, -4.739980147492312e+59, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1775814512300535e-286, -4.1418657849943296e+116, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0295332431996481e-135, -7568083046897530000.0, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.781677331972179e-126, 3.9142537552652694e+37, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.432117639634926e+138, -2.3799234736460603e-181, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.261880425630565e+279, -2.1188883233414626e+182, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -8.618738824046905e+54, -2.2206586364082517e+123, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.071555820064908e+32, 233790785170.73676, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.3037881721145378e+108, -1.5803416357295875e+215, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.438276252264566e+208, 4494761613295559000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3193217085549376e+262, -6.685219107726095e-109, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0171825453365257e+192, -1.0176439823167757e+48, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.002918500839642e-148, -5.09476747298955e+132, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.593318780114737e+261, -4.437600848005447e+254, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.493325165263928e-84, 4.6899686570778075e+95, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.0172966813167107e-204, -1.64484859658217e-282, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.637667653797883e+170, 9.374265811050018e+180, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.5478723106482856e-244, 3.7708192404583137e+34, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2307245884869796e+204, 4.597711282214796e+50, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.204171887450815e-78, 1.4797257917146593e+226, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0150641121765465e+301, 1.6623116060691303e-158, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1042209001321063500000.0, -1.7838595035055962e+298, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4865887721068424e+68, 6.9363173302939575e-233, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.94128359075499e-149, -1.178071744828076e-72, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2695255838434362e+112, -2.163000812686666e+146, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.02794875195652e+149, 3.039790719902583e+160, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0.04596693881381281, 1.2138157756703923e+117, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.501643344000276e-150, 8.265562652126496e+209, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.5672071634412445e+185, -1.6332587872645418e+118, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 7.423815068446235e-09, -1.3522761113472877e-15, 1.0000000000000253)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9351189731204592e-226, 4.165601757765345e+77, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.589570660607756e-102, -1.1864799581829121e-130, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.356303973494416e+130, -8.19522370488284e+302, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.068458865289404e+106, -8.325961422563263e+285, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.492929484398833e-67, -2.892917374939831e+289, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.2010389193474112e+257, -4.96013295642326e+227, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7663721650080335e-57, -4.172190285607223e+76, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.027064483554752e-97, -3.2009407553736663e-105, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.132418692730331e-23, 1.5763137554515898e+84, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.9805317244633696e+170, 8.079458287211764e-214, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.647866778985592e+123, 2.2577212552996816e+157, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.6049551556876787e+193, 2.7701806034710017e+164, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.4204721810170222e-229, 4.531846166702406e+171, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.3180126400282994e-136, 3.882691029730446e+91, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.507753206194036e+36, -4.0805035994597746e+204, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3438338703743294e-80, -1.0364929637910788e+183, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.161413725277022e+227, 1.7761884083536016e+116, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.986041756126157e+282, 8.185498792915536e+116, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.984610778283845e-36, 4.061632866214121e+306, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1783331281354155e+54, 1.7510712630242773e-207, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.0192791216652411e+219, 4.2496938509586545e+251, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.549374039264663e-138, 2.1329791913489252e+287, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2308561679420529e-119, -3.722475119754857e+148, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1994530542227918e+261, 2.031890968825528e-268, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.93354971511354e+145, -2.7990072834359396e+43, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.502797614884668e-108, 3.2453581579429905e-178, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.799031981742729e-46, 2.1052302518178143e-157, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6329038896377273e-289, 7.871941437105953e-154, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.324817370213678e+163, 6.05062989689194e-201, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8710649237628429e-84, 8.73855633124177e-112, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.124285282156019e+74, -1.176552396102965e-35, 1.0)
	assertULP(Math.pow, 0x66, 0xFB, 0x90, 0xDD, 0xA5, 0x82, 0xEF, 0x63, 159763615957808030000000000.0, 7.177633826178963, 1.1994142528566016e+188)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1884269611392617e-51, 1.624260866916598e+250, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.256441913991135e+51, 1.4868992327990912e+299, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1439871012305886500000000000.0, 1.6845386593231343e+93, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.74753301254568e-114, 1.8487628512636987e-177, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.891591341806017e+89, 6.611130399611358e-148, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.404039853428222e+138, -4.607974322925718e+185, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1686223410755454e-243, 9.655401049824984e+57, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 38.8929302839018, -5.891064645999307e+294, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4064942420325516e-110, 2.3523745223047495e-266, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.911168650134664e+136, -2.936175047468356e+59, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.33706545136457e+265, 1.548858471327579e-300, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -41378.831756103056, 2.488591835501493e+191, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.41748738035691e-237, 3.9014864266760127e+257, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.523322018525187e-118, -7.83452099927274e-101, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.626693163045681e-24, 2.049898653854195e+207, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0723304424608593e+226, -5.50077836889621e+282, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3042088520777469e-166, 1.8494105520062657e+105, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.3357704532700016e-269, -65023891636650550000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2715387140262925e+255, 8.467367174667457e+183, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9971634516400263e-20, 4.096196408997481e-219, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.587722821835502e-227, 2.82920169887589e-229, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.842965770943813e+146, -7.006716672329124e-54, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.9459684132013746e-68, -1.658006461539289e+271, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.481403110288185e-153, -5.740171027960415e+41, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.700707002078088e-69, 12985168281813448000000.0, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4627534970878354e+158, -7.032732114228013e-53, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.437441356450329e-143, -7.65504430220843e+76, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.205265588726836e+95, 2.613594096855534e-276, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.082893190866334e-206, -1.4001668064732273e+61, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.951456489268418e+225, -9.39909859252648e-88, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 21.800845772904324, 8446996552460081000000000000.0, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.534648475438575e-203, -2.2259154388687648e-294, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.341181484920933e+134, 6.198098486762764e+115, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.792850087081107e-268, 2.632176832621765e+160, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7065627419.183924, -3.168125030731122e+75, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.631161977255699e+41, 5.2403905737384215e-260, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9235998094698788e+77, 4.040613136658114e-294, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.931753349951373e+257, 1.743784592296182e+258, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.156177638322842e+212, 1.1165349169959624e+140, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.967212782163101e+75, -1.1899011743782091e-35, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1315781552943267e-153, 4.36647095682052e-146, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.848644692361859e+125, -1.1852455974894495e-37, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6070878329551174e-135, -1.390554591542273e-54, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.3803290494043636e+306, -9.867214123484947e+277, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.7942231583665905e-300, -1.2726513448197712e+47, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.6488506159957308e+224, -221358330659368220.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.510216432780987e-48, 3.372780273104846e+43, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.57755027666571e-220, -5.022813933569791e+269, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.941932051973428e-50, 2.201819625795071e+112, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.2325282544389905e+55, -6.533274520562463e+31, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.3400878569317199e-101, -4.377889933569378e+269, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.324397480831342e-113, 4.1295749224510035e+93, 0.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0x30, 0xE6, 3.64338996559463e+210, -1.2140568223563604e-14, 0.9999999999941138)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1726832637049545e+58, 6.442509717986818e+112, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 67753.16966256763, 1.7820897918818048e+59, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.7186737815444085e-37, -5.892560232568519e+95, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.325219147581434e-42, 1.6495163034731639e+100, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1096634146103538e-53, 3.7150697547861076e-308, 1.0)
	assertULP(Math.pow, 0x3F, 0xEF, 0xFF, 0xFE, 0xAA, 0x08, 0xCA, 0x26, 3.1193139722525335e-289, 9.58831555455125e-10, 0.999999363039312)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5661411122573542e-274, 2.4694538913055007e-265, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.080677975152588e+256, 2.550471467368235e+37, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -7.145194242384039e-307, 5.577186941853303e+190, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.6035012650722205e-88, -9.87848443114434e+288, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1190956181019136e-296, -2.913408001085767e-256, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3858844974126242e-131, -5.774031685421842e-105, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8291025963236703e-128, 4.9604013014908725e+271, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.5434003855835655e-21, 2.2935758569421594e+275, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.459823288811323e+84, 4.335648798453913e+187, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3069799496144105e-47, 2.724506175926972e+279, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.636422041669232e+241, 1.4342968298223214e+66, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.3651983116850287e-107, -2.5280006514972576e+72, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3102256570121433e+196, 9.719831869803848e+240, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.551094646737576e+296, 7902833058955064.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.1736277957298175e-172, -1.1049975561077923e+128, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.506010414334014e-05, -2.673976792291339e-109, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7789462819690259e-109, 2.52942961620722e+47, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4721192926758493e+208, -7.832863759637337e-260, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -2.5553602363331443e-116, 3.142346012224051e+234, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.386849118775804e+216, 9095972323979813000000000.0, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5536376858925577e-307, -5.418534613203739e+245, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.736928722366231e-48, 2.4529840446469763e-98, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 969558625625873.1, 429.46783569028435, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6482792453495918e+221, -4.737376771701272e-169, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0366052924119275e+177, -1.3511678692363946e-45, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9575279891468625e-23, -7.743506117865285e+144, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8350946249260703e+167, 7.503190545286811e-94, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.483541037596241e+227, -2.577177482965053e-75, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8523035.170083662, 1.8391281348091498e+129, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.494736511177806e-20, 5.222348064999817e+113, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.48203573527917e-06, -5.072532430538247e-200, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.715398560246728e-93, 2.0689345907810358e+273, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.055245889864297e-58, 8.972481576392638e-229, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1755589084437498e+88, 1.3961870981582336e-128, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.784366311069783e+179, 7.137669248833726e+169, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.692670160535986e+191, -2.4666477080181918e+284, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.358265904793748e-232, 1.6568885240900544e-201, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7282040109597312e-28, -1.0529391837833085e+69, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.657952782815397e-32, -1.389923555049106e-64, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1874522136381202e+206, -9.988274150795714e+185, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2377514811362713e-198, -2.8588936401256548e-185, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.4577881575110906e+53, -8.880242072771574e-100, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.190890936592942e-91, 1.3826022632619007e-118, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1230222622843296e-163, -1.2446137757509258e-265, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -4.5961811838341e-213, -7.643415312078039e+80, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.9440089175080245e+264, -2.4946265972350173e-171, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.768448624767308e-67, -4.676253013787328e+177, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8286143346234466e-124, -3.752098165725771e+51, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.851743329839614e+293, 3.411315000050691e+238, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.9132324672235356e-111, -1.3161984188783083e+106, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3805484096542165e-10, -2.9896971928301254e-176, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1250938638490274e-216, -1.267154491396335e-217, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.8218722212794525e+83, -1.7954011900345138e+258, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.414072299059834e+289, -8.48591401348481e-247, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.444042457813215e-114, -4.510462659198385e+56, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1649386876892568e+189, 1.259745541288365e+220, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.574776746395745e+275, -3.0363885119221245e-168, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.962224887612725e-296, -4.96416238058876e-282, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7660063360237765000.0, -6.959196146301467e-183, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.222995240096214e-96, -6.470368172439911e+39, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.2191640050519366e+285, -1.4296480436172333e-275, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.733486192089087e+43, 5.396823491148572e-138, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.036533867261545e+147, 1.1669747006366589e+286, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.696215383857363e-63, -1.0918352589536796e-198, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.7140063398575004e+156, -3.1275457397694794e+118, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.2662254282825851e+298, -4.2044918872946365e+99, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.2173685210213966e+37, -4.535002975829284e+281, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.328452208308369e+199, -1.0184653826179934e-39, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.287367643293122e+153, 7.68357170795937e+305, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.115745658024914e-133, -1.1958494179150897e-66, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.7648089450728e+232, 1.0603593393783354e-187, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.6641653362380117e+36, 1.856443149158735e-271, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.119046920478322e+106, 2.8340709307066583e+143, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.0685971228983406e+304, 1.2881773586192367e+265, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.8879831117316928e-109, 1.8472551428546624e+44, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 23773570663080244.0, -4.922495993785762e+146, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.353075670850354e+178, -9.168105271295098e+58, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7243942207514038e+161, 1.3091401114991387e+82, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.075895108109643e+100, 2.9982945662783327e-229, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.7914040356446196e+66, -6.802108815289438e-135, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.043721467578027e+77, -2.608324163422038e-48, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.193920081944595e+268, -394191798139.8382, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.1949378623539274e+135, -4.021164901336885e-267, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.6917584445959394e+93, -1.5216410875264314e+38, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.9017854842962443e+109, 1.8972361937449542e+215, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.1493045977983236e-129, -2.836933388365112e+191, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.203476178188088e-173, 8.092499189850182e+152, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.642876071568098e+142, -3.306109356576143e-196, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 6.872843834301778e-156, 3.205278159840405e-236, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 5.303724102587402e+109, -5.094201268169661e+169, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -3.1244303815111977e+181, -1.6953297794678553e+130, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.462380385064582e+258, 4.237520042912905e-283, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.580234049145784e+217, 2.8789604643326343e-172, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 344911509.67705864, -544337314907150300000000.0, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -6.651903975554234e+248, -9.389292934149346e+254, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -51595215590215450000000000000.0, -8.466536697818817e+69, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.349249265929203e+255, -1.6841043291289595e+282, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.3612327490948894e+275, 9.313686180655682e+259, Infinity)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.7770149544393358e+152, 1.0173694846676018e+291, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1.1482482716367662e-174, 5.188138802872978e+278, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 7.443280056592398e+167, 3.839985976967067e-299, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.210118879045308e+243, -412.9680249220422, 0.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 9.871901015515125e-212, 3382112625.2048783, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.6521665495059804e+244, 3.189111829029085e-242, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1288049722591524e-134, -1.2591881367986795e-273, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 381502.85782157927, -1.0530510086443803e+198, 0.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.8661594677213e-232, -1.099699636389545e+146, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.276644886607943e-296, -7.117516900496854e-116, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -1738209467452507800000.0, 2.3909835816426e+32, Infinity)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 3.008884250156223e+160, -776.8540990543977, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.0035661224490057e+98, 2.4601644940495583e-206, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 4.305767843247802e-184, -4.15805073271417e-237, 1.0)
	assertULP(Math.pow, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, -5.1377688956979005e-205, 9.258148540930595e+142, 0.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 198813918198813900000000000.0, 6.2785088341644664e-273, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.1308092759478678e+304, 1.429997009433079e+90, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 391039073133216300000.0, 1.2941781931172416e-24, 1.0)
	assertULP(Math.pow, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 255385.77967959398, 2.4106488943472595e+144, Infinity)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.641744871307517e+267, 1.4398471980074958e-146, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 1.5727021393451305e-53, -4.1313927185463487e-144, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 2.4775192511863956e+147, -4.349970231134497e-239, 1.0)
	assertULP(Math.pow, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 8.377612408764368e-233, -3.2469147062565803e-94, 1.0)
}